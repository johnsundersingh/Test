//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DioWeb.DioService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MetaData", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class MetaData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int metaDataIDField;
        
        private string nameField;
        
        private string valueField;
        
        private System.DateTime createdDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int metaDataID {
            get {
                return this.metaDataIDField;
            }
            set {
                if ((this.metaDataIDField.Equals(value) != true)) {
                    this.metaDataIDField = value;
                    this.RaisePropertyChanged("metaDataID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                if ((object.ReferenceEquals(this.valueField, value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime createdDate {
            get {
                return this.createdDateField;
            }
            set {
                if ((this.createdDateField.Equals(value) != true)) {
                    this.createdDateField = value;
                    this.RaisePropertyChanged("createdDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StorageType", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class StorageType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int storageTypeIDField;
        
        private string nameField;
        
        private double powerPerMBField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int storageTypeID {
            get {
                return this.storageTypeIDField;
            }
            set {
                if ((this.storageTypeIDField.Equals(value) != true)) {
                    this.storageTypeIDField = value;
                    this.RaisePropertyChanged("storageTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public double powerPerMB {
            get {
                return this.powerPerMBField;
            }
            set {
                if ((this.powerPerMBField.Equals(value) != true)) {
                    this.powerPerMBField = value;
                    this.RaisePropertyChanged("powerPerMB");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhysicalFileInfo", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class PhysicalFileInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long physicalFileIDField;
        
        private int storageTypeIDField;
        
        private double powerField;
        
        private System.DateTime requestedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> createdDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> exercisedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> expirationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long physicalFileID {
            get {
                return this.physicalFileIDField;
            }
            set {
                if ((this.physicalFileIDField.Equals(value) != true)) {
                    this.physicalFileIDField = value;
                    this.RaisePropertyChanged("physicalFileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int storageTypeID {
            get {
                return this.storageTypeIDField;
            }
            set {
                if ((this.storageTypeIDField.Equals(value) != true)) {
                    this.storageTypeIDField = value;
                    this.RaisePropertyChanged("storageTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public double power {
            get {
                return this.powerField;
            }
            set {
                if ((this.powerField.Equals(value) != true)) {
                    this.powerField = value;
                    this.RaisePropertyChanged("power");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime requestedDate {
            get {
                return this.requestedDateField;
            }
            set {
                if ((this.requestedDateField.Equals(value) != true)) {
                    this.requestedDateField = value;
                    this.RaisePropertyChanged("requestedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<System.DateTime> createdDate {
            get {
                return this.createdDateField;
            }
            set {
                if ((this.createdDateField.Equals(value) != true)) {
                    this.createdDateField = value;
                    this.RaisePropertyChanged("createdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<System.DateTime> exercisedDate {
            get {
                return this.exercisedDateField;
            }
            set {
                if ((this.exercisedDateField.Equals(value) != true)) {
                    this.exercisedDateField = value;
                    this.RaisePropertyChanged("exercisedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Nullable<System.DateTime> expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                if ((this.expirationDateField.Equals(value) != true)) {
                    this.expirationDateField = value;
                    this.RaisePropertyChanged("expirationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UploadLogEntry", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class UploadLogEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long fileIDField;
        
        private System.DateTime uploadTimeField;
        
        private string uploaderIPField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long fileID {
            get {
                return this.fileIDField;
            }
            set {
                if ((this.fileIDField.Equals(value) != true)) {
                    this.fileIDField = value;
                    this.RaisePropertyChanged("fileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime uploadTime {
            get {
                return this.uploadTimeField;
            }
            set {
                if ((this.uploadTimeField.Equals(value) != true)) {
                    this.uploadTimeField = value;
                    this.RaisePropertyChanged("uploadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string uploaderIP {
            get {
                return this.uploaderIPField;
            }
            set {
                if ((object.ReferenceEquals(this.uploaderIPField, value) != true)) {
                    this.uploaderIPField = value;
                    this.RaisePropertyChanged("uploaderIP");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadLogEntry", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class DownloadLogEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long fileIDField;
        
        private System.DateTime startTimeField;
        
        private System.DateTime endTimeField;
        
        private string downloadTokenField;
        
        private string downloaderIPField;
        
        private long startByteField;
        
        private long byteCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long fileID {
            get {
                return this.fileIDField;
            }
            set {
                if ((this.fileIDField.Equals(value) != true)) {
                    this.fileIDField = value;
                    this.RaisePropertyChanged("fileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime startTime {
            get {
                return this.startTimeField;
            }
            set {
                if ((this.startTimeField.Equals(value) != true)) {
                    this.startTimeField = value;
                    this.RaisePropertyChanged("startTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.DateTime endTime {
            get {
                return this.endTimeField;
            }
            set {
                if ((this.endTimeField.Equals(value) != true)) {
                    this.endTimeField = value;
                    this.RaisePropertyChanged("endTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string downloadToken {
            get {
                return this.downloadTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.downloadTokenField, value) != true)) {
                    this.downloadTokenField = value;
                    this.RaisePropertyChanged("downloadToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public string downloaderIP {
            get {
                return this.downloaderIPField;
            }
            set {
                if ((object.ReferenceEquals(this.downloaderIPField, value) != true)) {
                    this.downloaderIPField = value;
                    this.RaisePropertyChanged("downloaderIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public long startByte {
            get {
                return this.startByteField;
            }
            set {
                if ((this.startByteField.Equals(value) != true)) {
                    this.startByteField = value;
                    this.RaisePropertyChanged("startByte");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public long byteCount {
            get {
                return this.byteCountField;
            }
            set {
                if ((this.byteCountField.Equals(value) != true)) {
                    this.byteCountField = value;
                    this.RaisePropertyChanged("byteCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginLogEntry", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class LoginLogEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid userIDField;
        
        private System.DateTime loginDateField;
        
        private string loginIPField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.DateTime loginDate {
            get {
                return this.loginDateField;
            }
            set {
                if ((this.loginDateField.Equals(value) != true)) {
                    this.loginDateField = value;
                    this.RaisePropertyChanged("loginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string loginIP {
            get {
                return this.loginIPField;
            }
            set {
                if ((object.ReferenceEquals(this.loginIPField, value) != true)) {
                    this.loginIPField = value;
                    this.RaisePropertyChanged("loginIP");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int productIDField;
        
        private string nameField;
        
        private string descriptionField;
        
        private int minMonthlyFeeField;
        
        private System.Collections.Generic.List<DioWeb.DioService.ProductComponent> componentsField;
        
        private int supportFeeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int productID {
            get {
                return this.productIDField;
            }
            set {
                if ((this.productIDField.Equals(value) != true)) {
                    this.productIDField = value;
                    this.RaisePropertyChanged("productID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int minMonthlyFee {
            get {
                return this.minMonthlyFeeField;
            }
            set {
                if ((this.minMonthlyFeeField.Equals(value) != true)) {
                    this.minMonthlyFeeField = value;
                    this.RaisePropertyChanged("minMonthlyFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.Collections.Generic.List<DioWeb.DioService.ProductComponent> components {
            get {
                return this.componentsField;
            }
            set {
                if ((object.ReferenceEquals(this.componentsField, value) != true)) {
                    this.componentsField = value;
                    this.RaisePropertyChanged("components");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int supportFee {
            get {
                return this.supportFeeField;
            }
            set {
                if ((this.supportFeeField.Equals(value) != true)) {
                    this.supportFeeField = value;
                    this.RaisePropertyChanged("supportFee");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductComponent", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class ProductComponent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string descriptionField;
        
        private int storageTypeIDField;
        
        private string meterTypeField;
        
        private int ratePerGBField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int storageTypeID {
            get {
                return this.storageTypeIDField;
            }
            set {
                if ((this.storageTypeIDField.Equals(value) != true)) {
                    this.storageTypeIDField = value;
                    this.RaisePropertyChanged("storageTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string meterType {
            get {
                return this.meterTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.meterTypeField, value) != true)) {
                    this.meterTypeField = value;
                    this.RaisePropertyChanged("meterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int ratePerGB {
            get {
                return this.ratePerGBField;
            }
            set {
                if ((this.ratePerGBField.Equals(value) != true)) {
                    this.ratePerGBField = value;
                    this.RaisePropertyChanged("ratePerGB");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProduct", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class UserProduct : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private DioWeb.DioService.Product productField;
        
        private bool withSupportField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public DioWeb.DioService.Product product {
            get {
                return this.productField;
            }
            set {
                if ((object.ReferenceEquals(this.productField, value) != true)) {
                    this.productField = value;
                    this.RaisePropertyChanged("product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool withSupport {
            get {
                return this.withSupportField;
            }
            set {
                if ((this.withSupportField.Equals(value) != true)) {
                    this.withSupportField = value;
                    this.RaisePropertyChanged("withSupport");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contract", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class Contract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int contractIDField;
        
        private int ratePerTermField;
        
        private int termField;
        
        private System.Collections.Generic.List<DioWeb.DioService.ContractComponent> componentsField;
        
        private string descriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int contractID {
            get {
                return this.contractIDField;
            }
            set {
                if ((this.contractIDField.Equals(value) != true)) {
                    this.contractIDField = value;
                    this.RaisePropertyChanged("contractID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ratePerTerm {
            get {
                return this.ratePerTermField;
            }
            set {
                if ((this.ratePerTermField.Equals(value) != true)) {
                    this.ratePerTermField = value;
                    this.RaisePropertyChanged("ratePerTerm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int term {
            get {
                return this.termField;
            }
            set {
                if ((this.termField.Equals(value) != true)) {
                    this.termField = value;
                    this.RaisePropertyChanged("term");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.Collections.Generic.List<DioWeb.DioService.ContractComponent> components {
            get {
                return this.componentsField;
            }
            set {
                if ((object.ReferenceEquals(this.componentsField, value) != true)) {
                    this.componentsField = value;
                    this.RaisePropertyChanged("components");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContractComponent", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class ContractComponent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int storageTypeIDField;
        
        private string meterTypeField;
        
        private int committedGBField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int storageTypeID {
            get {
                return this.storageTypeIDField;
            }
            set {
                if ((this.storageTypeIDField.Equals(value) != true)) {
                    this.storageTypeIDField = value;
                    this.RaisePropertyChanged("storageTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string meterType {
            get {
                return this.meterTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.meterTypeField, value) != true)) {
                    this.meterTypeField = value;
                    this.RaisePropertyChanged("meterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int committedGB {
            get {
                return this.committedGBField;
            }
            set {
                if ((this.committedGBField.Equals(value) != true)) {
                    this.committedGBField = value;
                    this.RaisePropertyChanged("committedGB");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserContract", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class UserContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long userContractIDField;
        
        private DioWeb.DioService.Contract contractField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long userContractID {
            get {
                return this.userContractIDField;
            }
            set {
                if ((this.userContractIDField.Equals(value) != true)) {
                    this.userContractIDField = value;
                    this.RaisePropertyChanged("userContractID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public DioWeb.DioService.Contract contract {
            get {
                return this.contractField;
            }
            set {
                if ((object.ReferenceEquals(this.contractField, value) != true)) {
                    this.contractField = value;
                    this.RaisePropertyChanged("contract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.DateTime startDate {
            get {
                return this.startDateField;
            }
            set {
                if ((this.startDateField.Equals(value) != true)) {
                    this.startDateField = value;
                    this.RaisePropertyChanged("startDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime endDate {
            get {
                return this.endDateField;
            }
            set {
                if ((this.endDateField.Equals(value) != true)) {
                    this.endDateField = value;
                    this.RaisePropertyChanged("endDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceStatus", Namespace="http://data.diomedestorage.com")]
    public enum InvoiceStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        unPaid = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        paid = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceLogEntry", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class InvoiceLogEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long invoiceNumberField;
        
        private System.DateTime invoiceDateField;
        
        private System.Collections.Generic.List<DioWeb.DioService.InvoiceDetail> invoiceDetailsField;
        
        private string invoiceNoteField;
        
        private int totalAmountField;
        
        private bool isPaidField;
        
        private DioWeb.DioService.PaymentInfo paymentInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long invoiceNumber {
            get {
                return this.invoiceNumberField;
            }
            set {
                if ((this.invoiceNumberField.Equals(value) != true)) {
                    this.invoiceNumberField = value;
                    this.RaisePropertyChanged("invoiceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.DateTime invoiceDate {
            get {
                return this.invoiceDateField;
            }
            set {
                if ((this.invoiceDateField.Equals(value) != true)) {
                    this.invoiceDateField = value;
                    this.RaisePropertyChanged("invoiceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.Collections.Generic.List<DioWeb.DioService.InvoiceDetail> invoiceDetails {
            get {
                return this.invoiceDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.invoiceDetailsField, value) != true)) {
                    this.invoiceDetailsField = value;
                    this.RaisePropertyChanged("invoiceDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string invoiceNote {
            get {
                return this.invoiceNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.invoiceNoteField, value) != true)) {
                    this.invoiceNoteField = value;
                    this.RaisePropertyChanged("invoiceNote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int totalAmount {
            get {
                return this.totalAmountField;
            }
            set {
                if ((this.totalAmountField.Equals(value) != true)) {
                    this.totalAmountField = value;
                    this.RaisePropertyChanged("totalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public bool isPaid {
            get {
                return this.isPaidField;
            }
            set {
                if ((this.isPaidField.Equals(value) != true)) {
                    this.isPaidField = value;
                    this.RaisePropertyChanged("isPaid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public DioWeb.DioService.PaymentInfo paymentInfo {
            get {
                return this.paymentInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.paymentInfoField, value) != true)) {
                    this.paymentInfoField = value;
                    this.RaisePropertyChanged("paymentInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentInfo", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class PaymentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime paymentDateField;
        
        private int amountField;
        
        private DioWeb.DioService.PaymentMethods paymentTypeField;
        
        private string paymentNoteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime paymentDate {
            get {
                return this.paymentDateField;
            }
            set {
                if ((this.paymentDateField.Equals(value) != true)) {
                    this.paymentDateField = value;
                    this.RaisePropertyChanged("paymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int amount {
            get {
                return this.amountField;
            }
            set {
                if ((this.amountField.Equals(value) != true)) {
                    this.amountField = value;
                    this.RaisePropertyChanged("amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public DioWeb.DioService.PaymentMethods paymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                if ((this.paymentTypeField.Equals(value) != true)) {
                    this.paymentTypeField = value;
                    this.RaisePropertyChanged("paymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string paymentNote {
            get {
                return this.paymentNoteField;
            }
            set {
                if ((object.ReferenceEquals(this.paymentNoteField, value) != true)) {
                    this.paymentNoteField = value;
                    this.RaisePropertyChanged("paymentNote");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceDetail", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class InvoiceDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string itemDescriptionField;
        
        private int amountField;
        
        private string remarksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string itemDescription {
            get {
                return this.itemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.itemDescriptionField, value) != true)) {
                    this.itemDescriptionField = value;
                    this.RaisePropertyChanged("itemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int amount {
            get {
                return this.amountField;
            }
            set {
                if ((this.amountField.Equals(value) != true)) {
                    this.amountField = value;
                    this.RaisePropertyChanged("amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                if ((object.ReferenceEquals(this.remarksField, value) != true)) {
                    this.remarksField = value;
                    this.RaisePropertyChanged("remarks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentMethods", Namespace="http://data.diomedestorage.com")]
    public enum PaymentMethods : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        none = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        creditCard = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        manual = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchFilesTotalInfo", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class SearchFilesTotalInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int fileCountField;
        
        private long fileBytesField;
        
        private int deletedFileCountField;
        
        private long deletedFileBytesField;
        
        private int downloadCountField;
        
        private long downloadBytesField;
        
        private int uploadCountField;
        
        private long uploadBytesField;
        
        private System.Collections.Generic.List<DioWeb.DioService.SearchFilesTotalStorageInfo> storageTotalInfoField;
        
        private System.DateTime createdDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int fileCount {
            get {
                return this.fileCountField;
            }
            set {
                if ((this.fileCountField.Equals(value) != true)) {
                    this.fileCountField = value;
                    this.RaisePropertyChanged("fileCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public long fileBytes {
            get {
                return this.fileBytesField;
            }
            set {
                if ((this.fileBytesField.Equals(value) != true)) {
                    this.fileBytesField = value;
                    this.RaisePropertyChanged("fileBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int deletedFileCount {
            get {
                return this.deletedFileCountField;
            }
            set {
                if ((this.deletedFileCountField.Equals(value) != true)) {
                    this.deletedFileCountField = value;
                    this.RaisePropertyChanged("deletedFileCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public long deletedFileBytes {
            get {
                return this.deletedFileBytesField;
            }
            set {
                if ((this.deletedFileBytesField.Equals(value) != true)) {
                    this.deletedFileBytesField = value;
                    this.RaisePropertyChanged("deletedFileBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int downloadCount {
            get {
                return this.downloadCountField;
            }
            set {
                if ((this.downloadCountField.Equals(value) != true)) {
                    this.downloadCountField = value;
                    this.RaisePropertyChanged("downloadCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public long downloadBytes {
            get {
                return this.downloadBytesField;
            }
            set {
                if ((this.downloadBytesField.Equals(value) != true)) {
                    this.downloadBytesField = value;
                    this.RaisePropertyChanged("downloadBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public int uploadCount {
            get {
                return this.uploadCountField;
            }
            set {
                if ((this.uploadCountField.Equals(value) != true)) {
                    this.uploadCountField = value;
                    this.RaisePropertyChanged("uploadCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public long uploadBytes {
            get {
                return this.uploadBytesField;
            }
            set {
                if ((this.uploadBytesField.Equals(value) != true)) {
                    this.uploadBytesField = value;
                    this.RaisePropertyChanged("uploadBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public System.Collections.Generic.List<DioWeb.DioService.SearchFilesTotalStorageInfo> storageTotalInfo {
            get {
                return this.storageTotalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.storageTotalInfoField, value) != true)) {
                    this.storageTotalInfoField = value;
                    this.RaisePropertyChanged("storageTotalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public System.DateTime createdDate {
            get {
                return this.createdDateField;
            }
            set {
                if ((this.createdDateField.Equals(value) != true)) {
                    this.createdDateField = value;
                    this.RaisePropertyChanged("createdDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchFilesTotalStorageInfo", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class SearchFilesTotalStorageInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int storageTypeIDField;
        
        private int fileCountField;
        
        private long fileBytesField;
        
        private double powerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int storageTypeID {
            get {
                return this.storageTypeIDField;
            }
            set {
                if ((this.storageTypeIDField.Equals(value) != true)) {
                    this.storageTypeIDField = value;
                    this.RaisePropertyChanged("storageTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int fileCount {
            get {
                return this.fileCountField;
            }
            set {
                if ((this.fileCountField.Equals(value) != true)) {
                    this.fileCountField = value;
                    this.RaisePropertyChanged("fileCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public long fileBytes {
            get {
                return this.fileBytesField;
            }
            set {
                if ((this.fileBytesField.Equals(value) != true)) {
                    this.fileBytesField = value;
                    this.RaisePropertyChanged("fileBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public double power {
            get {
                return this.powerField;
            }
            set {
                if ((this.powerField.Equals(value) != true)) {
                    this.powerField = value;
                    this.RaisePropertyChanged("power");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string userNameField;
        
        private string companyNameField;
        
        private string websiteUrlField;
        
        private string lastNameField;
        
        private string firstNameField;
        
        private string phoneField;
        
        private System.DateTime createdDateField;
        
        private string cardNameField;
        
        private string cardNumberField;
        
        private int cardExpiryYearField;
        
        private int cardExpiryMonthField;
        
        private string cardCvv2Field;
        
        private string cardAddress1Field;
        
        private string cardAddress2Field;
        
        private string cardCityField;
        
        private string cardStateField;
        
        private string cardZipField;
        
        private string cardCountryField;
        
        private DioWeb.DioService.UserAccountTypes accountTypeField;
        
        private int minMonthlyFeeField;
        
        private int monthlySupportFeeField;
        
        private DioWeb.DioService.PaymentMethods paymentMethodField;
        
        private System.Nullable<System.DateTime> paymentDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string companyName {
            get {
                return this.companyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.companyNameField, value) != true)) {
                    this.companyNameField = value;
                    this.RaisePropertyChanged("companyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string websiteUrl {
            get {
                return this.websiteUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.websiteUrlField, value) != true)) {
                    this.websiteUrlField = value;
                    this.RaisePropertyChanged("websiteUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.DateTime createdDate {
            get {
                return this.createdDateField;
            }
            set {
                if ((this.createdDateField.Equals(value) != true)) {
                    this.createdDateField = value;
                    this.RaisePropertyChanged("createdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public string cardName {
            get {
                return this.cardNameField;
            }
            set {
                if ((object.ReferenceEquals(this.cardNameField, value) != true)) {
                    this.cardNameField = value;
                    this.RaisePropertyChanged("cardName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public string cardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.cardNumberField, value) != true)) {
                    this.cardNumberField = value;
                    this.RaisePropertyChanged("cardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public int cardExpiryYear {
            get {
                return this.cardExpiryYearField;
            }
            set {
                if ((this.cardExpiryYearField.Equals(value) != true)) {
                    this.cardExpiryYearField = value;
                    this.RaisePropertyChanged("cardExpiryYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public int cardExpiryMonth {
            get {
                return this.cardExpiryMonthField;
            }
            set {
                if ((this.cardExpiryMonthField.Equals(value) != true)) {
                    this.cardExpiryMonthField = value;
                    this.RaisePropertyChanged("cardExpiryMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public string cardCvv2 {
            get {
                return this.cardCvv2Field;
            }
            set {
                if ((object.ReferenceEquals(this.cardCvv2Field, value) != true)) {
                    this.cardCvv2Field = value;
                    this.RaisePropertyChanged("cardCvv2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public string cardAddress1 {
            get {
                return this.cardAddress1Field;
            }
            set {
                if ((object.ReferenceEquals(this.cardAddress1Field, value) != true)) {
                    this.cardAddress1Field = value;
                    this.RaisePropertyChanged("cardAddress1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public string cardAddress2 {
            get {
                return this.cardAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.cardAddress2Field, value) != true)) {
                    this.cardAddress2Field = value;
                    this.RaisePropertyChanged("cardAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public string cardCity {
            get {
                return this.cardCityField;
            }
            set {
                if ((object.ReferenceEquals(this.cardCityField, value) != true)) {
                    this.cardCityField = value;
                    this.RaisePropertyChanged("cardCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=15)]
        public string cardState {
            get {
                return this.cardStateField;
            }
            set {
                if ((object.ReferenceEquals(this.cardStateField, value) != true)) {
                    this.cardStateField = value;
                    this.RaisePropertyChanged("cardState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public string cardZip {
            get {
                return this.cardZipField;
            }
            set {
                if ((object.ReferenceEquals(this.cardZipField, value) != true)) {
                    this.cardZipField = value;
                    this.RaisePropertyChanged("cardZip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=17)]
        public string cardCountry {
            get {
                return this.cardCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.cardCountryField, value) != true)) {
                    this.cardCountryField = value;
                    this.RaisePropertyChanged("cardCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=18)]
        public DioWeb.DioService.UserAccountTypes accountType {
            get {
                return this.accountTypeField;
            }
            set {
                if ((this.accountTypeField.Equals(value) != true)) {
                    this.accountTypeField = value;
                    this.RaisePropertyChanged("accountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=19)]
        public int minMonthlyFee {
            get {
                return this.minMonthlyFeeField;
            }
            set {
                if ((this.minMonthlyFeeField.Equals(value) != true)) {
                    this.minMonthlyFeeField = value;
                    this.RaisePropertyChanged("minMonthlyFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=20)]
        public int monthlySupportFee {
            get {
                return this.monthlySupportFeeField;
            }
            set {
                if ((this.monthlySupportFeeField.Equals(value) != true)) {
                    this.monthlySupportFeeField = value;
                    this.RaisePropertyChanged("monthlySupportFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=21)]
        public DioWeb.DioService.PaymentMethods paymentMethod {
            get {
                return this.paymentMethodField;
            }
            set {
                if ((this.paymentMethodField.Equals(value) != true)) {
                    this.paymentMethodField = value;
                    this.RaisePropertyChanged("paymentMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=22)]
        public System.Nullable<System.DateTime> paymentDate {
            get {
                return this.paymentDateField;
            }
            set {
                if ((this.paymentDateField.Equals(value) != true)) {
                    this.paymentDateField = value;
                    this.RaisePropertyChanged("paymentDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAccountTypes", Namespace="http://data.diomedestorage.com")]
    public enum UserAccountTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        freeAccount = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        paidAccount = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfoType", Namespace="http://data.diomedestorage.com")]
    public enum UserInfoType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        companyName = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        websiteUrl = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        lastName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        firstName = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        phone = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        cardName = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        cardNumber = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        cardExpiryYear = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        cardCvv2 = 1024,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        cardAddress1 = 2048,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        cardAddress2 = 4096,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        cardCity = 8192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        cardState = 16384,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        cardZip = 32768,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        cardCountry = 65536,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        allUserInfo = 131072,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        allBillingInfo = 262144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        cardExpiryMonth = 524288,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentLogEntry", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class PaymentLogEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string currencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double amountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime completedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string currency {
            get {
                return this.currencyField;
            }
            set {
                if ((object.ReferenceEquals(this.currencyField, value) != true)) {
                    this.currencyField = value;
                    this.RaisePropertyChanged("currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public double amount {
            get {
                return this.amountField;
            }
            set {
                if ((this.amountField.Equals(value) != true)) {
                    this.amountField = value;
                    this.RaisePropertyChanged("amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime completedDate {
            get {
                return this.completedDateField;
            }
            set {
                if ((this.completedDateField.Equals(value) != true)) {
                    this.completedDateField = value;
                    this.RaisePropertyChanged("completedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReplicationPolicy", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class ReplicationPolicy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int replicationPolicyIDField;
        
        private int defaultNumOnlineField;
        
        private int defaultNumNearlineField;
        
        private int defaultNumOfflineField;
        
        private int lastAccessTriggerHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int lastAccessTriggerNumOnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int lastAccessTriggerNumNearlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int lastAccessTriggerNumOfflineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> expireHoursField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int replicationPolicyID {
            get {
                return this.replicationPolicyIDField;
            }
            set {
                if ((this.replicationPolicyIDField.Equals(value) != true)) {
                    this.replicationPolicyIDField = value;
                    this.RaisePropertyChanged("replicationPolicyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int defaultNumOnline {
            get {
                return this.defaultNumOnlineField;
            }
            set {
                if ((this.defaultNumOnlineField.Equals(value) != true)) {
                    this.defaultNumOnlineField = value;
                    this.RaisePropertyChanged("defaultNumOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int defaultNumNearline {
            get {
                return this.defaultNumNearlineField;
            }
            set {
                if ((this.defaultNumNearlineField.Equals(value) != true)) {
                    this.defaultNumNearlineField = value;
                    this.RaisePropertyChanged("defaultNumNearline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int defaultNumOffline {
            get {
                return this.defaultNumOfflineField;
            }
            set {
                if ((this.defaultNumOfflineField.Equals(value) != true)) {
                    this.defaultNumOfflineField = value;
                    this.RaisePropertyChanged("defaultNumOffline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int lastAccessTriggerHours {
            get {
                return this.lastAccessTriggerHoursField;
            }
            set {
                if ((this.lastAccessTriggerHoursField.Equals(value) != true)) {
                    this.lastAccessTriggerHoursField = value;
                    this.RaisePropertyChanged("lastAccessTriggerHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int lastAccessTriggerNumOnline {
            get {
                return this.lastAccessTriggerNumOnlineField;
            }
            set {
                if ((this.lastAccessTriggerNumOnlineField.Equals(value) != true)) {
                    this.lastAccessTriggerNumOnlineField = value;
                    this.RaisePropertyChanged("lastAccessTriggerNumOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int lastAccessTriggerNumNearline {
            get {
                return this.lastAccessTriggerNumNearlineField;
            }
            set {
                if ((this.lastAccessTriggerNumNearlineField.Equals(value) != true)) {
                    this.lastAccessTriggerNumNearlineField = value;
                    this.RaisePropertyChanged("lastAccessTriggerNumNearline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int lastAccessTriggerNumOffline {
            get {
                return this.lastAccessTriggerNumOfflineField;
            }
            set {
                if ((this.lastAccessTriggerNumOfflineField.Equals(value) != true)) {
                    this.lastAccessTriggerNumOfflineField = value;
                    this.RaisePropertyChanged("lastAccessTriggerNumOffline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.Nullable<int> expireHours {
            get {
                return this.expireHoursField;
            }
            set {
                if ((this.expireHoursField.Equals(value) != true)) {
                    this.expireHoursField = value;
                    this.RaisePropertyChanged("expireHours");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConsumerData", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class ConsumerData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long oauthIDField;
        
        private string consumerKeyField;
        
        private string consumerSecretField;
        
        private System.Guid userIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long oauthID {
            get {
                return this.oauthIDField;
            }
            set {
                if ((this.oauthIDField.Equals(value) != true)) {
                    this.oauthIDField = value;
                    this.RaisePropertyChanged("oauthID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string consumerKey {
            get {
                return this.consumerKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.consumerKeyField, value) != true)) {
                    this.consumerKeyField = value;
                    this.RaisePropertyChanged("consumerKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string consumerSecret {
            get {
                return this.consumerSecretField;
            }
            set {
                if ((object.ReferenceEquals(this.consumerSecretField, value) != true)) {
                    this.consumerSecretField = value;
                    this.RaisePropertyChanged("consumerSecret");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.Guid userID {
            get {
                return this.userIDField;
            }
            set {
                if ((this.userIDField.Equals(value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileProperties", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DioWeb.DioService.RestFileProperties))]
    public partial class FileProperties : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long fileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hashMD5Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hashSHA1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long fileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createdDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime lastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> lastAccessDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double powerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> replicationPolicyIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long fileID {
            get {
                return this.fileIDField;
            }
            set {
                if ((this.fileIDField.Equals(value) != true)) {
                    this.fileIDField = value;
                    this.RaisePropertyChanged("fileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fileNameField, value) != true)) {
                    this.fileNameField = value;
                    this.RaisePropertyChanged("fileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hashMD5 {
            get {
                return this.hashMD5Field;
            }
            set {
                if ((object.ReferenceEquals(this.hashMD5Field, value) != true)) {
                    this.hashMD5Field = value;
                    this.RaisePropertyChanged("hashMD5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hashSHA1 {
            get {
                return this.hashSHA1Field;
            }
            set {
                if ((object.ReferenceEquals(this.hashSHA1Field, value) != true)) {
                    this.hashSHA1Field = value;
                    this.RaisePropertyChanged("hashSHA1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public long fileSize {
            get {
                return this.fileSizeField;
            }
            set {
                if ((this.fileSizeField.Equals(value) != true)) {
                    this.fileSizeField = value;
                    this.RaisePropertyChanged("fileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.DateTime createdDate {
            get {
                return this.createdDateField;
            }
            set {
                if ((this.createdDateField.Equals(value) != true)) {
                    this.createdDateField = value;
                    this.RaisePropertyChanged("createdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.DateTime lastModifiedDate {
            get {
                return this.lastModifiedDateField;
            }
            set {
                if ((this.lastModifiedDateField.Equals(value) != true)) {
                    this.lastModifiedDateField = value;
                    this.RaisePropertyChanged("lastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Nullable<System.DateTime> lastAccessDate {
            get {
                return this.lastAccessDateField;
            }
            set {
                if ((this.lastAccessDateField.Equals(value) != true)) {
                    this.lastAccessDateField = value;
                    this.RaisePropertyChanged("lastAccessDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool isDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                if ((this.isDeletedField.Equals(value) != true)) {
                    this.isDeletedField = value;
                    this.RaisePropertyChanged("isDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public double power {
            get {
                return this.powerField;
            }
            set {
                if ((this.powerField.Equals(value) != true)) {
                    this.powerField = value;
                    this.RaisePropertyChanged("power");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public bool isComplete {
            get {
                return this.isCompleteField;
            }
            set {
                if ((this.isCompleteField.Equals(value) != true)) {
                    this.isCompleteField = value;
                    this.RaisePropertyChanged("isComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public System.Nullable<int> replicationPolicyID {
            get {
                return this.replicationPolicyIDField;
            }
            set {
                if ((this.replicationPolicyIDField.Equals(value) != true)) {
                    this.replicationPolicyIDField = value;
                    this.RaisePropertyChanged("replicationPolicyID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RestFileProperties", Namespace="http://data.diomedestorage.com")]
    [System.SerializableAttribute()]
    public partial class RestFileProperties : DioWeb.DioService.FileProperties {
        
        private System.Collections.Generic.List<DioWeb.DioService.PhysicalFileInfo> physicalFilesField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Collections.Generic.List<DioWeb.DioService.PhysicalFileInfo> physicalFiles {
            get {
                return this.physicalFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.physicalFilesField, value) != true)) {
                    this.physicalFilesField = value;
                    this.RaisePropertyChanged("physicalFiles");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://service.diomedestorage.com", ConfigurationName="DioService.IDiomedeStorage", SessionMode=System.ServiceModel.SessionMode.NotAllowed)]
    public interface IDiomedeStorage {
        
        // CODEGEN: Generating message contract since the operation RenameFile is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="RenameFile", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/RenameFileResponse")]
        DioWeb.DioService.RenameFileResponse RenameFile(DioWeb.DioService.RenameFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="RenameFile", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/RenameFileResponse")]
        System.IAsyncResult BeginRenameFile(DioWeb.DioService.RenameFileRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.RenameFileResponse EndRenameFile(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DeleteFile is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="DeleteFile", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/DeleteFileResponse")]
        DioWeb.DioService.DeleteFileResponse DeleteFile(DioWeb.DioService.DeleteFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="DeleteFile", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/DeleteFileResponse")]
        System.IAsyncResult BeginDeleteFile(DioWeb.DioService.DeleteFileRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.DeleteFileResponse EndDeleteFile(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation UndeleteFile is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UndeleteFile", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/UndeleteFileResponse")]
        DioWeb.DioService.UndeleteFileResponse UndeleteFile(DioWeb.DioService.UndeleteFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="UndeleteFile", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/UndeleteFileResponse")]
        System.IAsyncResult BeginUndeleteFile(DioWeb.DioService.UndeleteFileRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.UndeleteFileResponse EndUndeleteFile(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (CreateFileMetaDataRequest) of message CreateFileMetaDataRequest does not match the default value (CreateFileMetaData)
        [System.ServiceModel.OperationContractAttribute(Action="CreateFileMetaData", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/CreateFileMetaDataResponse")]
        DioWeb.DioService.CreateFileMetaDataResponse CreateFileMetaData(DioWeb.DioService.CreateFileMetaDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="CreateFileMetaData", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/CreateFileMetaDataResponse")]
        System.IAsyncResult BeginCreateFileMetaData(DioWeb.DioService.CreateFileMetaDataRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.CreateFileMetaDataResponse EndCreateFileMetaData(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation SetFileMetaData is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="SetFileMetaData", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SetFileMetaDataResponse")]
        DioWeb.DioService.SetFileMetaDataResponse SetFileMetaData(DioWeb.DioService.SetFileMetaDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SetFileMetaData", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SetFileMetaDataResponse")]
        System.IAsyncResult BeginSetFileMetaData(DioWeb.DioService.SetFileMetaDataRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.SetFileMetaDataResponse EndSetFileMetaData(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DeleteFileMetaData is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="DeleteFileMetaData", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/DeleteFileMetaDataResponse")]
        DioWeb.DioService.DeleteFileMetaDataResponse DeleteFileMetaData(DioWeb.DioService.DeleteFileMetaDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="DeleteFileMetaData", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/DeleteFileMetaDataResponse")]
        System.IAsyncResult BeginDeleteFileMetaData(DioWeb.DioService.DeleteFileMetaDataRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.DeleteFileMetaDataResponse EndDeleteFileMetaData(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (CreateMetaDataRequest) of message CreateMetaDataRequest does not match the default value (CreateMetaData)
        [System.ServiceModel.OperationContractAttribute(Action="CreateMetaData", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/CreateMetaDataResponse")]
        DioWeb.DioService.CreateMetaDataResponse CreateMetaData(DioWeb.DioService.CreateMetaDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="CreateMetaData", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/CreateMetaDataResponse")]
        System.IAsyncResult BeginCreateMetaData(DioWeb.DioService.CreateMetaDataRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.CreateMetaDataResponse EndCreateMetaData(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (GetFileMetaDataRequest) of message GetFileMetaDataRequest does not match the default value (GetFileMetaData)
        [System.ServiceModel.OperationContractAttribute(Action="GetFileMetaData", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetFileMetaDataResponse")]
        DioWeb.DioService.GetFileMetaDataResponse GetFileMetaData(DioWeb.DioService.GetFileMetaDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetFileMetaData", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetFileMetaDataResponse")]
        System.IAsyncResult BeginGetFileMetaData(DioWeb.DioService.GetFileMetaDataRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.GetFileMetaDataResponse EndGetFileMetaData(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (GetMetaDataRequest) of message GetMetaDataRequest does not match the default value (GetMetaData)
        [System.ServiceModel.OperationContractAttribute(Action="GetMetaData", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetMetaDataResponse")]
        DioWeb.DioService.GetMetaDataResponse GetMetaData(DioWeb.DioService.GetMetaDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetMetaData", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetMetaDataResponse")]
        System.IAsyncResult BeginGetMetaData(DioWeb.DioService.GetMetaDataRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.GetMetaDataResponse EndGetMetaData(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation EditMetaData is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="EditMetaData", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/EditMetaDataResponse")]
        DioWeb.DioService.EditMetaDataResponse EditMetaData(DioWeb.DioService.EditMetaDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="EditMetaData", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/EditMetaDataResponse")]
        System.IAsyncResult BeginEditMetaData(DioWeb.DioService.EditMetaDataRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.EditMetaDataResponse EndEditMetaData(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DeleteMetaData is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="DeleteMetaData", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/DeleteMetaDataResponse")]
        DioWeb.DioService.DeleteMetaDataResponse DeleteMetaData(DioWeb.DioService.DeleteMetaDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="DeleteMetaData", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/DeleteMetaDataResponse")]
        System.IAsyncResult BeginDeleteMetaData(DioWeb.DioService.DeleteMetaDataRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.DeleteMetaDataResponse EndDeleteMetaData(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation MoveFileToTier is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="MoveFileToTier", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/MoveFileToTierResponse")]
        DioWeb.DioService.MoveFileToTierResponse MoveFileToTier(DioWeb.DioService.MoveFileToTierRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="MoveFileToTier", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/MoveFileToTierResponse")]
        System.IAsyncResult BeginMoveFileToTier(DioWeb.DioService.MoveFileToTierRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.MoveFileToTierResponse EndMoveFileToTier(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (ReplicateFileRequest) of message ReplicateFileRequest does not match the default value (ReplicateFile)
        [System.ServiceModel.OperationContractAttribute(Action="ReplicateFile", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/ReplicateFileResponse")]
        DioWeb.DioService.ReplicateFileResponse ReplicateFile(DioWeb.DioService.ReplicateFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="ReplicateFile", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/ReplicateFileResponse")]
        System.IAsyncResult BeginReplicateFile(DioWeb.DioService.ReplicateFileRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.ReplicateFileResponse EndReplicateFile(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation UnreplicateFile is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="UnreplicateFile", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/UnreplicateFileResponse")]
        DioWeb.DioService.UnreplicateFileResponse UnreplicateFile(DioWeb.DioService.UnreplicateFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="UnreplicateFile", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/UnreplicateFileResponse")]
        System.IAsyncResult BeginUnreplicateFile(DioWeb.DioService.UnreplicateFileRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.UnreplicateFileResponse EndUnreplicateFile(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetStorageTypes is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetStorageTypes", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetStorageTypesResponse")]
        DioWeb.DioService.GetStorageTypesResponse GetStorageTypes(DioWeb.DioService.GetStorageTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetStorageTypes", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetStorageTypesResponse")]
        System.IAsyncResult BeginGetStorageTypes(DioWeb.DioService.GetStorageTypesRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.GetStorageTypesResponse EndGetStorageTypes(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (GetPhysicalFilesRequest) of message GetPhysicalFilesRequest does not match the default value (GetPhysicalFiles)
        [System.ServiceModel.OperationContractAttribute(Action="GetPhysicalFiles", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetPhysicalFilesResponse")]
        DioWeb.DioService.GetPhysicalFilesResponse GetPhysicalFiles(DioWeb.DioService.GetPhysicalFilesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetPhysicalFiles", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetPhysicalFilesResponse")]
        System.IAsyncResult BeginGetPhysicalFiles(DioWeb.DioService.GetPhysicalFilesRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.GetPhysicalFilesResponse EndGetPhysicalFiles(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (GetPhysicalFileRequest) of message GetPhysicalFileRequest does not match the default value (GetPhysicalFile)
        [System.ServiceModel.OperationContractAttribute(Action="GetPhysicalFile", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetPhysicalFileResponse")]
        DioWeb.DioService.GetPhysicalFileResponse GetPhysicalFile(DioWeb.DioService.GetPhysicalFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetPhysicalFile", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetPhysicalFileResponse")]
        System.IAsyncResult BeginGetPhysicalFile(DioWeb.DioService.GetPhysicalFileRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.GetPhysicalFileResponse EndGetPhysicalFile(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (SearchUploadLogRequest) of message SearchUploadLogRequest does not match the default value (SearchUploadLog)
        [System.ServiceModel.OperationContractAttribute(Action="SearchUploadLog", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SearchUploadLogResponse")]
        DioWeb.DioService.SearchUploadLogResponse SearchUploadLog(DioWeb.DioService.SearchUploadLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SearchUploadLog", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SearchUploadLogResponse")]
        System.IAsyncResult BeginSearchUploadLog(DioWeb.DioService.SearchUploadLogRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.SearchUploadLogResponse EndSearchUploadLog(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (SearchDownloadLogRequest) of message SearchDownloadLogRequest does not match the default value (SearchDownloadLog)
        [System.ServiceModel.OperationContractAttribute(Action="SearchDownloadLog", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SearchDownloadLogResponse")]
        DioWeb.DioService.SearchDownloadLogResponse SearchDownloadLog(DioWeb.DioService.SearchDownloadLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SearchDownloadLog", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SearchDownloadLogResponse")]
        System.IAsyncResult BeginSearchDownloadLog(DioWeb.DioService.SearchDownloadLogRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.SearchDownloadLogResponse EndSearchDownloadLog(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (SearchLoginLogRequest) of message SearchLoginLogRequest does not match the default value (SearchLoginLog)
        [System.ServiceModel.OperationContractAttribute(Action="SearchLoginLog", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SearchLoginLogResponse")]
        DioWeb.DioService.SearchLoginLogResponse SearchLoginLog(DioWeb.DioService.SearchLoginLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SearchLoginLog", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SearchLoginLogResponse")]
        System.IAsyncResult BeginSearchLoginLog(DioWeb.DioService.SearchLoginLogRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.SearchLoginLogResponse EndSearchLoginLog(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetAllProducts is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetAllProducts", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetAllProductsResponse")]
        DioWeb.DioService.GetAllProductsResponse GetAllProducts(DioWeb.DioService.GetAllProductsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetAllProducts", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetAllProductsResponse")]
        System.IAsyncResult BeginGetAllProducts(DioWeb.DioService.GetAllProductsRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.GetAllProductsResponse EndGetAllProducts(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation PurchaseProduct is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="PurchaseProduct", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/PurchaseProductResponse")]
        DioWeb.DioService.PurchaseProductResponse PurchaseProduct(DioWeb.DioService.PurchaseProductRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="PurchaseProduct", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/PurchaseProductResponse")]
        System.IAsyncResult BeginPurchaseProduct(DioWeb.DioService.PurchaseProductRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.PurchaseProductResponse EndPurchaseProduct(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (GetMyProductsRequest) of message GetMyProductsRequest does not match the default value (GetMyProducts)
        [System.ServiceModel.OperationContractAttribute(Action="GetMyProducts", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetMyProductsResponse")]
        DioWeb.DioService.GetMyProductsResponse GetMyProducts(DioWeb.DioService.GetMyProductsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetMyProducts", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetMyProductsResponse")]
        System.IAsyncResult BeginGetMyProducts(DioWeb.DioService.GetMyProductsRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.GetMyProductsResponse EndGetMyProducts(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CancelProduct is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="CancelProduct", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/CancelProductResponse")]
        DioWeb.DioService.CancelProductResponse CancelProduct(DioWeb.DioService.CancelProductRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="CancelProduct", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/CancelProductResponse")]
        System.IAsyncResult BeginCancelProduct(DioWeb.DioService.CancelProductRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.CancelProductResponse EndCancelProduct(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation GetAllContracts is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="GetAllContracts", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetAllContractsResponse")]
        DioWeb.DioService.GetAllContractsResponse GetAllContracts(DioWeb.DioService.GetAllContractsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetAllContracts", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetAllContractsResponse")]
        System.IAsyncResult BeginGetAllContracts(DioWeb.DioService.GetAllContractsRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.GetAllContractsResponse EndGetAllContracts(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (PurchaseContractRequest) of message PurchaseContractRequest does not match the default value (PurchaseContract)
        [System.ServiceModel.OperationContractAttribute(Action="PurchaseContract", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/PurchaseContractResponse")]
        DioWeb.DioService.PurchaseContractResponse PurchaseContract(DioWeb.DioService.PurchaseContractRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="PurchaseContract", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/PurchaseContractResponse")]
        System.IAsyncResult BeginPurchaseContract(DioWeb.DioService.PurchaseContractRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.PurchaseContractResponse EndPurchaseContract(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (GetMyContractsRequest) of message GetMyContractsRequest does not match the default value (GetMyContracts)
        [System.ServiceModel.OperationContractAttribute(Action="GetMyContracts", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetMyContractsResponse")]
        DioWeb.DioService.GetMyContractsResponse GetMyContracts(DioWeb.DioService.GetMyContractsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetMyContracts", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetMyContractsResponse")]
        System.IAsyncResult BeginGetMyContracts(DioWeb.DioService.GetMyContractsRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.GetMyContractsResponse EndGetMyContracts(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CancelContract is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="CancelContract", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/CancelContractResponse")]
        DioWeb.DioService.CancelContractResponse CancelContract(DioWeb.DioService.CancelContractRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="CancelContract", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/CancelContractResponse")]
        System.IAsyncResult BeginCancelContract(DioWeb.DioService.CancelContractRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.CancelContractResponse EndCancelContract(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (SearchInvoiceRequest) of message SearchInvoiceRequest does not match the default value (SearchInvoiceLog)
        [System.ServiceModel.OperationContractAttribute(Action="SearchInvoiceLog", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SearchInvoiceLogResponse")]
        DioWeb.DioService.SearchInvoiceResponse SearchInvoiceLog(DioWeb.DioService.SearchInvoiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SearchInvoiceLog", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SearchInvoiceLogResponse")]
        System.IAsyncResult BeginSearchInvoiceLog(DioWeb.DioService.SearchInvoiceRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.SearchInvoiceResponse EndSearchInvoiceLog(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (SearchFilesTotalLogRequest) of message SearchFilesTotalLogRequest does not match the default value (SearchFilesTotalLog)
        [System.ServiceModel.OperationContractAttribute(Action="SearchFilesTotalLog", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SearchFilesTotalLogResponse")]
        DioWeb.DioService.SearchFilesTotalLogResponse SearchFilesTotalLog(DioWeb.DioService.SearchFilesTotalLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SearchFilesTotalLog", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SearchFilesTotalLogResponse")]
        System.IAsyncResult BeginSearchFilesTotalLog(DioWeb.DioService.SearchFilesTotalLogRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.SearchFilesTotalLogResponse EndSearchFilesTotalLog(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation CreateUser is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="CreateUser", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/CreateUserResponse")]
        DioWeb.DioService.CreateUserResponse CreateUser(DioWeb.DioService.CreateUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="CreateUser", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/CreateUserResponse")]
        System.IAsyncResult BeginCreateUser(DioWeb.DioService.CreateUserRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.CreateUserResponse EndCreateUser(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation SetUserInfo is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="SetUserInfo", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SetUserInfoResponse")]
        DioWeb.DioService.SetUserInfoResponse SetUserInfo(DioWeb.DioService.UpdateUserInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SetUserInfo", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SetUserInfoResponse")]
        System.IAsyncResult BeginSetUserInfo(DioWeb.DioService.UpdateUserInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.SetUserInfoResponse EndSetUserInfo(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (GetUserInfoRequest) of message GetUserInfoRequest does not match the default value (GetUserInfo)
        [System.ServiceModel.OperationContractAttribute(Action="GetUserInfo", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetUserInfoResponse")]
        DioWeb.DioService.GetUserInfoResponse GetUserInfo(DioWeb.DioService.GetUserInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetUserInfo", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetUserInfoResponse")]
        System.IAsyncResult BeginGetUserInfo(DioWeb.DioService.GetUserInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.GetUserInfoResponse EndGetUserInfo(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DeleteUserInfo is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="DeleteUserInfo", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/DeleteUserInfoResponse")]
        DioWeb.DioService.DeleteUserInfoResponse DeleteUserInfo(DioWeb.DioService.DeleteUserInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="DeleteUserInfo", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/DeleteUserInfoResponse")]
        System.IAsyncResult BeginDeleteUserInfo(DioWeb.DioService.DeleteUserInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.DeleteUserInfoResponse EndDeleteUserInfo(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (GetEmailAddressesRequest) of message GetEmailAddressesRequest does not match the default value (GetEmailAddresses)
        [System.ServiceModel.OperationContractAttribute(Action="GetEmailAddresses", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetEmailAddressesResponse")]
        DioWeb.DioService.GetEmailAddressesResponse GetEmailAddresses(DioWeb.DioService.GetEmailAddressesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetEmailAddresses", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetEmailAddressesResponse")]
        System.IAsyncResult BeginGetEmailAddresses(DioWeb.DioService.GetEmailAddressesRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.GetEmailAddressesResponse EndGetEmailAddresses(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation AddEmailAddress is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="AddEmailAddress", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/AddEmailAddressResponse")]
        DioWeb.DioService.AddEmailAddressResponse AddEmailAddress(DioWeb.DioService.AddEmailAddressRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="AddEmailAddress", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/AddEmailAddressResponse")]
        System.IAsyncResult BeginAddEmailAddress(DioWeb.DioService.AddEmailAddressRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.AddEmailAddressResponse EndAddEmailAddress(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DeleteEmailAddress is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="DeleteEmailAddress", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/DeleteEmailAddressResponse")]
        DioWeb.DioService.DeleteEmailAddressResponse DeleteEmailAddress(DioWeb.DioService.DeleteEmailAddressRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="DeleteEmailAddress", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/DeleteEmailAddressResponse")]
        System.IAsyncResult BeginDeleteEmailAddress(DioWeb.DioService.DeleteEmailAddressRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.DeleteEmailAddressResponse EndDeleteEmailAddress(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation SetPrimaryEmailAddress is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="SetPrimaryEmailAddress", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SetPrimaryEmailAddressResponse")]
        DioWeb.DioService.SetPrimaryEmailAddressResponse SetPrimaryEmailAddress(DioWeb.DioService.SetPrimaryEmailAddressRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SetPrimaryEmailAddress", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SetPrimaryEmailAddressResponse")]
        System.IAsyncResult BeginSetPrimaryEmailAddress(DioWeb.DioService.SetPrimaryEmailAddressRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.SetPrimaryEmailAddressResponse EndSetPrimaryEmailAddress(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DeleteUser is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="DeleteUser", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/DeleteUserResponse")]
        DioWeb.DioService.DeleteUserResponse DeleteUser(DioWeb.DioService.DeleteUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="DeleteUser", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/DeleteUserResponse")]
        System.IAsyncResult BeginDeleteUser(DioWeb.DioService.DeleteUserRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.DeleteUserResponse EndDeleteUser(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (SearchPaymentLogRequest) of message SearchPaymentLogRequest does not match the default value (SearchPaymentLog)
        [System.ServiceModel.OperationContractAttribute(Action="SearchPaymentLog", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SearchPaymentLogResponse")]
        DioWeb.DioService.SearchPaymentLogResponse SearchPaymentLog(DioWeb.DioService.SearchPaymentLogRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SearchPaymentLog", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SearchPaymentLogResponse")]
        System.IAsyncResult BeginSearchPaymentLog(DioWeb.DioService.SearchPaymentLogRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.SearchPaymentLogResponse EndSearchPaymentLog(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ChangePassword is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="ChangePassword", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/ChangePasswordResponse")]
        DioWeb.DioService.ChangePasswordResponse ChangePassword(DioWeb.DioService.ChangePasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="ChangePassword", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/ChangePasswordResponse")]
        System.IAsyncResult BeginChangePassword(DioWeb.DioService.ChangePasswordRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.ChangePasswordResponse EndChangePassword(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation ResetPassword is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="ResetPassword", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/ResetPasswordResponse")]
        DioWeb.DioService.ResetPasswordResponse ResetPassword(DioWeb.DioService.ResetPasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="ResetPassword", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/ResetPasswordResponse")]
        System.IAsyncResult BeginResetPassword(DioWeb.DioService.ResetPasswordRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.ResetPasswordResponse EndResetPassword(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (CreateReplicationPolicyRequest) of message CreateReplicationPolicyRequest does not match the default value (CreateReplicationPolicy)
        [System.ServiceModel.OperationContractAttribute(Action="CreateReplicationPolicy", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/CreateReplicationPolicyResponse" +
            "")]
        DioWeb.DioService.CreateReplicationPolicyResponse CreateReplicationPolicy(DioWeb.DioService.CreateReplicationPolicyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="CreateReplicationPolicy", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/CreateReplicationPolicyResponse" +
            "")]
        System.IAsyncResult BeginCreateReplicationPolicy(DioWeb.DioService.CreateReplicationPolicyRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.CreateReplicationPolicyResponse EndCreateReplicationPolicy(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (GetReplicationPoliciesRequest) of message GetReplicationPoliciesRequest does not match the default value (GetReplicationPolicies)
        [System.ServiceModel.OperationContractAttribute(Action="GetReplicationPolicies", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetReplicationPoliciesResponse")]
        DioWeb.DioService.GetReplicationPoliciesResponse GetReplicationPolicies(DioWeb.DioService.GetReplicationPoliciesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetReplicationPolicies", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetReplicationPoliciesResponse")]
        System.IAsyncResult BeginGetReplicationPolicies(DioWeb.DioService.GetReplicationPoliciesRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.GetReplicationPoliciesResponse EndGetReplicationPolicies(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation EditReplicationPolicy is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="EditReplicationPolicy", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/EditReplicationPolicyResponse")]
        DioWeb.DioService.EditReplicationPolicyResponse EditReplicationPolicy(DioWeb.DioService.EditReplicationPolicyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="EditReplicationPolicy", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/EditReplicationPolicyResponse")]
        System.IAsyncResult BeginEditReplicationPolicy(DioWeb.DioService.EditReplicationPolicyRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.EditReplicationPolicyResponse EndEditReplicationPolicy(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation DeleteReplicationPolicy is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="DeleteReplicationPolicy", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/DeleteReplicationPolicyResponse" +
            "")]
        DioWeb.DioService.DeleteReplicationPolicyResponse DeleteReplicationPolicy(DioWeb.DioService.DeleteReplicationPolicyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="DeleteReplicationPolicy", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/DeleteReplicationPolicyResponse" +
            "")]
        System.IAsyncResult BeginDeleteReplicationPolicy(DioWeb.DioService.DeleteReplicationPolicyRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.DeleteReplicationPolicyResponse EndDeleteReplicationPolicy(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation SetReplicationPolicy is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="SetReplicationPolicy", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SetReplicationPolicyResponse")]
        DioWeb.DioService.SetReplicationPolicyResponse SetReplicationPolicy(DioWeb.DioService.SetReplicationPolicyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SetReplicationPolicy", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SetReplicationPolicyResponse")]
        System.IAsyncResult BeginSetReplicationPolicy(DioWeb.DioService.SetReplicationPolicyRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.SetReplicationPolicyResponse EndSetReplicationPolicy(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation SetDefaultReplicationPolicy is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="SetDefaultReplicationPolicy", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SetDefaultReplicationPolicyResp" +
            "onse")]
        DioWeb.DioService.SetDefaultReplicationPolicyResponse SetDefaultReplicationPolicy(DioWeb.DioService.SetDefaultReplicationPolicyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SetDefaultReplicationPolicy", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SetDefaultReplicationPolicyResp" +
            "onse")]
        System.IAsyncResult BeginSetDefaultReplicationPolicy(DioWeb.DioService.SetDefaultReplicationPolicyRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.SetDefaultReplicationPolicyResponse EndSetDefaultReplicationPolicy(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (GetDefaultReplicationPolicyRequest) of message GetDefaultReplicationPolicyRequest does not match the default value (GetDefaultReplicationPolicy)
        [System.ServiceModel.OperationContractAttribute(Action="GetDefaultReplicationPolicy", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetDefaultReplicationPolicyResp" +
            "onse")]
        DioWeb.DioService.GetDefaultReplicationPolicyResponse GetDefaultReplicationPolicy(DioWeb.DioService.GetDefaultReplicationPolicyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetDefaultReplicationPolicy", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetDefaultReplicationPolicyResp" +
            "onse")]
        System.IAsyncResult BeginGetDefaultReplicationPolicy(DioWeb.DioService.GetDefaultReplicationPolicyRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.GetDefaultReplicationPolicyResponse EndGetDefaultReplicationPolicy(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (CreateSecretRequest) of message CreateSecretRequest does not match the default value (CreateOAuthSecretAndKey)
        [System.ServiceModel.OperationContractAttribute(Action="CreateOAuthSecretAndKey", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/CreateOAuthSecretAndKeyResponse" +
            "")]
        DioWeb.DioService.CreateSecretResponse CreateOAuthSecretAndKey(DioWeb.DioService.CreateSecretRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="CreateOAuthSecretAndKey", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/CreateOAuthSecretAndKeyResponse" +
            "")]
        System.IAsyncResult BeginCreateOAuthSecretAndKey(DioWeb.DioService.CreateSecretRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.CreateSecretResponse EndCreateOAuthSecretAndKey(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (LoginRequest) of message LoginRequest does not match the default value (Login)
        [System.ServiceModel.OperationContractAttribute(Action="Login", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/LoginResponse")]
        DioWeb.DioService.LoginResponse Login(DioWeb.DioService.LoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="Login", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/LoginResponse")]
        System.IAsyncResult BeginLogin(DioWeb.DioService.LoginRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.LoginResponse EndLogin(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the operation Logout is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="Logout", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/LogoutResponse")]
        DioWeb.DioService.LogoutResponse Logout(DioWeb.DioService.LogoutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="Logout", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/LogoutResponse")]
        System.IAsyncResult BeginLogout(DioWeb.DioService.LogoutRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.LogoutResponse EndLogout(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (GetUploadTokenRequest) of message GetUploadTokenRequest does not match the default value (GetUploadToken)
        [System.ServiceModel.OperationContractAttribute(Action="GetUploadToken", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetUploadTokenResponse")]
        DioWeb.DioService.GetUploadTokenResponse GetUploadToken(DioWeb.DioService.GetUploadTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetUploadToken", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetUploadTokenResponse")]
        System.IAsyncResult BeginGetUploadToken(DioWeb.DioService.GetUploadTokenRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.GetUploadTokenResponse EndGetUploadToken(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (GetDownloadURLRequest) of message GetDownloadURLRequest does not match the default value (GetDownloadURL)
        [System.ServiceModel.OperationContractAttribute(Action="GetDownloadURL", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetDownloadURLResponse")]
        DioWeb.DioService.GetDownloadURLResponse GetDownloadURL(DioWeb.DioService.GetDownloadURLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetDownloadURL", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/GetDownloadURLResponse")]
        System.IAsyncResult BeginGetDownloadURL(DioWeb.DioService.GetDownloadURLRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.GetDownloadURLResponse EndGetDownloadURL(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (SearchFilesRequest) of message SearchFilesRequest does not match the default value (SearchFiles)
        [System.ServiceModel.OperationContractAttribute(Action="SearchFiles", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SearchFilesResponse")]
        DioWeb.DioService.SearchFilesResponse SearchFiles(DioWeb.DioService.SearchFilesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SearchFiles", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SearchFilesResponse")]
        System.IAsyncResult BeginSearchFiles(DioWeb.DioService.SearchFilesRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.SearchFilesResponse EndSearchFiles(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (SearchFilesTotalRequest) of message SearchFilesTotalRequest does not match the default value (SearchFilesTotal)
        [System.ServiceModel.OperationContractAttribute(Action="SearchFilesTotal", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SearchFilesTotalResponse")]
        DioWeb.DioService.SearchFilesTotalResponse SearchFilesTotal(DioWeb.DioService.SearchFilesTotalRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="SearchFilesTotal", ReplyAction="http://service.diomedestorage.com/IDiomedeStorage/SearchFilesTotalResponse")]
        System.IAsyncResult BeginSearchFilesTotal(DioWeb.DioService.SearchFilesTotalRequest request, System.AsyncCallback callback, object asyncState);
        
        DioWeb.DioService.SearchFilesTotalResponse EndSearchFilesTotal(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RenameFileRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class RenameFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long fileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public string newFileName;
        
        public RenameFileRequest() {
        }
        
        public RenameFileRequest(string sessionToken, long fileID, string newFileName) {
            this.sessionToken = sessionToken;
            this.fileID = fileID;
            this.newFileName = newFileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RenameFileResponse {
        
        public RenameFileResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteFileRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class DeleteFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long fileID;
        
        public DeleteFileRequest() {
        }
        
        public DeleteFileRequest(string sessionToken, long fileID) {
            this.sessionToken = sessionToken;
            this.fileID = fileID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteFileResponse {
        
        public DeleteFileResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UndeleteFileRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class UndeleteFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long fileID;
        
        public UndeleteFileRequest() {
        }
        
        public UndeleteFileRequest(string sessionToken, long fileID) {
            this.sessionToken = sessionToken;
            this.fileID = fileID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UndeleteFileResponse {
        
        public UndeleteFileResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateFileMetaDataRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class CreateFileMetaDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long fileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public string metaName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=3)]
        public string metaValue;
        
        public CreateFileMetaDataRequest() {
        }
        
        public CreateFileMetaDataRequest(string sessionToken, long fileID, string metaName, string metaValue) {
            this.sessionToken = sessionToken;
            this.fileID = fileID;
            this.metaName = metaName;
            this.metaValue = metaValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateFileMetaDataResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class CreateFileMetaDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public int metaDataID;
        
        public CreateFileMetaDataResponse() {
        }
        
        public CreateFileMetaDataResponse(int metaDataID) {
            this.metaDataID = metaDataID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetFileMetaDataRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SetFileMetaDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long fileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public int metaDataID;
        
        public SetFileMetaDataRequest() {
        }
        
        public SetFileMetaDataRequest(string sessionToken, long fileID, int metaDataID) {
            this.sessionToken = sessionToken;
            this.fileID = fileID;
            this.metaDataID = metaDataID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetFileMetaDataResponse {
        
        public SetFileMetaDataResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteFileMetaDataRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class DeleteFileMetaDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long fileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public int metaDataID;
        
        public DeleteFileMetaDataRequest() {
        }
        
        public DeleteFileMetaDataRequest(string sessionToken, long fileID, int metaDataID) {
            this.sessionToken = sessionToken;
            this.fileID = fileID;
            this.metaDataID = metaDataID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteFileMetaDataResponse {
        
        public DeleteFileMetaDataResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateMetaDataRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class CreateMetaDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public string value;
        
        public CreateMetaDataRequest() {
        }
        
        public CreateMetaDataRequest(string sessionToken, string name, string value) {
            this.sessionToken = sessionToken;
            this.name = name;
            this.value = value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateMetaDataResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class CreateMetaDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public int metaDataID;
        
        public CreateMetaDataResponse() {
        }
        
        public CreateMetaDataResponse(int metaDataID) {
            this.metaDataID = metaDataID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFileMetaDataRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetFileMetaDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long fileID;
        
        public GetFileMetaDataRequest() {
        }
        
        public GetFileMetaDataRequest(string sessionToken, long fileID) {
            this.sessionToken = sessionToken;
            this.fileID = fileID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetFileMetaDataResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetFileMetaDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<DioWeb.DioService.MetaData> metaData;
        
        public GetFileMetaDataResponse() {
        }
        
        public GetFileMetaDataResponse(System.Collections.Generic.List<DioWeb.DioService.MetaData> metaData) {
            this.metaData = metaData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMetaDataRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetMetaDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public System.Nullable<int> metaDataID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=3)]
        public string value;
        
        public GetMetaDataRequest() {
        }
        
        public GetMetaDataRequest(string sessionToken, System.Nullable<int> metaDataID, string name, string value) {
            this.sessionToken = sessionToken;
            this.metaDataID = metaDataID;
            this.name = name;
            this.value = value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMetaDataResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetMetaDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<DioWeb.DioService.MetaData> metaData;
        
        public GetMetaDataResponse() {
        }
        
        public GetMetaDataResponse(System.Collections.Generic.List<DioWeb.DioService.MetaData> metaData) {
            this.metaData = metaData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EditMetaDataRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class EditMetaDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public int metaDataID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=3)]
        public string value;
        
        public EditMetaDataRequest() {
        }
        
        public EditMetaDataRequest(string sessionToken, int metaDataID, string name, string value) {
            this.sessionToken = sessionToken;
            this.metaDataID = metaDataID;
            this.name = name;
            this.value = value;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EditMetaDataResponse {
        
        public EditMetaDataResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteMetaDataRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class DeleteMetaDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public int metaDataID;
        
        public DeleteMetaDataRequest() {
        }
        
        public DeleteMetaDataRequest(string sessionToken, int metaDataID) {
            this.sessionToken = sessionToken;
            this.metaDataID = metaDataID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteMetaDataResponse {
        
        public DeleteMetaDataResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MoveFileToTierRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class MoveFileToTierRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public int fileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public int targetTier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=3)]
        public string callbackAddress;
        
        public MoveFileToTierRequest() {
        }
        
        public MoveFileToTierRequest(string sessionToken, int fileID, int targetTier, string callbackAddress) {
            this.sessionToken = sessionToken;
            this.fileID = fileID;
            this.targetTier = targetTier;
            this.callbackAddress = callbackAddress;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MoveFileToTierResponse {
        
        public MoveFileToTierResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReplicateFileRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class ReplicateFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long fileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public int storageTypeID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=3)]
        public System.Nullable<System.DateTime> expirationDate;
        
        public ReplicateFileRequest() {
        }
        
        public ReplicateFileRequest(string sessionToken, long fileID, int storageTypeID, System.Nullable<System.DateTime> expirationDate) {
            this.sessionToken = sessionToken;
            this.fileID = fileID;
            this.storageTypeID = storageTypeID;
            this.expirationDate = expirationDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReplicateFileResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class ReplicateFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public long physicalFileID;
        
        public ReplicateFileResponse() {
        }
        
        public ReplicateFileResponse(long physicalFileID) {
            this.physicalFileID = physicalFileID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UnreplicateFileRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class UnreplicateFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long physicalFileID;
        
        public UnreplicateFileRequest() {
        }
        
        public UnreplicateFileRequest(string sessionToken, long physicalFileID) {
            this.sessionToken = sessionToken;
            this.physicalFileID = physicalFileID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnreplicateFileResponse {
        
        public UnreplicateFileResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetStorageTypesRequest {
        
        public GetStorageTypesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStorageTypesResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetStorageTypesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<DioWeb.DioService.StorageType> storageTypes;
        
        public GetStorageTypesResponse() {
        }
        
        public GetStorageTypesResponse(System.Collections.Generic.List<DioWeb.DioService.StorageType> storageTypes) {
            this.storageTypes = storageTypes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPhysicalFilesRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetPhysicalFilesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long fileID;
        
        public GetPhysicalFilesRequest() {
        }
        
        public GetPhysicalFilesRequest(string sessionToken, long fileID) {
            this.sessionToken = sessionToken;
            this.fileID = fileID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPhysicalFilesResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetPhysicalFilesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<DioWeb.DioService.PhysicalFileInfo> physicalFiles;
        
        public GetPhysicalFilesResponse() {
        }
        
        public GetPhysicalFilesResponse(System.Collections.Generic.List<DioWeb.DioService.PhysicalFileInfo> physicalFiles) {
            this.physicalFiles = physicalFiles;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPhysicalFileRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetPhysicalFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long physicalFileID;
        
        public GetPhysicalFileRequest() {
        }
        
        public GetPhysicalFileRequest(string sessionToken, long physicalFileID) {
            this.sessionToken = sessionToken;
            this.physicalFileID = physicalFileID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPhysicalFileResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetPhysicalFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public DioWeb.DioService.PhysicalFileInfo physicalFile;
        
        public GetPhysicalFileResponse() {
        }
        
        public GetPhysicalFileResponse(DioWeb.DioService.PhysicalFileInfo physicalFile) {
            this.physicalFile = physicalFile;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchUploadLogRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SearchUploadLogRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public System.Nullable<long> fileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public System.Nullable<System.DateTime> startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=3)]
        public System.Nullable<System.DateTime> endDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=4)]
        public string uploaderIP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=5)]
        public long offset;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=6)]
        public long pageSize;
        
        public SearchUploadLogRequest() {
        }
        
        public SearchUploadLogRequest(string sessionToken, System.Nullable<long> fileID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string uploaderIP, long offset, long pageSize) {
            this.sessionToken = sessionToken;
            this.fileID = fileID;
            this.startDate = startDate;
            this.endDate = endDate;
            this.uploaderIP = uploaderIP;
            this.offset = offset;
            this.pageSize = pageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchUploadLogResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SearchUploadLogResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<DioWeb.DioService.UploadLogEntry> logEntries;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long totalResults;
        
        public SearchUploadLogResponse() {
        }
        
        public SearchUploadLogResponse(System.Collections.Generic.List<DioWeb.DioService.UploadLogEntry> logEntries, long totalResults) {
            this.logEntries = logEntries;
            this.totalResults = totalResults;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchDownloadLogRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SearchDownloadLogRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public System.Nullable<long> fileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public System.Nullable<System.DateTime> startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=3)]
        public System.Nullable<System.DateTime> endDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=4)]
        public string downloadToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=5)]
        public string downloaderIP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=6)]
        public long offset;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=7)]
        public long pageSize;
        
        public SearchDownloadLogRequest() {
        }
        
        public SearchDownloadLogRequest(string sessionToken, System.Nullable<long> fileID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string downloadToken, string downloaderIP, long offset, long pageSize) {
            this.sessionToken = sessionToken;
            this.fileID = fileID;
            this.startDate = startDate;
            this.endDate = endDate;
            this.downloadToken = downloadToken;
            this.downloaderIP = downloaderIP;
            this.offset = offset;
            this.pageSize = pageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchDownloadLogResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SearchDownloadLogResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<DioWeb.DioService.DownloadLogEntry> logEntries;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long totalResults;
        
        public SearchDownloadLogResponse() {
        }
        
        public SearchDownloadLogResponse(System.Collections.Generic.List<DioWeb.DioService.DownloadLogEntry> logEntries, long totalResults) {
            this.logEntries = logEntries;
            this.totalResults = totalResults;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchLoginLogRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SearchLoginLogRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public System.Nullable<System.DateTime> startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public System.Nullable<System.DateTime> endDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=3)]
        public string loginIP;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=4)]
        public long offset;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=5)]
        public long pageSize;
        
        public SearchLoginLogRequest() {
        }
        
        public SearchLoginLogRequest(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string loginIP, long offset, long pageSize) {
            this.sessionToken = sessionToken;
            this.startDate = startDate;
            this.endDate = endDate;
            this.loginIP = loginIP;
            this.offset = offset;
            this.pageSize = pageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchLoginLogResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SearchLoginLogResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<DioWeb.DioService.LoginLogEntry> logEntries;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long totalResults;
        
        public SearchLoginLogResponse() {
        }
        
        public SearchLoginLogResponse(System.Collections.Generic.List<DioWeb.DioService.LoginLogEntry> logEntries, long totalResults) {
            this.logEntries = logEntries;
            this.totalResults = totalResults;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllProductsRequest {
        
        public GetAllProductsRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllProductsResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetAllProductsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<DioWeb.DioService.Product> products;
        
        public GetAllProductsResponse() {
        }
        
        public GetAllProductsResponse(System.Collections.Generic.List<DioWeb.DioService.Product> products) {
            this.products = products;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PurchaseProductRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class PurchaseProductRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public int productID;
        
        public PurchaseProductRequest() {
        }
        
        public PurchaseProductRequest(string sessionToken, int productID) {
            this.sessionToken = sessionToken;
            this.productID = productID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PurchaseProductResponse {
        
        public PurchaseProductResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMyProductsRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetMyProductsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        public GetMyProductsRequest() {
        }
        
        public GetMyProductsRequest(string sessionToken) {
            this.sessionToken = sessionToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMyProductsResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetMyProductsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<DioWeb.DioService.UserProduct> products;
        
        public GetMyProductsResponse() {
        }
        
        public GetMyProductsResponse(System.Collections.Generic.List<DioWeb.DioService.UserProduct> products) {
            this.products = products;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelProductRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class CancelProductRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public int productID;
        
        public CancelProductRequest() {
        }
        
        public CancelProductRequest(string sessionToken, int productID) {
            this.sessionToken = sessionToken;
            this.productID = productID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CancelProductResponse {
        
        public CancelProductResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllContractsRequest {
        
        public GetAllContractsRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllContractsResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetAllContractsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<DioWeb.DioService.Contract> contracts;
        
        public GetAllContractsResponse() {
        }
        
        public GetAllContractsResponse(System.Collections.Generic.List<DioWeb.DioService.Contract> contracts) {
            this.contracts = contracts;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PurchaseContractRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class PurchaseContractRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public int contractID;
        
        public PurchaseContractRequest() {
        }
        
        public PurchaseContractRequest(string sessionToken, int contractID) {
            this.sessionToken = sessionToken;
            this.contractID = contractID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PurchaseContractResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class PurchaseContractResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public long userContractID;
        
        public PurchaseContractResponse() {
        }
        
        public PurchaseContractResponse(long userContractID) {
            this.userContractID = userContractID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMyContractsRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetMyContractsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        public GetMyContractsRequest() {
        }
        
        public GetMyContractsRequest(string sessionToken) {
            this.sessionToken = sessionToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMyContractsResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetMyContractsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<DioWeb.DioService.UserContract> contracts;
        
        public GetMyContractsResponse() {
        }
        
        public GetMyContractsResponse(System.Collections.Generic.List<DioWeb.DioService.UserContract> contracts) {
            this.contracts = contracts;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CancelContractRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class CancelContractRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long userContractID;
        
        public CancelContractRequest() {
        }
        
        public CancelContractRequest(string sessionToken, long userContractID) {
            this.sessionToken = sessionToken;
            this.userContractID = userContractID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CancelContractResponse {
        
        public CancelContractResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchInvoiceRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SearchInvoiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public System.Nullable<System.DateTime> startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public System.Nullable<System.DateTime> endDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=3)]
        public DioWeb.DioService.InvoiceStatus invoiceStatus;
        
        public SearchInvoiceRequest() {
        }
        
        public SearchInvoiceRequest(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, DioWeb.DioService.InvoiceStatus invoiceStatus) {
            this.sessionToken = sessionToken;
            this.startDate = startDate;
            this.endDate = endDate;
            this.invoiceStatus = invoiceStatus;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchInvoiceResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SearchInvoiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<DioWeb.DioService.InvoiceLogEntry> invoices;
        
        public SearchInvoiceResponse() {
        }
        
        public SearchInvoiceResponse(System.Collections.Generic.List<DioWeb.DioService.InvoiceLogEntry> invoices) {
            this.invoices = invoices;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchFilesTotalLogRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SearchFilesTotalLogRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public System.Nullable<System.DateTime> startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public System.Nullable<System.DateTime> endDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=3)]
        public long offset;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=4)]
        public long pageSize;
        
        public SearchFilesTotalLogRequest() {
        }
        
        public SearchFilesTotalLogRequest(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, long offset, long pageSize) {
            this.sessionToken = sessionToken;
            this.startDate = startDate;
            this.endDate = endDate;
            this.offset = offset;
            this.pageSize = pageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchFilesTotalLogResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SearchFilesTotalLogResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<DioWeb.DioService.SearchFilesTotalInfo> fileTotalInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long totalResults;
        
        public SearchFilesTotalLogResponse() {
        }
        
        public SearchFilesTotalLogResponse(System.Collections.Generic.List<DioWeb.DioService.SearchFilesTotalInfo> fileTotalInfo, long totalResults) {
            this.fileTotalInfo = fileTotalInfo;
            this.totalResults = totalResults;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateUserRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class CreateUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public string email;
        
        public CreateUserRequest() {
        }
        
        public CreateUserRequest(string username, string password, string email) {
            this.username = username;
            this.password = password;
            this.email = email;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateUserResponse {
        
        public CreateUserResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateUserInfoRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class UpdateUserInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public DioWeb.DioService.UserInfo userInfo;
        
        public UpdateUserInfoRequest() {
        }
        
        public UpdateUserInfoRequest(string sessionToken, DioWeb.DioService.UserInfo userInfo) {
            this.sessionToken = sessionToken;
            this.userInfo = userInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetUserInfoResponse {
        
        public SetUserInfoResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserInfoRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetUserInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        public GetUserInfoRequest() {
        }
        
        public GetUserInfoRequest(string sessionToken) {
            this.sessionToken = sessionToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserInfoResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetUserInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public DioWeb.DioService.UserInfo userInfo;
        
        public GetUserInfoResponse() {
        }
        
        public GetUserInfoResponse(DioWeb.DioService.UserInfo userInfo) {
            this.userInfo = userInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteUserInfoRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class DeleteUserInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public DioWeb.DioService.UserInfoType userInfoType;
        
        public DeleteUserInfoRequest() {
        }
        
        public DeleteUserInfoRequest(string sessionToken, DioWeb.DioService.UserInfoType userInfoType) {
            this.sessionToken = sessionToken;
            this.userInfoType = userInfoType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteUserInfoResponse {
        
        public DeleteUserInfoResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEmailAddressesRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetEmailAddressesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        public GetEmailAddressesRequest() {
        }
        
        public GetEmailAddressesRequest(string sessionToken) {
            this.sessionToken = sessionToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEmailAddressesResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetEmailAddressesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<string> emailAddresses;
        
        public GetEmailAddressesResponse() {
        }
        
        public GetEmailAddressesResponse(System.Collections.Generic.List<string> emailAddresses) {
            this.emailAddresses = emailAddresses;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddEmailAddressRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class AddEmailAddressRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public string emailAddress;
        
        public AddEmailAddressRequest() {
        }
        
        public AddEmailAddressRequest(string sessionToken, string emailAddress) {
            this.sessionToken = sessionToken;
            this.emailAddress = emailAddress;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddEmailAddressResponse {
        
        public AddEmailAddressResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteEmailAddressRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class DeleteEmailAddressRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public string emailAddress;
        
        public DeleteEmailAddressRequest() {
        }
        
        public DeleteEmailAddressRequest(string sessionToken, string emailAddress) {
            this.sessionToken = sessionToken;
            this.emailAddress = emailAddress;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteEmailAddressResponse {
        
        public DeleteEmailAddressResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetPrimaryEmailAddressRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SetPrimaryEmailAddressRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public string emailAddress;
        
        public SetPrimaryEmailAddressRequest() {
        }
        
        public SetPrimaryEmailAddressRequest(string sessionToken, string emailAddress) {
            this.sessionToken = sessionToken;
            this.emailAddress = emailAddress;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetPrimaryEmailAddressResponse {
        
        public SetPrimaryEmailAddressResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteUserRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class DeleteUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        public DeleteUserRequest() {
        }
        
        public DeleteUserRequest(string sessionToken) {
            this.sessionToken = sessionToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteUserResponse {
        
        public DeleteUserResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchPaymentLogRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SearchPaymentLogRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public System.Nullable<System.DateTime> startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public System.Nullable<System.DateTime> endDate;
        
        public SearchPaymentLogRequest() {
        }
        
        public SearchPaymentLogRequest(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            this.sessionToken = sessionToken;
            this.startDate = startDate;
            this.endDate = endDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchPaymentLogResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SearchPaymentLogResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<DioWeb.DioService.PaymentLogEntry> logEntries;
        
        public SearchPaymentLogResponse() {
        }
        
        public SearchPaymentLogResponse(System.Collections.Generic.List<DioWeb.DioService.PaymentLogEntry> logEntries) {
            this.logEntries = logEntries;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangePasswordRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class ChangePasswordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public string currentPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public string newPassword;
        
        public ChangePasswordRequest() {
        }
        
        public ChangePasswordRequest(string sessionToken, string currentPassword, string newPassword) {
            this.sessionToken = sessionToken;
            this.currentPassword = currentPassword;
            this.newPassword = newPassword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangePasswordResponse {
        
        public ChangePasswordResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ResetPasswordRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class ResetPasswordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string username;
        
        public ResetPasswordRequest() {
        }
        
        public ResetPasswordRequest(string username) {
            this.username = username;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ResetPasswordResponse {
        
        public ResetPasswordResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateReplicationPolicyRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class CreateReplicationPolicyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public int defaultNumOnline;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public int defaultNumNearline;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=3)]
        public int defaultNumOffline;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=4)]
        public int lastAccessTriggerHours;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=5)]
        public int lastAccessTriggerNumOnline;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=6)]
        public int lastAccessTriggerNumNearline;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=7)]
        public int lastAccessTriggerNumOffline;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=8)]
        public System.Nullable<int> expireHours;
        
        public CreateReplicationPolicyRequest() {
        }
        
        public CreateReplicationPolicyRequest(string sessionToken, int defaultNumOnline, int defaultNumNearline, int defaultNumOffline, int lastAccessTriggerHours, int lastAccessTriggerNumOnline, int lastAccessTriggerNumNearline, int lastAccessTriggerNumOffline, System.Nullable<int> expireHours) {
            this.sessionToken = sessionToken;
            this.defaultNumOnline = defaultNumOnline;
            this.defaultNumNearline = defaultNumNearline;
            this.defaultNumOffline = defaultNumOffline;
            this.lastAccessTriggerHours = lastAccessTriggerHours;
            this.lastAccessTriggerNumOnline = lastAccessTriggerNumOnline;
            this.lastAccessTriggerNumNearline = lastAccessTriggerNumNearline;
            this.lastAccessTriggerNumOffline = lastAccessTriggerNumOffline;
            this.expireHours = expireHours;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateReplicationPolicyResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class CreateReplicationPolicyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public int replicationPolicyID;
        
        public CreateReplicationPolicyResponse() {
        }
        
        public CreateReplicationPolicyResponse(int replicationPolicyID) {
            this.replicationPolicyID = replicationPolicyID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetReplicationPoliciesRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetReplicationPoliciesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        public GetReplicationPoliciesRequest() {
        }
        
        public GetReplicationPoliciesRequest(string sessionToken) {
            this.sessionToken = sessionToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetReplicationPoliciesResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetReplicationPoliciesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<DioWeb.DioService.ReplicationPolicy> replicationPolicies;
        
        public GetReplicationPoliciesResponse() {
        }
        
        public GetReplicationPoliciesResponse(System.Collections.Generic.List<DioWeb.DioService.ReplicationPolicy> replicationPolicies) {
            this.replicationPolicies = replicationPolicies;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EditReplicationPolicyRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class EditReplicationPolicyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public DioWeb.DioService.ReplicationPolicy replicationPolicy;
        
        public EditReplicationPolicyRequest() {
        }
        
        public EditReplicationPolicyRequest(string sessionToken, DioWeb.DioService.ReplicationPolicy replicationPolicy) {
            this.sessionToken = sessionToken;
            this.replicationPolicy = replicationPolicy;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EditReplicationPolicyResponse {
        
        public EditReplicationPolicyResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteReplicationPolicyRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class DeleteReplicationPolicyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public int replicationPolicyID;
        
        public DeleteReplicationPolicyRequest() {
        }
        
        public DeleteReplicationPolicyRequest(string sessionToken, int replicationPolicyID) {
            this.sessionToken = sessionToken;
            this.replicationPolicyID = replicationPolicyID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteReplicationPolicyResponse {
        
        public DeleteReplicationPolicyResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetReplicationPolicyRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SetReplicationPolicyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long fileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public int replicationPolicyID;
        
        public SetReplicationPolicyRequest() {
        }
        
        public SetReplicationPolicyRequest(string sessionToken, long fileID, int replicationPolicyID) {
            this.sessionToken = sessionToken;
            this.fileID = fileID;
            this.replicationPolicyID = replicationPolicyID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetReplicationPolicyResponse {
        
        public SetReplicationPolicyResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetDefaultReplicationPolicyRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SetDefaultReplicationPolicyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public int replicationPolicyID;
        
        public SetDefaultReplicationPolicyRequest() {
        }
        
        public SetDefaultReplicationPolicyRequest(string sessionToken, int replicationPolicyID) {
            this.sessionToken = sessionToken;
            this.replicationPolicyID = replicationPolicyID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetDefaultReplicationPolicyResponse {
        
        public SetDefaultReplicationPolicyResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDefaultReplicationPolicyRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetDefaultReplicationPolicyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        public GetDefaultReplicationPolicyRequest() {
        }
        
        public GetDefaultReplicationPolicyRequest(string sessionToken) {
            this.sessionToken = sessionToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDefaultReplicationPolicyResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetDefaultReplicationPolicyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public DioWeb.DioService.ReplicationPolicy replicationPolicy;
        
        public GetDefaultReplicationPolicyResponse() {
        }
        
        public GetDefaultReplicationPolicyResponse(DioWeb.DioService.ReplicationPolicy replicationPolicy) {
            this.replicationPolicy = replicationPolicy;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateSecretRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class CreateSecretRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public string password;
        
        public CreateSecretRequest() {
        }
        
        public CreateSecretRequest(string sessionToken, string username, string password) {
            this.sessionToken = sessionToken;
            this.username = username;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateSecretResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class CreateSecretResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public DioWeb.DioService.ConsumerData consumerData;
        
        public CreateSecretResponse() {
        }
        
        public CreateSecretResponse(DioWeb.DioService.ConsumerData consumerData) {
            this.consumerData = consumerData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class LoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public string password;
        
        public LoginRequest() {
        }
        
        public LoginRequest(string username, string password) {
            this.username = username;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class LoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        public LoginResponse() {
        }
        
        public LoginResponse(string sessionToken) {
            this.sessionToken = sessionToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LogoutRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class LogoutRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        public LogoutRequest() {
        }
        
        public LogoutRequest(string sessionToken) {
            this.sessionToken = sessionToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogoutResponse {
        
        public LogoutResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUploadTokenRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetUploadTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public long reserveBytes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=3)]
        public string callbackAddress;
        
        public GetUploadTokenRequest() {
        }
        
        public GetUploadTokenRequest(string sessionToken, string fileName, long reserveBytes, string callbackAddress) {
            this.sessionToken = sessionToken;
            this.fileName = fileName;
            this.reserveBytes = reserveBytes;
            this.callbackAddress = callbackAddress;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUploadTokenResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetUploadTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string uploadToken;
        
        public GetUploadTokenResponse() {
        }
        
        public GetUploadTokenResponse(string uploadToken) {
            this.uploadToken = uploadToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDownloadURLRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetDownloadURLRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long fileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public System.Nullable<int> maxDownloads;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=3)]
        public System.Nullable<int> lifetimeHours;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=4)]
        public System.Nullable<int> maxUniqueIPs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=5)]
        public string errorRedirect;
        
        public GetDownloadURLRequest() {
        }
        
        public GetDownloadURLRequest(string sessionToken, long fileID, System.Nullable<int> maxDownloads, System.Nullable<int> lifetimeHours, System.Nullable<int> maxUniqueIPs, string errorRedirect) {
            this.sessionToken = sessionToken;
            this.fileID = fileID;
            this.maxDownloads = maxDownloads;
            this.lifetimeHours = lifetimeHours;
            this.maxUniqueIPs = maxUniqueIPs;
            this.errorRedirect = errorRedirect;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDownloadURLResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class GetDownloadURLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string downloadURL;
        
        public GetDownloadURLResponse() {
        }
        
        public GetDownloadURLResponse(string downloadURL) {
            this.downloadURL = downloadURL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchFilesRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SearchFilesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public System.Nullable<long> fileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=3)]
        public string hashMD5;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=4)]
        public string hashSHA1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=5)]
        public System.Nullable<long> minSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=6)]
        public System.Nullable<long> maxSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=7)]
        public System.Nullable<System.DateTime> startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=8)]
        public System.Nullable<System.DateTime> endDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=9)]
        public System.Nullable<bool> isDeleted;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=10)]
        public System.Nullable<bool> isComplete;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=11)]
        public string metaName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=12)]
        public string metaValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=13)]
        public long offset;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=14)]
        public long pageSize;
        
        public SearchFilesRequest() {
        }
        
        public SearchFilesRequest(string sessionToken, System.Nullable<long> fileID, string fileName, string hashMD5, string hashSHA1, System.Nullable<long> minSize, System.Nullable<long> maxSize, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Nullable<bool> isDeleted, System.Nullable<bool> isComplete, string metaName, string metaValue, long offset, long pageSize) {
            this.sessionToken = sessionToken;
            this.fileID = fileID;
            this.fileName = fileName;
            this.hashMD5 = hashMD5;
            this.hashSHA1 = hashSHA1;
            this.minSize = minSize;
            this.maxSize = maxSize;
            this.startDate = startDate;
            this.endDate = endDate;
            this.isDeleted = isDeleted;
            this.isComplete = isComplete;
            this.metaName = metaName;
            this.metaValue = metaValue;
            this.offset = offset;
            this.pageSize = pageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchFilesResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SearchFilesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public System.Collections.Generic.List<DioWeb.DioService.FileProperties> matchedFiles;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public long totalResults;
        
        public SearchFilesResponse() {
        }
        
        public SearchFilesResponse(System.Collections.Generic.List<DioWeb.DioService.FileProperties> matchedFiles, long totalResults) {
            this.matchedFiles = matchedFiles;
            this.totalResults = totalResults;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchFilesTotalRequest", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SearchFilesTotalRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public string sessionToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=1)]
        public System.Nullable<long> fileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=2)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=3)]
        public string hashMD5;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=4)]
        public string hashSHA1;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=5)]
        public System.Nullable<long> minSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=6)]
        public System.Nullable<long> maxSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=7)]
        public System.Nullable<System.DateTime> startDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=8)]
        public System.Nullable<System.DateTime> endDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=9)]
        public System.Nullable<bool> isComplete;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=10)]
        public string metaName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=11)]
        public string metaValue;
        
        public SearchFilesTotalRequest() {
        }
        
        public SearchFilesTotalRequest(string sessionToken, System.Nullable<long> fileID, string fileName, string hashMD5, string hashSHA1, System.Nullable<long> minSize, System.Nullable<long> maxSize, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Nullable<bool> isComplete, string metaName, string metaValue) {
            this.sessionToken = sessionToken;
            this.fileID = fileID;
            this.fileName = fileName;
            this.hashMD5 = hashMD5;
            this.hashSHA1 = hashSHA1;
            this.minSize = minSize;
            this.maxSize = maxSize;
            this.startDate = startDate;
            this.endDate = endDate;
            this.isComplete = isComplete;
            this.metaName = metaName;
            this.metaValue = metaValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SearchFilesTotalResponse", WrapperNamespace="http://service.diomedestorage.com", IsWrapped=true)]
    public partial class SearchFilesTotalResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service.diomedestorage.com", Order=0)]
        public DioWeb.DioService.SearchFilesTotalInfo fileTotalInfo;
        
        public SearchFilesTotalResponse() {
        }
        
        public SearchFilesTotalResponse(DioWeb.DioService.SearchFilesTotalInfo fileTotalInfo) {
            this.fileTotalInfo = fileTotalInfo;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IDiomedeStorageChannel : DioWeb.DioService.IDiomedeStorage, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CreateFileMetaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateFileMetaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CreateMetaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateMetaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetFileMetaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFileMetaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.MetaData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DioWeb.DioService.MetaData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetMetaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMetaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.MetaData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DioWeb.DioService.MetaData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ReplicateFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReplicateFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetStorageTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStorageTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.StorageType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DioWeb.DioService.StorageType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetPhysicalFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPhysicalFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.PhysicalFileInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DioWeb.DioService.PhysicalFileInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetPhysicalFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPhysicalFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DioWeb.DioService.PhysicalFileInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DioWeb.DioService.PhysicalFileInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SearchUploadLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchUploadLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long totalResults {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.UploadLogEntry> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DioWeb.DioService.UploadLogEntry>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SearchDownloadLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchDownloadLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long totalResults {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.DownloadLogEntry> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DioWeb.DioService.DownloadLogEntry>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SearchLoginLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchLoginLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long totalResults {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.LoginLogEntry> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DioWeb.DioService.LoginLogEntry>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAllProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.Product> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DioWeb.DioService.Product>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetMyProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMyProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.UserProduct> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DioWeb.DioService.UserProduct>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAllContractsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllContractsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.Contract> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DioWeb.DioService.Contract>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class PurchaseContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PurchaseContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetMyContractsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMyContractsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.UserContract> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DioWeb.DioService.UserContract>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SearchInvoiceLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchInvoiceLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.InvoiceLogEntry> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DioWeb.DioService.InvoiceLogEntry>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SearchFilesTotalLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchFilesTotalLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long totalResults {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.SearchFilesTotalInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DioWeb.DioService.SearchFilesTotalInfo>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DioWeb.DioService.UserInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DioWeb.DioService.UserInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetEmailAddressesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmailAddressesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SearchPaymentLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchPaymentLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.PaymentLogEntry> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DioWeb.DioService.PaymentLogEntry>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CreateReplicationPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateReplicationPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetReplicationPoliciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReplicationPoliciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.ReplicationPolicy> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DioWeb.DioService.ReplicationPolicy>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetDefaultReplicationPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDefaultReplicationPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DioWeb.DioService.ReplicationPolicy Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DioWeb.DioService.ReplicationPolicy)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CreateOAuthSecretAndKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateOAuthSecretAndKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DioWeb.DioService.ConsumerData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DioWeb.DioService.ConsumerData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetUploadTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUploadTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetDownloadURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDownloadURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SearchFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long totalResults {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.FileProperties> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<DioWeb.DioService.FileProperties>)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SearchFilesTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchFilesTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DioWeb.DioService.SearchFilesTotalInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DioWeb.DioService.SearchFilesTotalInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class DiomedeStorageClient : System.ServiceModel.ClientBase<DioWeb.DioService.IDiomedeStorage>, DioWeb.DioService.IDiomedeStorage {
        
        private BeginOperationDelegate onBeginRenameFileDelegate;
        
        private EndOperationDelegate onEndRenameFileDelegate;
        
        private System.Threading.SendOrPostCallback onRenameFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteFileDelegate;
        
        private EndOperationDelegate onEndDeleteFileDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginUndeleteFileDelegate;
        
        private EndOperationDelegate onEndUndeleteFileDelegate;
        
        private System.Threading.SendOrPostCallback onUndeleteFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateFileMetaDataDelegate;
        
        private EndOperationDelegate onEndCreateFileMetaDataDelegate;
        
        private System.Threading.SendOrPostCallback onCreateFileMetaDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetFileMetaDataDelegate;
        
        private EndOperationDelegate onEndSetFileMetaDataDelegate;
        
        private System.Threading.SendOrPostCallback onSetFileMetaDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteFileMetaDataDelegate;
        
        private EndOperationDelegate onEndDeleteFileMetaDataDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteFileMetaDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateMetaDataDelegate;
        
        private EndOperationDelegate onEndCreateMetaDataDelegate;
        
        private System.Threading.SendOrPostCallback onCreateMetaDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFileMetaDataDelegate;
        
        private EndOperationDelegate onEndGetFileMetaDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetFileMetaDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMetaDataDelegate;
        
        private EndOperationDelegate onEndGetMetaDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetMetaDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditMetaDataDelegate;
        
        private EndOperationDelegate onEndEditMetaDataDelegate;
        
        private System.Threading.SendOrPostCallback onEditMetaDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteMetaDataDelegate;
        
        private EndOperationDelegate onEndDeleteMetaDataDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteMetaDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveFileToTierDelegate;
        
        private EndOperationDelegate onEndMoveFileToTierDelegate;
        
        private System.Threading.SendOrPostCallback onMoveFileToTierCompletedDelegate;
        
        private BeginOperationDelegate onBeginReplicateFileDelegate;
        
        private EndOperationDelegate onEndReplicateFileDelegate;
        
        private System.Threading.SendOrPostCallback onReplicateFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnreplicateFileDelegate;
        
        private EndOperationDelegate onEndUnreplicateFileDelegate;
        
        private System.Threading.SendOrPostCallback onUnreplicateFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStorageTypesDelegate;
        
        private EndOperationDelegate onEndGetStorageTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetStorageTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPhysicalFilesDelegate;
        
        private EndOperationDelegate onEndGetPhysicalFilesDelegate;
        
        private System.Threading.SendOrPostCallback onGetPhysicalFilesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPhysicalFileDelegate;
        
        private EndOperationDelegate onEndGetPhysicalFileDelegate;
        
        private System.Threading.SendOrPostCallback onGetPhysicalFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchUploadLogDelegate;
        
        private EndOperationDelegate onEndSearchUploadLogDelegate;
        
        private System.Threading.SendOrPostCallback onSearchUploadLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchDownloadLogDelegate;
        
        private EndOperationDelegate onEndSearchDownloadLogDelegate;
        
        private System.Threading.SendOrPostCallback onSearchDownloadLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchLoginLogDelegate;
        
        private EndOperationDelegate onEndSearchLoginLogDelegate;
        
        private System.Threading.SendOrPostCallback onSearchLoginLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllProductsDelegate;
        
        private EndOperationDelegate onEndGetAllProductsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginPurchaseProductDelegate;
        
        private EndOperationDelegate onEndPurchaseProductDelegate;
        
        private System.Threading.SendOrPostCallback onPurchaseProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMyProductsDelegate;
        
        private EndOperationDelegate onEndGetMyProductsDelegate;
        
        private System.Threading.SendOrPostCallback onGetMyProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelProductDelegate;
        
        private EndOperationDelegate onEndCancelProductDelegate;
        
        private System.Threading.SendOrPostCallback onCancelProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllContractsDelegate;
        
        private EndOperationDelegate onEndGetAllContractsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllContractsCompletedDelegate;
        
        private BeginOperationDelegate onBeginPurchaseContractDelegate;
        
        private EndOperationDelegate onEndPurchaseContractDelegate;
        
        private System.Threading.SendOrPostCallback onPurchaseContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMyContractsDelegate;
        
        private EndOperationDelegate onEndGetMyContractsDelegate;
        
        private System.Threading.SendOrPostCallback onGetMyContractsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelContractDelegate;
        
        private EndOperationDelegate onEndCancelContractDelegate;
        
        private System.Threading.SendOrPostCallback onCancelContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchInvoiceLogDelegate;
        
        private EndOperationDelegate onEndSearchInvoiceLogDelegate;
        
        private System.Threading.SendOrPostCallback onSearchInvoiceLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchFilesTotalLogDelegate;
        
        private EndOperationDelegate onEndSearchFilesTotalLogDelegate;
        
        private System.Threading.SendOrPostCallback onSearchFilesTotalLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateUserDelegate;
        
        private EndOperationDelegate onEndCreateUserDelegate;
        
        private System.Threading.SendOrPostCallback onCreateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetUserInfoDelegate;
        
        private EndOperationDelegate onEndSetUserInfoDelegate;
        
        private System.Threading.SendOrPostCallback onSetUserInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserInfoDelegate;
        
        private EndOperationDelegate onEndGetUserInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUserInfoDelegate;
        
        private EndOperationDelegate onEndDeleteUserInfoDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUserInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmailAddressesDelegate;
        
        private EndOperationDelegate onEndGetEmailAddressesDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmailAddressesCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddEmailAddressDelegate;
        
        private EndOperationDelegate onEndAddEmailAddressDelegate;
        
        private System.Threading.SendOrPostCallback onAddEmailAddressCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteEmailAddressDelegate;
        
        private EndOperationDelegate onEndDeleteEmailAddressDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteEmailAddressCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetPrimaryEmailAddressDelegate;
        
        private EndOperationDelegate onEndSetPrimaryEmailAddressDelegate;
        
        private System.Threading.SendOrPostCallback onSetPrimaryEmailAddressCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUserDelegate;
        
        private EndOperationDelegate onEndDeleteUserDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchPaymentLogDelegate;
        
        private EndOperationDelegate onEndSearchPaymentLogDelegate;
        
        private System.Threading.SendOrPostCallback onSearchPaymentLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangePasswordDelegate;
        
        private EndOperationDelegate onEndChangePasswordDelegate;
        
        private System.Threading.SendOrPostCallback onChangePasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginResetPasswordDelegate;
        
        private EndOperationDelegate onEndResetPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onResetPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateReplicationPolicyDelegate;
        
        private EndOperationDelegate onEndCreateReplicationPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onCreateReplicationPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReplicationPoliciesDelegate;
        
        private EndOperationDelegate onEndGetReplicationPoliciesDelegate;
        
        private System.Threading.SendOrPostCallback onGetReplicationPoliciesCompletedDelegate;
        
        private BeginOperationDelegate onBeginEditReplicationPolicyDelegate;
        
        private EndOperationDelegate onEndEditReplicationPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onEditReplicationPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteReplicationPolicyDelegate;
        
        private EndOperationDelegate onEndDeleteReplicationPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteReplicationPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetReplicationPolicyDelegate;
        
        private EndOperationDelegate onEndSetReplicationPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onSetReplicationPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDefaultReplicationPolicyDelegate;
        
        private EndOperationDelegate onEndSetDefaultReplicationPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onSetDefaultReplicationPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDefaultReplicationPolicyDelegate;
        
        private EndOperationDelegate onEndGetDefaultReplicationPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onGetDefaultReplicationPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateOAuthSecretAndKeyDelegate;
        
        private EndOperationDelegate onEndCreateOAuthSecretAndKeyDelegate;
        
        private System.Threading.SendOrPostCallback onCreateOAuthSecretAndKeyCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogoutDelegate;
        
        private EndOperationDelegate onEndLogoutDelegate;
        
        private System.Threading.SendOrPostCallback onLogoutCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUploadTokenDelegate;
        
        private EndOperationDelegate onEndGetUploadTokenDelegate;
        
        private System.Threading.SendOrPostCallback onGetUploadTokenCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDownloadURLDelegate;
        
        private EndOperationDelegate onEndGetDownloadURLDelegate;
        
        private System.Threading.SendOrPostCallback onGetDownloadURLCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchFilesDelegate;
        
        private EndOperationDelegate onEndSearchFilesDelegate;
        
        private System.Threading.SendOrPostCallback onSearchFilesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchFilesTotalDelegate;
        
        private EndOperationDelegate onEndSearchFilesTotalDelegate;
        
        private System.Threading.SendOrPostCallback onSearchFilesTotalCompletedDelegate;
        
        public DiomedeStorageClient() {
        }
        
        public DiomedeStorageClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DiomedeStorageClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DiomedeStorageClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DiomedeStorageClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RenameFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UndeleteFileCompleted;
        
        public event System.EventHandler<CreateFileMetaDataCompletedEventArgs> CreateFileMetaDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetFileMetaDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteFileMetaDataCompleted;
        
        public event System.EventHandler<CreateMetaDataCompletedEventArgs> CreateMetaDataCompleted;
        
        public event System.EventHandler<GetFileMetaDataCompletedEventArgs> GetFileMetaDataCompleted;
        
        public event System.EventHandler<GetMetaDataCompletedEventArgs> GetMetaDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EditMetaDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteMetaDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MoveFileToTierCompleted;
        
        public event System.EventHandler<ReplicateFileCompletedEventArgs> ReplicateFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UnreplicateFileCompleted;
        
        public event System.EventHandler<GetStorageTypesCompletedEventArgs> GetStorageTypesCompleted;
        
        public event System.EventHandler<GetPhysicalFilesCompletedEventArgs> GetPhysicalFilesCompleted;
        
        public event System.EventHandler<GetPhysicalFileCompletedEventArgs> GetPhysicalFileCompleted;
        
        public event System.EventHandler<SearchUploadLogCompletedEventArgs> SearchUploadLogCompleted;
        
        public event System.EventHandler<SearchDownloadLogCompletedEventArgs> SearchDownloadLogCompleted;
        
        public event System.EventHandler<SearchLoginLogCompletedEventArgs> SearchLoginLogCompleted;
        
        public event System.EventHandler<GetAllProductsCompletedEventArgs> GetAllProductsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PurchaseProductCompleted;
        
        public event System.EventHandler<GetMyProductsCompletedEventArgs> GetMyProductsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelProductCompleted;
        
        public event System.EventHandler<GetAllContractsCompletedEventArgs> GetAllContractsCompleted;
        
        public event System.EventHandler<PurchaseContractCompletedEventArgs> PurchaseContractCompleted;
        
        public event System.EventHandler<GetMyContractsCompletedEventArgs> GetMyContractsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelContractCompleted;
        
        public event System.EventHandler<SearchInvoiceLogCompletedEventArgs> SearchInvoiceLogCompleted;
        
        public event System.EventHandler<SearchFilesTotalLogCompletedEventArgs> SearchFilesTotalLogCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetUserInfoCompleted;
        
        public event System.EventHandler<GetUserInfoCompletedEventArgs> GetUserInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteUserInfoCompleted;
        
        public event System.EventHandler<GetEmailAddressesCompletedEventArgs> GetEmailAddressesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddEmailAddressCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteEmailAddressCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetPrimaryEmailAddressCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteUserCompleted;
        
        public event System.EventHandler<SearchPaymentLogCompletedEventArgs> SearchPaymentLogCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ChangePasswordCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ResetPasswordCompleted;
        
        public event System.EventHandler<CreateReplicationPolicyCompletedEventArgs> CreateReplicationPolicyCompleted;
        
        public event System.EventHandler<GetReplicationPoliciesCompletedEventArgs> GetReplicationPoliciesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EditReplicationPolicyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteReplicationPolicyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetReplicationPolicyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetDefaultReplicationPolicyCompleted;
        
        public event System.EventHandler<GetDefaultReplicationPolicyCompletedEventArgs> GetDefaultReplicationPolicyCompleted;
        
        public event System.EventHandler<CreateOAuthSecretAndKeyCompletedEventArgs> CreateOAuthSecretAndKeyCompleted;
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogoutCompleted;
        
        public event System.EventHandler<GetUploadTokenCompletedEventArgs> GetUploadTokenCompleted;
        
        public event System.EventHandler<GetDownloadURLCompletedEventArgs> GetDownloadURLCompleted;
        
        public event System.EventHandler<SearchFilesCompletedEventArgs> SearchFilesCompleted;
        
        public event System.EventHandler<SearchFilesTotalCompletedEventArgs> SearchFilesTotalCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.RenameFileResponse DioWeb.DioService.IDiomedeStorage.RenameFile(DioWeb.DioService.RenameFileRequest request) {
            return base.Channel.RenameFile(request);
        }
        
        public void RenameFile(string sessionToken, long fileID, string newFileName) {
            DioWeb.DioService.RenameFileRequest inValue = new DioWeb.DioService.RenameFileRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.newFileName = newFileName;
            DioWeb.DioService.RenameFileResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).RenameFile(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginRenameFile(DioWeb.DioService.RenameFileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRenameFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRenameFile(string sessionToken, long fileID, string newFileName, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.RenameFileRequest inValue = new DioWeb.DioService.RenameFileRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.newFileName = newFileName;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginRenameFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.RenameFileResponse DioWeb.DioService.IDiomedeStorage.EndRenameFile(System.IAsyncResult result) {
            return base.Channel.EndRenameFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRenameFile(System.IAsyncResult result) {
            DioWeb.DioService.RenameFileResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndRenameFile(result);
        }
        
        private System.IAsyncResult OnBeginRenameFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            long fileID = ((long)(inValues[1]));
            string newFileName = ((string)(inValues[2]));
            return this.BeginRenameFile(sessionToken, fileID, newFileName, callback, asyncState);
        }
        
        private object[] OnEndRenameFile(System.IAsyncResult result) {
            this.EndRenameFile(result);
            return null;
        }
        
        private void OnRenameFileCompleted(object state) {
            if ((this.RenameFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RenameFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RenameFileAsync(string sessionToken, long fileID, string newFileName) {
            this.RenameFileAsync(sessionToken, fileID, newFileName, null);
        }
        
        public void RenameFileAsync(string sessionToken, long fileID, string newFileName, object userState) {
            if ((this.onBeginRenameFileDelegate == null)) {
                this.onBeginRenameFileDelegate = new BeginOperationDelegate(this.OnBeginRenameFile);
            }
            if ((this.onEndRenameFileDelegate == null)) {
                this.onEndRenameFileDelegate = new EndOperationDelegate(this.OnEndRenameFile);
            }
            if ((this.onRenameFileCompletedDelegate == null)) {
                this.onRenameFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRenameFileCompleted);
            }
            base.InvokeAsync(this.onBeginRenameFileDelegate, new object[] {
                        sessionToken,
                        fileID,
                        newFileName}, this.onEndRenameFileDelegate, this.onRenameFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.DeleteFileResponse DioWeb.DioService.IDiomedeStorage.DeleteFile(DioWeb.DioService.DeleteFileRequest request) {
            return base.Channel.DeleteFile(request);
        }
        
        public void DeleteFile(string sessionToken, long fileID) {
            DioWeb.DioService.DeleteFileRequest inValue = new DioWeb.DioService.DeleteFileRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            DioWeb.DioService.DeleteFileResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).DeleteFile(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginDeleteFile(DioWeb.DioService.DeleteFileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteFile(string sessionToken, long fileID, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.DeleteFileRequest inValue = new DioWeb.DioService.DeleteFileRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginDeleteFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.DeleteFileResponse DioWeb.DioService.IDiomedeStorage.EndDeleteFile(System.IAsyncResult result) {
            return base.Channel.EndDeleteFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteFile(System.IAsyncResult result) {
            DioWeb.DioService.DeleteFileResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndDeleteFile(result);
        }
        
        private System.IAsyncResult OnBeginDeleteFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            long fileID = ((long)(inValues[1]));
            return this.BeginDeleteFile(sessionToken, fileID, callback, asyncState);
        }
        
        private object[] OnEndDeleteFile(System.IAsyncResult result) {
            this.EndDeleteFile(result);
            return null;
        }
        
        private void OnDeleteFileCompleted(object state) {
            if ((this.DeleteFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteFileAsync(string sessionToken, long fileID) {
            this.DeleteFileAsync(sessionToken, fileID, null);
        }
        
        public void DeleteFileAsync(string sessionToken, long fileID, object userState) {
            if ((this.onBeginDeleteFileDelegate == null)) {
                this.onBeginDeleteFileDelegate = new BeginOperationDelegate(this.OnBeginDeleteFile);
            }
            if ((this.onEndDeleteFileDelegate == null)) {
                this.onEndDeleteFileDelegate = new EndOperationDelegate(this.OnEndDeleteFile);
            }
            if ((this.onDeleteFileCompletedDelegate == null)) {
                this.onDeleteFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteFileCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteFileDelegate, new object[] {
                        sessionToken,
                        fileID}, this.onEndDeleteFileDelegate, this.onDeleteFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.UndeleteFileResponse DioWeb.DioService.IDiomedeStorage.UndeleteFile(DioWeb.DioService.UndeleteFileRequest request) {
            return base.Channel.UndeleteFile(request);
        }
        
        public void UndeleteFile(string sessionToken, long fileID) {
            DioWeb.DioService.UndeleteFileRequest inValue = new DioWeb.DioService.UndeleteFileRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            DioWeb.DioService.UndeleteFileResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).UndeleteFile(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginUndeleteFile(DioWeb.DioService.UndeleteFileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUndeleteFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUndeleteFile(string sessionToken, long fileID, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.UndeleteFileRequest inValue = new DioWeb.DioService.UndeleteFileRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginUndeleteFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.UndeleteFileResponse DioWeb.DioService.IDiomedeStorage.EndUndeleteFile(System.IAsyncResult result) {
            return base.Channel.EndUndeleteFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUndeleteFile(System.IAsyncResult result) {
            DioWeb.DioService.UndeleteFileResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndUndeleteFile(result);
        }
        
        private System.IAsyncResult OnBeginUndeleteFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            long fileID = ((long)(inValues[1]));
            return this.BeginUndeleteFile(sessionToken, fileID, callback, asyncState);
        }
        
        private object[] OnEndUndeleteFile(System.IAsyncResult result) {
            this.EndUndeleteFile(result);
            return null;
        }
        
        private void OnUndeleteFileCompleted(object state) {
            if ((this.UndeleteFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UndeleteFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UndeleteFileAsync(string sessionToken, long fileID) {
            this.UndeleteFileAsync(sessionToken, fileID, null);
        }
        
        public void UndeleteFileAsync(string sessionToken, long fileID, object userState) {
            if ((this.onBeginUndeleteFileDelegate == null)) {
                this.onBeginUndeleteFileDelegate = new BeginOperationDelegate(this.OnBeginUndeleteFile);
            }
            if ((this.onEndUndeleteFileDelegate == null)) {
                this.onEndUndeleteFileDelegate = new EndOperationDelegate(this.OnEndUndeleteFile);
            }
            if ((this.onUndeleteFileCompletedDelegate == null)) {
                this.onUndeleteFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUndeleteFileCompleted);
            }
            base.InvokeAsync(this.onBeginUndeleteFileDelegate, new object[] {
                        sessionToken,
                        fileID}, this.onEndUndeleteFileDelegate, this.onUndeleteFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.CreateFileMetaDataResponse DioWeb.DioService.IDiomedeStorage.CreateFileMetaData(DioWeb.DioService.CreateFileMetaDataRequest request) {
            return base.Channel.CreateFileMetaData(request);
        }
        
        public int CreateFileMetaData(string sessionToken, long fileID, string metaName, string metaValue) {
            DioWeb.DioService.CreateFileMetaDataRequest inValue = new DioWeb.DioService.CreateFileMetaDataRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.metaName = metaName;
            inValue.metaValue = metaValue;
            DioWeb.DioService.CreateFileMetaDataResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).CreateFileMetaData(inValue);
            return retVal.metaDataID;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginCreateFileMetaData(DioWeb.DioService.CreateFileMetaDataRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateFileMetaData(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateFileMetaData(string sessionToken, long fileID, string metaName, string metaValue, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.CreateFileMetaDataRequest inValue = new DioWeb.DioService.CreateFileMetaDataRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.metaName = metaName;
            inValue.metaValue = metaValue;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginCreateFileMetaData(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.CreateFileMetaDataResponse DioWeb.DioService.IDiomedeStorage.EndCreateFileMetaData(System.IAsyncResult result) {
            return base.Channel.EndCreateFileMetaData(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndCreateFileMetaData(System.IAsyncResult result) {
            DioWeb.DioService.CreateFileMetaDataResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndCreateFileMetaData(result);
            return retVal.metaDataID;
        }
        
        private System.IAsyncResult OnBeginCreateFileMetaData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            long fileID = ((long)(inValues[1]));
            string metaName = ((string)(inValues[2]));
            string metaValue = ((string)(inValues[3]));
            return this.BeginCreateFileMetaData(sessionToken, fileID, metaName, metaValue, callback, asyncState);
        }
        
        private object[] OnEndCreateFileMetaData(System.IAsyncResult result) {
            int retVal = this.EndCreateFileMetaData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateFileMetaDataCompleted(object state) {
            if ((this.CreateFileMetaDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateFileMetaDataCompleted(this, new CreateFileMetaDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateFileMetaDataAsync(string sessionToken, long fileID, string metaName, string metaValue) {
            this.CreateFileMetaDataAsync(sessionToken, fileID, metaName, metaValue, null);
        }
        
        public void CreateFileMetaDataAsync(string sessionToken, long fileID, string metaName, string metaValue, object userState) {
            if ((this.onBeginCreateFileMetaDataDelegate == null)) {
                this.onBeginCreateFileMetaDataDelegate = new BeginOperationDelegate(this.OnBeginCreateFileMetaData);
            }
            if ((this.onEndCreateFileMetaDataDelegate == null)) {
                this.onEndCreateFileMetaDataDelegate = new EndOperationDelegate(this.OnEndCreateFileMetaData);
            }
            if ((this.onCreateFileMetaDataCompletedDelegate == null)) {
                this.onCreateFileMetaDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateFileMetaDataCompleted);
            }
            base.InvokeAsync(this.onBeginCreateFileMetaDataDelegate, new object[] {
                        sessionToken,
                        fileID,
                        metaName,
                        metaValue}, this.onEndCreateFileMetaDataDelegate, this.onCreateFileMetaDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SetFileMetaDataResponse DioWeb.DioService.IDiomedeStorage.SetFileMetaData(DioWeb.DioService.SetFileMetaDataRequest request) {
            return base.Channel.SetFileMetaData(request);
        }
        
        public void SetFileMetaData(string sessionToken, long fileID, int metaDataID) {
            DioWeb.DioService.SetFileMetaDataRequest inValue = new DioWeb.DioService.SetFileMetaDataRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.metaDataID = metaDataID;
            DioWeb.DioService.SetFileMetaDataResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).SetFileMetaData(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginSetFileMetaData(DioWeb.DioService.SetFileMetaDataRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetFileMetaData(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetFileMetaData(string sessionToken, long fileID, int metaDataID, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.SetFileMetaDataRequest inValue = new DioWeb.DioService.SetFileMetaDataRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.metaDataID = metaDataID;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginSetFileMetaData(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SetFileMetaDataResponse DioWeb.DioService.IDiomedeStorage.EndSetFileMetaData(System.IAsyncResult result) {
            return base.Channel.EndSetFileMetaData(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetFileMetaData(System.IAsyncResult result) {
            DioWeb.DioService.SetFileMetaDataResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndSetFileMetaData(result);
        }
        
        private System.IAsyncResult OnBeginSetFileMetaData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            long fileID = ((long)(inValues[1]));
            int metaDataID = ((int)(inValues[2]));
            return this.BeginSetFileMetaData(sessionToken, fileID, metaDataID, callback, asyncState);
        }
        
        private object[] OnEndSetFileMetaData(System.IAsyncResult result) {
            this.EndSetFileMetaData(result);
            return null;
        }
        
        private void OnSetFileMetaDataCompleted(object state) {
            if ((this.SetFileMetaDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetFileMetaDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetFileMetaDataAsync(string sessionToken, long fileID, int metaDataID) {
            this.SetFileMetaDataAsync(sessionToken, fileID, metaDataID, null);
        }
        
        public void SetFileMetaDataAsync(string sessionToken, long fileID, int metaDataID, object userState) {
            if ((this.onBeginSetFileMetaDataDelegate == null)) {
                this.onBeginSetFileMetaDataDelegate = new BeginOperationDelegate(this.OnBeginSetFileMetaData);
            }
            if ((this.onEndSetFileMetaDataDelegate == null)) {
                this.onEndSetFileMetaDataDelegate = new EndOperationDelegate(this.OnEndSetFileMetaData);
            }
            if ((this.onSetFileMetaDataCompletedDelegate == null)) {
                this.onSetFileMetaDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetFileMetaDataCompleted);
            }
            base.InvokeAsync(this.onBeginSetFileMetaDataDelegate, new object[] {
                        sessionToken,
                        fileID,
                        metaDataID}, this.onEndSetFileMetaDataDelegate, this.onSetFileMetaDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.DeleteFileMetaDataResponse DioWeb.DioService.IDiomedeStorage.DeleteFileMetaData(DioWeb.DioService.DeleteFileMetaDataRequest request) {
            return base.Channel.DeleteFileMetaData(request);
        }
        
        public void DeleteFileMetaData(string sessionToken, long fileID, int metaDataID) {
            DioWeb.DioService.DeleteFileMetaDataRequest inValue = new DioWeb.DioService.DeleteFileMetaDataRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.metaDataID = metaDataID;
            DioWeb.DioService.DeleteFileMetaDataResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).DeleteFileMetaData(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginDeleteFileMetaData(DioWeb.DioService.DeleteFileMetaDataRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteFileMetaData(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteFileMetaData(string sessionToken, long fileID, int metaDataID, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.DeleteFileMetaDataRequest inValue = new DioWeb.DioService.DeleteFileMetaDataRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.metaDataID = metaDataID;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginDeleteFileMetaData(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.DeleteFileMetaDataResponse DioWeb.DioService.IDiomedeStorage.EndDeleteFileMetaData(System.IAsyncResult result) {
            return base.Channel.EndDeleteFileMetaData(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteFileMetaData(System.IAsyncResult result) {
            DioWeb.DioService.DeleteFileMetaDataResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndDeleteFileMetaData(result);
        }
        
        private System.IAsyncResult OnBeginDeleteFileMetaData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            long fileID = ((long)(inValues[1]));
            int metaDataID = ((int)(inValues[2]));
            return this.BeginDeleteFileMetaData(sessionToken, fileID, metaDataID, callback, asyncState);
        }
        
        private object[] OnEndDeleteFileMetaData(System.IAsyncResult result) {
            this.EndDeleteFileMetaData(result);
            return null;
        }
        
        private void OnDeleteFileMetaDataCompleted(object state) {
            if ((this.DeleteFileMetaDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteFileMetaDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteFileMetaDataAsync(string sessionToken, long fileID, int metaDataID) {
            this.DeleteFileMetaDataAsync(sessionToken, fileID, metaDataID, null);
        }
        
        public void DeleteFileMetaDataAsync(string sessionToken, long fileID, int metaDataID, object userState) {
            if ((this.onBeginDeleteFileMetaDataDelegate == null)) {
                this.onBeginDeleteFileMetaDataDelegate = new BeginOperationDelegate(this.OnBeginDeleteFileMetaData);
            }
            if ((this.onEndDeleteFileMetaDataDelegate == null)) {
                this.onEndDeleteFileMetaDataDelegate = new EndOperationDelegate(this.OnEndDeleteFileMetaData);
            }
            if ((this.onDeleteFileMetaDataCompletedDelegate == null)) {
                this.onDeleteFileMetaDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteFileMetaDataCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteFileMetaDataDelegate, new object[] {
                        sessionToken,
                        fileID,
                        metaDataID}, this.onEndDeleteFileMetaDataDelegate, this.onDeleteFileMetaDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.CreateMetaDataResponse DioWeb.DioService.IDiomedeStorage.CreateMetaData(DioWeb.DioService.CreateMetaDataRequest request) {
            return base.Channel.CreateMetaData(request);
        }
        
        public int CreateMetaData(string sessionToken, string name, string value) {
            DioWeb.DioService.CreateMetaDataRequest inValue = new DioWeb.DioService.CreateMetaDataRequest();
            inValue.sessionToken = sessionToken;
            inValue.name = name;
            inValue.value = value;
            DioWeb.DioService.CreateMetaDataResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).CreateMetaData(inValue);
            return retVal.metaDataID;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginCreateMetaData(DioWeb.DioService.CreateMetaDataRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateMetaData(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateMetaData(string sessionToken, string name, string value, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.CreateMetaDataRequest inValue = new DioWeb.DioService.CreateMetaDataRequest();
            inValue.sessionToken = sessionToken;
            inValue.name = name;
            inValue.value = value;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginCreateMetaData(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.CreateMetaDataResponse DioWeb.DioService.IDiomedeStorage.EndCreateMetaData(System.IAsyncResult result) {
            return base.Channel.EndCreateMetaData(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndCreateMetaData(System.IAsyncResult result) {
            DioWeb.DioService.CreateMetaDataResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndCreateMetaData(result);
            return retVal.metaDataID;
        }
        
        private System.IAsyncResult OnBeginCreateMetaData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            string name = ((string)(inValues[1]));
            string value = ((string)(inValues[2]));
            return this.BeginCreateMetaData(sessionToken, name, value, callback, asyncState);
        }
        
        private object[] OnEndCreateMetaData(System.IAsyncResult result) {
            int retVal = this.EndCreateMetaData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateMetaDataCompleted(object state) {
            if ((this.CreateMetaDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateMetaDataCompleted(this, new CreateMetaDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateMetaDataAsync(string sessionToken, string name, string value) {
            this.CreateMetaDataAsync(sessionToken, name, value, null);
        }
        
        public void CreateMetaDataAsync(string sessionToken, string name, string value, object userState) {
            if ((this.onBeginCreateMetaDataDelegate == null)) {
                this.onBeginCreateMetaDataDelegate = new BeginOperationDelegate(this.OnBeginCreateMetaData);
            }
            if ((this.onEndCreateMetaDataDelegate == null)) {
                this.onEndCreateMetaDataDelegate = new EndOperationDelegate(this.OnEndCreateMetaData);
            }
            if ((this.onCreateMetaDataCompletedDelegate == null)) {
                this.onCreateMetaDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateMetaDataCompleted);
            }
            base.InvokeAsync(this.onBeginCreateMetaDataDelegate, new object[] {
                        sessionToken,
                        name,
                        value}, this.onEndCreateMetaDataDelegate, this.onCreateMetaDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetFileMetaDataResponse DioWeb.DioService.IDiomedeStorage.GetFileMetaData(DioWeb.DioService.GetFileMetaDataRequest request) {
            return base.Channel.GetFileMetaData(request);
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.MetaData> GetFileMetaData(string sessionToken, long fileID) {
            DioWeb.DioService.GetFileMetaDataRequest inValue = new DioWeb.DioService.GetFileMetaDataRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            DioWeb.DioService.GetFileMetaDataResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).GetFileMetaData(inValue);
            return retVal.metaData;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginGetFileMetaData(DioWeb.DioService.GetFileMetaDataRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFileMetaData(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFileMetaData(string sessionToken, long fileID, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.GetFileMetaDataRequest inValue = new DioWeb.DioService.GetFileMetaDataRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginGetFileMetaData(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetFileMetaDataResponse DioWeb.DioService.IDiomedeStorage.EndGetFileMetaData(System.IAsyncResult result) {
            return base.Channel.EndGetFileMetaData(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DioWeb.DioService.MetaData> EndGetFileMetaData(System.IAsyncResult result) {
            DioWeb.DioService.GetFileMetaDataResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndGetFileMetaData(result);
            return retVal.metaData;
        }
        
        private System.IAsyncResult OnBeginGetFileMetaData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            long fileID = ((long)(inValues[1]));
            return this.BeginGetFileMetaData(sessionToken, fileID, callback, asyncState);
        }
        
        private object[] OnEndGetFileMetaData(System.IAsyncResult result) {
            System.Collections.Generic.List<DioWeb.DioService.MetaData> retVal = this.EndGetFileMetaData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFileMetaDataCompleted(object state) {
            if ((this.GetFileMetaDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFileMetaDataCompleted(this, new GetFileMetaDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFileMetaDataAsync(string sessionToken, long fileID) {
            this.GetFileMetaDataAsync(sessionToken, fileID, null);
        }
        
        public void GetFileMetaDataAsync(string sessionToken, long fileID, object userState) {
            if ((this.onBeginGetFileMetaDataDelegate == null)) {
                this.onBeginGetFileMetaDataDelegate = new BeginOperationDelegate(this.OnBeginGetFileMetaData);
            }
            if ((this.onEndGetFileMetaDataDelegate == null)) {
                this.onEndGetFileMetaDataDelegate = new EndOperationDelegate(this.OnEndGetFileMetaData);
            }
            if ((this.onGetFileMetaDataCompletedDelegate == null)) {
                this.onGetFileMetaDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFileMetaDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetFileMetaDataDelegate, new object[] {
                        sessionToken,
                        fileID}, this.onEndGetFileMetaDataDelegate, this.onGetFileMetaDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetMetaDataResponse DioWeb.DioService.IDiomedeStorage.GetMetaData(DioWeb.DioService.GetMetaDataRequest request) {
            return base.Channel.GetMetaData(request);
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.MetaData> GetMetaData(string sessionToken, System.Nullable<int> metaDataID, string name, string value) {
            DioWeb.DioService.GetMetaDataRequest inValue = new DioWeb.DioService.GetMetaDataRequest();
            inValue.sessionToken = sessionToken;
            inValue.metaDataID = metaDataID;
            inValue.name = name;
            inValue.value = value;
            DioWeb.DioService.GetMetaDataResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).GetMetaData(inValue);
            return retVal.metaData;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginGetMetaData(DioWeb.DioService.GetMetaDataRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMetaData(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMetaData(string sessionToken, System.Nullable<int> metaDataID, string name, string value, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.GetMetaDataRequest inValue = new DioWeb.DioService.GetMetaDataRequest();
            inValue.sessionToken = sessionToken;
            inValue.metaDataID = metaDataID;
            inValue.name = name;
            inValue.value = value;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginGetMetaData(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetMetaDataResponse DioWeb.DioService.IDiomedeStorage.EndGetMetaData(System.IAsyncResult result) {
            return base.Channel.EndGetMetaData(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DioWeb.DioService.MetaData> EndGetMetaData(System.IAsyncResult result) {
            DioWeb.DioService.GetMetaDataResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndGetMetaData(result);
            return retVal.metaData;
        }
        
        private System.IAsyncResult OnBeginGetMetaData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            System.Nullable<int> metaDataID = ((System.Nullable<int>)(inValues[1]));
            string name = ((string)(inValues[2]));
            string value = ((string)(inValues[3]));
            return this.BeginGetMetaData(sessionToken, metaDataID, name, value, callback, asyncState);
        }
        
        private object[] OnEndGetMetaData(System.IAsyncResult result) {
            System.Collections.Generic.List<DioWeb.DioService.MetaData> retVal = this.EndGetMetaData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMetaDataCompleted(object state) {
            if ((this.GetMetaDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMetaDataCompleted(this, new GetMetaDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMetaDataAsync(string sessionToken, System.Nullable<int> metaDataID, string name, string value) {
            this.GetMetaDataAsync(sessionToken, metaDataID, name, value, null);
        }
        
        public void GetMetaDataAsync(string sessionToken, System.Nullable<int> metaDataID, string name, string value, object userState) {
            if ((this.onBeginGetMetaDataDelegate == null)) {
                this.onBeginGetMetaDataDelegate = new BeginOperationDelegate(this.OnBeginGetMetaData);
            }
            if ((this.onEndGetMetaDataDelegate == null)) {
                this.onEndGetMetaDataDelegate = new EndOperationDelegate(this.OnEndGetMetaData);
            }
            if ((this.onGetMetaDataCompletedDelegate == null)) {
                this.onGetMetaDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMetaDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetMetaDataDelegate, new object[] {
                        sessionToken,
                        metaDataID,
                        name,
                        value}, this.onEndGetMetaDataDelegate, this.onGetMetaDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.EditMetaDataResponse DioWeb.DioService.IDiomedeStorage.EditMetaData(DioWeb.DioService.EditMetaDataRequest request) {
            return base.Channel.EditMetaData(request);
        }
        
        public void EditMetaData(string sessionToken, int metaDataID, string name, string value) {
            DioWeb.DioService.EditMetaDataRequest inValue = new DioWeb.DioService.EditMetaDataRequest();
            inValue.sessionToken = sessionToken;
            inValue.metaDataID = metaDataID;
            inValue.name = name;
            inValue.value = value;
            DioWeb.DioService.EditMetaDataResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EditMetaData(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginEditMetaData(DioWeb.DioService.EditMetaDataRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditMetaData(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEditMetaData(string sessionToken, int metaDataID, string name, string value, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.EditMetaDataRequest inValue = new DioWeb.DioService.EditMetaDataRequest();
            inValue.sessionToken = sessionToken;
            inValue.metaDataID = metaDataID;
            inValue.name = name;
            inValue.value = value;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginEditMetaData(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.EditMetaDataResponse DioWeb.DioService.IDiomedeStorage.EndEditMetaData(System.IAsyncResult result) {
            return base.Channel.EndEditMetaData(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndEditMetaData(System.IAsyncResult result) {
            DioWeb.DioService.EditMetaDataResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndEditMetaData(result);
        }
        
        private System.IAsyncResult OnBeginEditMetaData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            int metaDataID = ((int)(inValues[1]));
            string name = ((string)(inValues[2]));
            string value = ((string)(inValues[3]));
            return this.BeginEditMetaData(sessionToken, metaDataID, name, value, callback, asyncState);
        }
        
        private object[] OnEndEditMetaData(System.IAsyncResult result) {
            this.EndEditMetaData(result);
            return null;
        }
        
        private void OnEditMetaDataCompleted(object state) {
            if ((this.EditMetaDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditMetaDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditMetaDataAsync(string sessionToken, int metaDataID, string name, string value) {
            this.EditMetaDataAsync(sessionToken, metaDataID, name, value, null);
        }
        
        public void EditMetaDataAsync(string sessionToken, int metaDataID, string name, string value, object userState) {
            if ((this.onBeginEditMetaDataDelegate == null)) {
                this.onBeginEditMetaDataDelegate = new BeginOperationDelegate(this.OnBeginEditMetaData);
            }
            if ((this.onEndEditMetaDataDelegate == null)) {
                this.onEndEditMetaDataDelegate = new EndOperationDelegate(this.OnEndEditMetaData);
            }
            if ((this.onEditMetaDataCompletedDelegate == null)) {
                this.onEditMetaDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditMetaDataCompleted);
            }
            base.InvokeAsync(this.onBeginEditMetaDataDelegate, new object[] {
                        sessionToken,
                        metaDataID,
                        name,
                        value}, this.onEndEditMetaDataDelegate, this.onEditMetaDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.DeleteMetaDataResponse DioWeb.DioService.IDiomedeStorage.DeleteMetaData(DioWeb.DioService.DeleteMetaDataRequest request) {
            return base.Channel.DeleteMetaData(request);
        }
        
        public void DeleteMetaData(string sessionToken, int metaDataID) {
            DioWeb.DioService.DeleteMetaDataRequest inValue = new DioWeb.DioService.DeleteMetaDataRequest();
            inValue.sessionToken = sessionToken;
            inValue.metaDataID = metaDataID;
            DioWeb.DioService.DeleteMetaDataResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).DeleteMetaData(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginDeleteMetaData(DioWeb.DioService.DeleteMetaDataRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteMetaData(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteMetaData(string sessionToken, int metaDataID, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.DeleteMetaDataRequest inValue = new DioWeb.DioService.DeleteMetaDataRequest();
            inValue.sessionToken = sessionToken;
            inValue.metaDataID = metaDataID;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginDeleteMetaData(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.DeleteMetaDataResponse DioWeb.DioService.IDiomedeStorage.EndDeleteMetaData(System.IAsyncResult result) {
            return base.Channel.EndDeleteMetaData(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteMetaData(System.IAsyncResult result) {
            DioWeb.DioService.DeleteMetaDataResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndDeleteMetaData(result);
        }
        
        private System.IAsyncResult OnBeginDeleteMetaData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            int metaDataID = ((int)(inValues[1]));
            return this.BeginDeleteMetaData(sessionToken, metaDataID, callback, asyncState);
        }
        
        private object[] OnEndDeleteMetaData(System.IAsyncResult result) {
            this.EndDeleteMetaData(result);
            return null;
        }
        
        private void OnDeleteMetaDataCompleted(object state) {
            if ((this.DeleteMetaDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteMetaDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteMetaDataAsync(string sessionToken, int metaDataID) {
            this.DeleteMetaDataAsync(sessionToken, metaDataID, null);
        }
        
        public void DeleteMetaDataAsync(string sessionToken, int metaDataID, object userState) {
            if ((this.onBeginDeleteMetaDataDelegate == null)) {
                this.onBeginDeleteMetaDataDelegate = new BeginOperationDelegate(this.OnBeginDeleteMetaData);
            }
            if ((this.onEndDeleteMetaDataDelegate == null)) {
                this.onEndDeleteMetaDataDelegate = new EndOperationDelegate(this.OnEndDeleteMetaData);
            }
            if ((this.onDeleteMetaDataCompletedDelegate == null)) {
                this.onDeleteMetaDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteMetaDataCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteMetaDataDelegate, new object[] {
                        sessionToken,
                        metaDataID}, this.onEndDeleteMetaDataDelegate, this.onDeleteMetaDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.MoveFileToTierResponse DioWeb.DioService.IDiomedeStorage.MoveFileToTier(DioWeb.DioService.MoveFileToTierRequest request) {
            return base.Channel.MoveFileToTier(request);
        }
        
        public void MoveFileToTier(string sessionToken, int fileID, int targetTier, string callbackAddress) {
            DioWeb.DioService.MoveFileToTierRequest inValue = new DioWeb.DioService.MoveFileToTierRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.targetTier = targetTier;
            inValue.callbackAddress = callbackAddress;
            DioWeb.DioService.MoveFileToTierResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).MoveFileToTier(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginMoveFileToTier(DioWeb.DioService.MoveFileToTierRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoveFileToTier(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMoveFileToTier(string sessionToken, int fileID, int targetTier, string callbackAddress, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.MoveFileToTierRequest inValue = new DioWeb.DioService.MoveFileToTierRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.targetTier = targetTier;
            inValue.callbackAddress = callbackAddress;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginMoveFileToTier(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.MoveFileToTierResponse DioWeb.DioService.IDiomedeStorage.EndMoveFileToTier(System.IAsyncResult result) {
            return base.Channel.EndMoveFileToTier(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndMoveFileToTier(System.IAsyncResult result) {
            DioWeb.DioService.MoveFileToTierResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndMoveFileToTier(result);
        }
        
        private System.IAsyncResult OnBeginMoveFileToTier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            int fileID = ((int)(inValues[1]));
            int targetTier = ((int)(inValues[2]));
            string callbackAddress = ((string)(inValues[3]));
            return this.BeginMoveFileToTier(sessionToken, fileID, targetTier, callbackAddress, callback, asyncState);
        }
        
        private object[] OnEndMoveFileToTier(System.IAsyncResult result) {
            this.EndMoveFileToTier(result);
            return null;
        }
        
        private void OnMoveFileToTierCompleted(object state) {
            if ((this.MoveFileToTierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveFileToTierCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveFileToTierAsync(string sessionToken, int fileID, int targetTier, string callbackAddress) {
            this.MoveFileToTierAsync(sessionToken, fileID, targetTier, callbackAddress, null);
        }
        
        public void MoveFileToTierAsync(string sessionToken, int fileID, int targetTier, string callbackAddress, object userState) {
            if ((this.onBeginMoveFileToTierDelegate == null)) {
                this.onBeginMoveFileToTierDelegate = new BeginOperationDelegate(this.OnBeginMoveFileToTier);
            }
            if ((this.onEndMoveFileToTierDelegate == null)) {
                this.onEndMoveFileToTierDelegate = new EndOperationDelegate(this.OnEndMoveFileToTier);
            }
            if ((this.onMoveFileToTierCompletedDelegate == null)) {
                this.onMoveFileToTierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveFileToTierCompleted);
            }
            base.InvokeAsync(this.onBeginMoveFileToTierDelegate, new object[] {
                        sessionToken,
                        fileID,
                        targetTier,
                        callbackAddress}, this.onEndMoveFileToTierDelegate, this.onMoveFileToTierCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.ReplicateFileResponse DioWeb.DioService.IDiomedeStorage.ReplicateFile(DioWeb.DioService.ReplicateFileRequest request) {
            return base.Channel.ReplicateFile(request);
        }
        
        public long ReplicateFile(string sessionToken, long fileID, int storageTypeID, System.Nullable<System.DateTime> expirationDate) {
            DioWeb.DioService.ReplicateFileRequest inValue = new DioWeb.DioService.ReplicateFileRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.storageTypeID = storageTypeID;
            inValue.expirationDate = expirationDate;
            DioWeb.DioService.ReplicateFileResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).ReplicateFile(inValue);
            return retVal.physicalFileID;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginReplicateFile(DioWeb.DioService.ReplicateFileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReplicateFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReplicateFile(string sessionToken, long fileID, int storageTypeID, System.Nullable<System.DateTime> expirationDate, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.ReplicateFileRequest inValue = new DioWeb.DioService.ReplicateFileRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.storageTypeID = storageTypeID;
            inValue.expirationDate = expirationDate;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginReplicateFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.ReplicateFileResponse DioWeb.DioService.IDiomedeStorage.EndReplicateFile(System.IAsyncResult result) {
            return base.Channel.EndReplicateFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndReplicateFile(System.IAsyncResult result) {
            DioWeb.DioService.ReplicateFileResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndReplicateFile(result);
            return retVal.physicalFileID;
        }
        
        private System.IAsyncResult OnBeginReplicateFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            long fileID = ((long)(inValues[1]));
            int storageTypeID = ((int)(inValues[2]));
            System.Nullable<System.DateTime> expirationDate = ((System.Nullable<System.DateTime>)(inValues[3]));
            return this.BeginReplicateFile(sessionToken, fileID, storageTypeID, expirationDate, callback, asyncState);
        }
        
        private object[] OnEndReplicateFile(System.IAsyncResult result) {
            long retVal = this.EndReplicateFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReplicateFileCompleted(object state) {
            if ((this.ReplicateFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReplicateFileCompleted(this, new ReplicateFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReplicateFileAsync(string sessionToken, long fileID, int storageTypeID, System.Nullable<System.DateTime> expirationDate) {
            this.ReplicateFileAsync(sessionToken, fileID, storageTypeID, expirationDate, null);
        }
        
        public void ReplicateFileAsync(string sessionToken, long fileID, int storageTypeID, System.Nullable<System.DateTime> expirationDate, object userState) {
            if ((this.onBeginReplicateFileDelegate == null)) {
                this.onBeginReplicateFileDelegate = new BeginOperationDelegate(this.OnBeginReplicateFile);
            }
            if ((this.onEndReplicateFileDelegate == null)) {
                this.onEndReplicateFileDelegate = new EndOperationDelegate(this.OnEndReplicateFile);
            }
            if ((this.onReplicateFileCompletedDelegate == null)) {
                this.onReplicateFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReplicateFileCompleted);
            }
            base.InvokeAsync(this.onBeginReplicateFileDelegate, new object[] {
                        sessionToken,
                        fileID,
                        storageTypeID,
                        expirationDate}, this.onEndReplicateFileDelegate, this.onReplicateFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.UnreplicateFileResponse DioWeb.DioService.IDiomedeStorage.UnreplicateFile(DioWeb.DioService.UnreplicateFileRequest request) {
            return base.Channel.UnreplicateFile(request);
        }
        
        public void UnreplicateFile(string sessionToken, long physicalFileID) {
            DioWeb.DioService.UnreplicateFileRequest inValue = new DioWeb.DioService.UnreplicateFileRequest();
            inValue.sessionToken = sessionToken;
            inValue.physicalFileID = physicalFileID;
            DioWeb.DioService.UnreplicateFileResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).UnreplicateFile(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginUnreplicateFile(DioWeb.DioService.UnreplicateFileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnreplicateFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUnreplicateFile(string sessionToken, long physicalFileID, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.UnreplicateFileRequest inValue = new DioWeb.DioService.UnreplicateFileRequest();
            inValue.sessionToken = sessionToken;
            inValue.physicalFileID = physicalFileID;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginUnreplicateFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.UnreplicateFileResponse DioWeb.DioService.IDiomedeStorage.EndUnreplicateFile(System.IAsyncResult result) {
            return base.Channel.EndUnreplicateFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUnreplicateFile(System.IAsyncResult result) {
            DioWeb.DioService.UnreplicateFileResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndUnreplicateFile(result);
        }
        
        private System.IAsyncResult OnBeginUnreplicateFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            long physicalFileID = ((long)(inValues[1]));
            return this.BeginUnreplicateFile(sessionToken, physicalFileID, callback, asyncState);
        }
        
        private object[] OnEndUnreplicateFile(System.IAsyncResult result) {
            this.EndUnreplicateFile(result);
            return null;
        }
        
        private void OnUnreplicateFileCompleted(object state) {
            if ((this.UnreplicateFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnreplicateFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnreplicateFileAsync(string sessionToken, long physicalFileID) {
            this.UnreplicateFileAsync(sessionToken, physicalFileID, null);
        }
        
        public void UnreplicateFileAsync(string sessionToken, long physicalFileID, object userState) {
            if ((this.onBeginUnreplicateFileDelegate == null)) {
                this.onBeginUnreplicateFileDelegate = new BeginOperationDelegate(this.OnBeginUnreplicateFile);
            }
            if ((this.onEndUnreplicateFileDelegate == null)) {
                this.onEndUnreplicateFileDelegate = new EndOperationDelegate(this.OnEndUnreplicateFile);
            }
            if ((this.onUnreplicateFileCompletedDelegate == null)) {
                this.onUnreplicateFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnreplicateFileCompleted);
            }
            base.InvokeAsync(this.onBeginUnreplicateFileDelegate, new object[] {
                        sessionToken,
                        physicalFileID}, this.onEndUnreplicateFileDelegate, this.onUnreplicateFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetStorageTypesResponse DioWeb.DioService.IDiomedeStorage.GetStorageTypes(DioWeb.DioService.GetStorageTypesRequest request) {
            return base.Channel.GetStorageTypes(request);
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.StorageType> GetStorageTypes() {
            DioWeb.DioService.GetStorageTypesRequest inValue = new DioWeb.DioService.GetStorageTypesRequest();
            DioWeb.DioService.GetStorageTypesResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).GetStorageTypes(inValue);
            return retVal.storageTypes;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginGetStorageTypes(DioWeb.DioService.GetStorageTypesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStorageTypes(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetStorageTypes(System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.GetStorageTypesRequest inValue = new DioWeb.DioService.GetStorageTypesRequest();
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginGetStorageTypes(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetStorageTypesResponse DioWeb.DioService.IDiomedeStorage.EndGetStorageTypes(System.IAsyncResult result) {
            return base.Channel.EndGetStorageTypes(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DioWeb.DioService.StorageType> EndGetStorageTypes(System.IAsyncResult result) {
            DioWeb.DioService.GetStorageTypesResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndGetStorageTypes(result);
            return retVal.storageTypes;
        }
        
        private System.IAsyncResult OnBeginGetStorageTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetStorageTypes(callback, asyncState);
        }
        
        private object[] OnEndGetStorageTypes(System.IAsyncResult result) {
            System.Collections.Generic.List<DioWeb.DioService.StorageType> retVal = this.EndGetStorageTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStorageTypesCompleted(object state) {
            if ((this.GetStorageTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStorageTypesCompleted(this, new GetStorageTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStorageTypesAsync() {
            this.GetStorageTypesAsync(null);
        }
        
        public void GetStorageTypesAsync(object userState) {
            if ((this.onBeginGetStorageTypesDelegate == null)) {
                this.onBeginGetStorageTypesDelegate = new BeginOperationDelegate(this.OnBeginGetStorageTypes);
            }
            if ((this.onEndGetStorageTypesDelegate == null)) {
                this.onEndGetStorageTypesDelegate = new EndOperationDelegate(this.OnEndGetStorageTypes);
            }
            if ((this.onGetStorageTypesCompletedDelegate == null)) {
                this.onGetStorageTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStorageTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetStorageTypesDelegate, null, this.onEndGetStorageTypesDelegate, this.onGetStorageTypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetPhysicalFilesResponse DioWeb.DioService.IDiomedeStorage.GetPhysicalFiles(DioWeb.DioService.GetPhysicalFilesRequest request) {
            return base.Channel.GetPhysicalFiles(request);
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.PhysicalFileInfo> GetPhysicalFiles(string sessionToken, long fileID) {
            DioWeb.DioService.GetPhysicalFilesRequest inValue = new DioWeb.DioService.GetPhysicalFilesRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            DioWeb.DioService.GetPhysicalFilesResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).GetPhysicalFiles(inValue);
            return retVal.physicalFiles;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginGetPhysicalFiles(DioWeb.DioService.GetPhysicalFilesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPhysicalFiles(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPhysicalFiles(string sessionToken, long fileID, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.GetPhysicalFilesRequest inValue = new DioWeb.DioService.GetPhysicalFilesRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginGetPhysicalFiles(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetPhysicalFilesResponse DioWeb.DioService.IDiomedeStorage.EndGetPhysicalFiles(System.IAsyncResult result) {
            return base.Channel.EndGetPhysicalFiles(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DioWeb.DioService.PhysicalFileInfo> EndGetPhysicalFiles(System.IAsyncResult result) {
            DioWeb.DioService.GetPhysicalFilesResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndGetPhysicalFiles(result);
            return retVal.physicalFiles;
        }
        
        private System.IAsyncResult OnBeginGetPhysicalFiles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            long fileID = ((long)(inValues[1]));
            return this.BeginGetPhysicalFiles(sessionToken, fileID, callback, asyncState);
        }
        
        private object[] OnEndGetPhysicalFiles(System.IAsyncResult result) {
            System.Collections.Generic.List<DioWeb.DioService.PhysicalFileInfo> retVal = this.EndGetPhysicalFiles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPhysicalFilesCompleted(object state) {
            if ((this.GetPhysicalFilesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPhysicalFilesCompleted(this, new GetPhysicalFilesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPhysicalFilesAsync(string sessionToken, long fileID) {
            this.GetPhysicalFilesAsync(sessionToken, fileID, null);
        }
        
        public void GetPhysicalFilesAsync(string sessionToken, long fileID, object userState) {
            if ((this.onBeginGetPhysicalFilesDelegate == null)) {
                this.onBeginGetPhysicalFilesDelegate = new BeginOperationDelegate(this.OnBeginGetPhysicalFiles);
            }
            if ((this.onEndGetPhysicalFilesDelegate == null)) {
                this.onEndGetPhysicalFilesDelegate = new EndOperationDelegate(this.OnEndGetPhysicalFiles);
            }
            if ((this.onGetPhysicalFilesCompletedDelegate == null)) {
                this.onGetPhysicalFilesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPhysicalFilesCompleted);
            }
            base.InvokeAsync(this.onBeginGetPhysicalFilesDelegate, new object[] {
                        sessionToken,
                        fileID}, this.onEndGetPhysicalFilesDelegate, this.onGetPhysicalFilesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetPhysicalFileResponse DioWeb.DioService.IDiomedeStorage.GetPhysicalFile(DioWeb.DioService.GetPhysicalFileRequest request) {
            return base.Channel.GetPhysicalFile(request);
        }
        
        public DioWeb.DioService.PhysicalFileInfo GetPhysicalFile(string sessionToken, long physicalFileID) {
            DioWeb.DioService.GetPhysicalFileRequest inValue = new DioWeb.DioService.GetPhysicalFileRequest();
            inValue.sessionToken = sessionToken;
            inValue.physicalFileID = physicalFileID;
            DioWeb.DioService.GetPhysicalFileResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).GetPhysicalFile(inValue);
            return retVal.physicalFile;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginGetPhysicalFile(DioWeb.DioService.GetPhysicalFileRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPhysicalFile(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPhysicalFile(string sessionToken, long physicalFileID, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.GetPhysicalFileRequest inValue = new DioWeb.DioService.GetPhysicalFileRequest();
            inValue.sessionToken = sessionToken;
            inValue.physicalFileID = physicalFileID;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginGetPhysicalFile(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetPhysicalFileResponse DioWeb.DioService.IDiomedeStorage.EndGetPhysicalFile(System.IAsyncResult result) {
            return base.Channel.EndGetPhysicalFile(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DioWeb.DioService.PhysicalFileInfo EndGetPhysicalFile(System.IAsyncResult result) {
            DioWeb.DioService.GetPhysicalFileResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndGetPhysicalFile(result);
            return retVal.physicalFile;
        }
        
        private System.IAsyncResult OnBeginGetPhysicalFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            long physicalFileID = ((long)(inValues[1]));
            return this.BeginGetPhysicalFile(sessionToken, physicalFileID, callback, asyncState);
        }
        
        private object[] OnEndGetPhysicalFile(System.IAsyncResult result) {
            DioWeb.DioService.PhysicalFileInfo retVal = this.EndGetPhysicalFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPhysicalFileCompleted(object state) {
            if ((this.GetPhysicalFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPhysicalFileCompleted(this, new GetPhysicalFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPhysicalFileAsync(string sessionToken, long physicalFileID) {
            this.GetPhysicalFileAsync(sessionToken, physicalFileID, null);
        }
        
        public void GetPhysicalFileAsync(string sessionToken, long physicalFileID, object userState) {
            if ((this.onBeginGetPhysicalFileDelegate == null)) {
                this.onBeginGetPhysicalFileDelegate = new BeginOperationDelegate(this.OnBeginGetPhysicalFile);
            }
            if ((this.onEndGetPhysicalFileDelegate == null)) {
                this.onEndGetPhysicalFileDelegate = new EndOperationDelegate(this.OnEndGetPhysicalFile);
            }
            if ((this.onGetPhysicalFileCompletedDelegate == null)) {
                this.onGetPhysicalFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPhysicalFileCompleted);
            }
            base.InvokeAsync(this.onBeginGetPhysicalFileDelegate, new object[] {
                        sessionToken,
                        physicalFileID}, this.onEndGetPhysicalFileDelegate, this.onGetPhysicalFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SearchUploadLogResponse DioWeb.DioService.IDiomedeStorage.SearchUploadLog(DioWeb.DioService.SearchUploadLogRequest request) {
            return base.Channel.SearchUploadLog(request);
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.UploadLogEntry> SearchUploadLog(string sessionToken, System.Nullable<long> fileID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string uploaderIP, long offset, long pageSize, out long totalResults) {
            DioWeb.DioService.SearchUploadLogRequest inValue = new DioWeb.DioService.SearchUploadLogRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.uploaderIP = uploaderIP;
            inValue.offset = offset;
            inValue.pageSize = pageSize;
            DioWeb.DioService.SearchUploadLogResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).SearchUploadLog(inValue);
            totalResults = retVal.totalResults;
            return retVal.logEntries;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginSearchUploadLog(DioWeb.DioService.SearchUploadLogRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchUploadLog(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearchUploadLog(string sessionToken, System.Nullable<long> fileID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string uploaderIP, long offset, long pageSize, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.SearchUploadLogRequest inValue = new DioWeb.DioService.SearchUploadLogRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.uploaderIP = uploaderIP;
            inValue.offset = offset;
            inValue.pageSize = pageSize;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginSearchUploadLog(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SearchUploadLogResponse DioWeb.DioService.IDiomedeStorage.EndSearchUploadLog(System.IAsyncResult result) {
            return base.Channel.EndSearchUploadLog(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DioWeb.DioService.UploadLogEntry> EndSearchUploadLog(System.IAsyncResult result, out long totalResults) {
            DioWeb.DioService.SearchUploadLogResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndSearchUploadLog(result);
            totalResults = retVal.totalResults;
            return retVal.logEntries;
        }
        
        private System.IAsyncResult OnBeginSearchUploadLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            System.Nullable<long> fileID = ((System.Nullable<long>)(inValues[1]));
            System.Nullable<System.DateTime> startDate = ((System.Nullable<System.DateTime>)(inValues[2]));
            System.Nullable<System.DateTime> endDate = ((System.Nullable<System.DateTime>)(inValues[3]));
            string uploaderIP = ((string)(inValues[4]));
            long offset = ((long)(inValues[5]));
            long pageSize = ((long)(inValues[6]));
            return this.BeginSearchUploadLog(sessionToken, fileID, startDate, endDate, uploaderIP, offset, pageSize, callback, asyncState);
        }
        
        private object[] OnEndSearchUploadLog(System.IAsyncResult result) {
            long totalResults = this.GetDefaultValueForInitialization<long>();
            System.Collections.Generic.List<DioWeb.DioService.UploadLogEntry> retVal = this.EndSearchUploadLog(result, out totalResults);
            return new object[] {
                    totalResults,
                    retVal};
        }
        
        private void OnSearchUploadLogCompleted(object state) {
            if ((this.SearchUploadLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchUploadLogCompleted(this, new SearchUploadLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchUploadLogAsync(string sessionToken, System.Nullable<long> fileID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string uploaderIP, long offset, long pageSize) {
            this.SearchUploadLogAsync(sessionToken, fileID, startDate, endDate, uploaderIP, offset, pageSize, null);
        }
        
        public void SearchUploadLogAsync(string sessionToken, System.Nullable<long> fileID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string uploaderIP, long offset, long pageSize, object userState) {
            if ((this.onBeginSearchUploadLogDelegate == null)) {
                this.onBeginSearchUploadLogDelegate = new BeginOperationDelegate(this.OnBeginSearchUploadLog);
            }
            if ((this.onEndSearchUploadLogDelegate == null)) {
                this.onEndSearchUploadLogDelegate = new EndOperationDelegate(this.OnEndSearchUploadLog);
            }
            if ((this.onSearchUploadLogCompletedDelegate == null)) {
                this.onSearchUploadLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchUploadLogCompleted);
            }
            base.InvokeAsync(this.onBeginSearchUploadLogDelegate, new object[] {
                        sessionToken,
                        fileID,
                        startDate,
                        endDate,
                        uploaderIP,
                        offset,
                        pageSize}, this.onEndSearchUploadLogDelegate, this.onSearchUploadLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SearchDownloadLogResponse DioWeb.DioService.IDiomedeStorage.SearchDownloadLog(DioWeb.DioService.SearchDownloadLogRequest request) {
            return base.Channel.SearchDownloadLog(request);
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.DownloadLogEntry> SearchDownloadLog(string sessionToken, System.Nullable<long> fileID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string downloadToken, string downloaderIP, long offset, long pageSize, out long totalResults) {
            DioWeb.DioService.SearchDownloadLogRequest inValue = new DioWeb.DioService.SearchDownloadLogRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.downloadToken = downloadToken;
            inValue.downloaderIP = downloaderIP;
            inValue.offset = offset;
            inValue.pageSize = pageSize;
            DioWeb.DioService.SearchDownloadLogResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).SearchDownloadLog(inValue);
            totalResults = retVal.totalResults;
            return retVal.logEntries;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginSearchDownloadLog(DioWeb.DioService.SearchDownloadLogRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchDownloadLog(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearchDownloadLog(string sessionToken, System.Nullable<long> fileID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string downloadToken, string downloaderIP, long offset, long pageSize, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.SearchDownloadLogRequest inValue = new DioWeb.DioService.SearchDownloadLogRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.downloadToken = downloadToken;
            inValue.downloaderIP = downloaderIP;
            inValue.offset = offset;
            inValue.pageSize = pageSize;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginSearchDownloadLog(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SearchDownloadLogResponse DioWeb.DioService.IDiomedeStorage.EndSearchDownloadLog(System.IAsyncResult result) {
            return base.Channel.EndSearchDownloadLog(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DioWeb.DioService.DownloadLogEntry> EndSearchDownloadLog(System.IAsyncResult result, out long totalResults) {
            DioWeb.DioService.SearchDownloadLogResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndSearchDownloadLog(result);
            totalResults = retVal.totalResults;
            return retVal.logEntries;
        }
        
        private System.IAsyncResult OnBeginSearchDownloadLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            System.Nullable<long> fileID = ((System.Nullable<long>)(inValues[1]));
            System.Nullable<System.DateTime> startDate = ((System.Nullable<System.DateTime>)(inValues[2]));
            System.Nullable<System.DateTime> endDate = ((System.Nullable<System.DateTime>)(inValues[3]));
            string downloadToken = ((string)(inValues[4]));
            string downloaderIP = ((string)(inValues[5]));
            long offset = ((long)(inValues[6]));
            long pageSize = ((long)(inValues[7]));
            return this.BeginSearchDownloadLog(sessionToken, fileID, startDate, endDate, downloadToken, downloaderIP, offset, pageSize, callback, asyncState);
        }
        
        private object[] OnEndSearchDownloadLog(System.IAsyncResult result) {
            long totalResults = this.GetDefaultValueForInitialization<long>();
            System.Collections.Generic.List<DioWeb.DioService.DownloadLogEntry> retVal = this.EndSearchDownloadLog(result, out totalResults);
            return new object[] {
                    totalResults,
                    retVal};
        }
        
        private void OnSearchDownloadLogCompleted(object state) {
            if ((this.SearchDownloadLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchDownloadLogCompleted(this, new SearchDownloadLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchDownloadLogAsync(string sessionToken, System.Nullable<long> fileID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string downloadToken, string downloaderIP, long offset, long pageSize) {
            this.SearchDownloadLogAsync(sessionToken, fileID, startDate, endDate, downloadToken, downloaderIP, offset, pageSize, null);
        }
        
        public void SearchDownloadLogAsync(string sessionToken, System.Nullable<long> fileID, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string downloadToken, string downloaderIP, long offset, long pageSize, object userState) {
            if ((this.onBeginSearchDownloadLogDelegate == null)) {
                this.onBeginSearchDownloadLogDelegate = new BeginOperationDelegate(this.OnBeginSearchDownloadLog);
            }
            if ((this.onEndSearchDownloadLogDelegate == null)) {
                this.onEndSearchDownloadLogDelegate = new EndOperationDelegate(this.OnEndSearchDownloadLog);
            }
            if ((this.onSearchDownloadLogCompletedDelegate == null)) {
                this.onSearchDownloadLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchDownloadLogCompleted);
            }
            base.InvokeAsync(this.onBeginSearchDownloadLogDelegate, new object[] {
                        sessionToken,
                        fileID,
                        startDate,
                        endDate,
                        downloadToken,
                        downloaderIP,
                        offset,
                        pageSize}, this.onEndSearchDownloadLogDelegate, this.onSearchDownloadLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SearchLoginLogResponse DioWeb.DioService.IDiomedeStorage.SearchLoginLog(DioWeb.DioService.SearchLoginLogRequest request) {
            return base.Channel.SearchLoginLog(request);
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.LoginLogEntry> SearchLoginLog(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string loginIP, long offset, long pageSize, out long totalResults) {
            DioWeb.DioService.SearchLoginLogRequest inValue = new DioWeb.DioService.SearchLoginLogRequest();
            inValue.sessionToken = sessionToken;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.loginIP = loginIP;
            inValue.offset = offset;
            inValue.pageSize = pageSize;
            DioWeb.DioService.SearchLoginLogResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).SearchLoginLog(inValue);
            totalResults = retVal.totalResults;
            return retVal.logEntries;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginSearchLoginLog(DioWeb.DioService.SearchLoginLogRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchLoginLog(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearchLoginLog(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string loginIP, long offset, long pageSize, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.SearchLoginLogRequest inValue = new DioWeb.DioService.SearchLoginLogRequest();
            inValue.sessionToken = sessionToken;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.loginIP = loginIP;
            inValue.offset = offset;
            inValue.pageSize = pageSize;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginSearchLoginLog(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SearchLoginLogResponse DioWeb.DioService.IDiomedeStorage.EndSearchLoginLog(System.IAsyncResult result) {
            return base.Channel.EndSearchLoginLog(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DioWeb.DioService.LoginLogEntry> EndSearchLoginLog(System.IAsyncResult result, out long totalResults) {
            DioWeb.DioService.SearchLoginLogResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndSearchLoginLog(result);
            totalResults = retVal.totalResults;
            return retVal.logEntries;
        }
        
        private System.IAsyncResult OnBeginSearchLoginLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            System.Nullable<System.DateTime> startDate = ((System.Nullable<System.DateTime>)(inValues[1]));
            System.Nullable<System.DateTime> endDate = ((System.Nullable<System.DateTime>)(inValues[2]));
            string loginIP = ((string)(inValues[3]));
            long offset = ((long)(inValues[4]));
            long pageSize = ((long)(inValues[5]));
            return this.BeginSearchLoginLog(sessionToken, startDate, endDate, loginIP, offset, pageSize, callback, asyncState);
        }
        
        private object[] OnEndSearchLoginLog(System.IAsyncResult result) {
            long totalResults = this.GetDefaultValueForInitialization<long>();
            System.Collections.Generic.List<DioWeb.DioService.LoginLogEntry> retVal = this.EndSearchLoginLog(result, out totalResults);
            return new object[] {
                    totalResults,
                    retVal};
        }
        
        private void OnSearchLoginLogCompleted(object state) {
            if ((this.SearchLoginLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchLoginLogCompleted(this, new SearchLoginLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchLoginLogAsync(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string loginIP, long offset, long pageSize) {
            this.SearchLoginLogAsync(sessionToken, startDate, endDate, loginIP, offset, pageSize, null);
        }
        
        public void SearchLoginLogAsync(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, string loginIP, long offset, long pageSize, object userState) {
            if ((this.onBeginSearchLoginLogDelegate == null)) {
                this.onBeginSearchLoginLogDelegate = new BeginOperationDelegate(this.OnBeginSearchLoginLog);
            }
            if ((this.onEndSearchLoginLogDelegate == null)) {
                this.onEndSearchLoginLogDelegate = new EndOperationDelegate(this.OnEndSearchLoginLog);
            }
            if ((this.onSearchLoginLogCompletedDelegate == null)) {
                this.onSearchLoginLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchLoginLogCompleted);
            }
            base.InvokeAsync(this.onBeginSearchLoginLogDelegate, new object[] {
                        sessionToken,
                        startDate,
                        endDate,
                        loginIP,
                        offset,
                        pageSize}, this.onEndSearchLoginLogDelegate, this.onSearchLoginLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetAllProductsResponse DioWeb.DioService.IDiomedeStorage.GetAllProducts(DioWeb.DioService.GetAllProductsRequest request) {
            return base.Channel.GetAllProducts(request);
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.Product> GetAllProducts() {
            DioWeb.DioService.GetAllProductsRequest inValue = new DioWeb.DioService.GetAllProductsRequest();
            DioWeb.DioService.GetAllProductsResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).GetAllProducts(inValue);
            return retVal.products;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginGetAllProducts(DioWeb.DioService.GetAllProductsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllProducts(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllProducts(System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.GetAllProductsRequest inValue = new DioWeb.DioService.GetAllProductsRequest();
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginGetAllProducts(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetAllProductsResponse DioWeb.DioService.IDiomedeStorage.EndGetAllProducts(System.IAsyncResult result) {
            return base.Channel.EndGetAllProducts(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DioWeb.DioService.Product> EndGetAllProducts(System.IAsyncResult result) {
            DioWeb.DioService.GetAllProductsResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndGetAllProducts(result);
            return retVal.products;
        }
        
        private System.IAsyncResult OnBeginGetAllProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllProducts(callback, asyncState);
        }
        
        private object[] OnEndGetAllProducts(System.IAsyncResult result) {
            System.Collections.Generic.List<DioWeb.DioService.Product> retVal = this.EndGetAllProducts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllProductsCompleted(object state) {
            if ((this.GetAllProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllProductsCompleted(this, new GetAllProductsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllProductsAsync() {
            this.GetAllProductsAsync(null);
        }
        
        public void GetAllProductsAsync(object userState) {
            if ((this.onBeginGetAllProductsDelegate == null)) {
                this.onBeginGetAllProductsDelegate = new BeginOperationDelegate(this.OnBeginGetAllProducts);
            }
            if ((this.onEndGetAllProductsDelegate == null)) {
                this.onEndGetAllProductsDelegate = new EndOperationDelegate(this.OnEndGetAllProducts);
            }
            if ((this.onGetAllProductsCompletedDelegate == null)) {
                this.onGetAllProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllProductsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllProductsDelegate, null, this.onEndGetAllProductsDelegate, this.onGetAllProductsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.PurchaseProductResponse DioWeb.DioService.IDiomedeStorage.PurchaseProduct(DioWeb.DioService.PurchaseProductRequest request) {
            return base.Channel.PurchaseProduct(request);
        }
        
        public void PurchaseProduct(string sessionToken, int productID) {
            DioWeb.DioService.PurchaseProductRequest inValue = new DioWeb.DioService.PurchaseProductRequest();
            inValue.sessionToken = sessionToken;
            inValue.productID = productID;
            DioWeb.DioService.PurchaseProductResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).PurchaseProduct(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginPurchaseProduct(DioWeb.DioService.PurchaseProductRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPurchaseProduct(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPurchaseProduct(string sessionToken, int productID, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.PurchaseProductRequest inValue = new DioWeb.DioService.PurchaseProductRequest();
            inValue.sessionToken = sessionToken;
            inValue.productID = productID;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginPurchaseProduct(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.PurchaseProductResponse DioWeb.DioService.IDiomedeStorage.EndPurchaseProduct(System.IAsyncResult result) {
            return base.Channel.EndPurchaseProduct(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndPurchaseProduct(System.IAsyncResult result) {
            DioWeb.DioService.PurchaseProductResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndPurchaseProduct(result);
        }
        
        private System.IAsyncResult OnBeginPurchaseProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            int productID = ((int)(inValues[1]));
            return this.BeginPurchaseProduct(sessionToken, productID, callback, asyncState);
        }
        
        private object[] OnEndPurchaseProduct(System.IAsyncResult result) {
            this.EndPurchaseProduct(result);
            return null;
        }
        
        private void OnPurchaseProductCompleted(object state) {
            if ((this.PurchaseProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PurchaseProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PurchaseProductAsync(string sessionToken, int productID) {
            this.PurchaseProductAsync(sessionToken, productID, null);
        }
        
        public void PurchaseProductAsync(string sessionToken, int productID, object userState) {
            if ((this.onBeginPurchaseProductDelegate == null)) {
                this.onBeginPurchaseProductDelegate = new BeginOperationDelegate(this.OnBeginPurchaseProduct);
            }
            if ((this.onEndPurchaseProductDelegate == null)) {
                this.onEndPurchaseProductDelegate = new EndOperationDelegate(this.OnEndPurchaseProduct);
            }
            if ((this.onPurchaseProductCompletedDelegate == null)) {
                this.onPurchaseProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPurchaseProductCompleted);
            }
            base.InvokeAsync(this.onBeginPurchaseProductDelegate, new object[] {
                        sessionToken,
                        productID}, this.onEndPurchaseProductDelegate, this.onPurchaseProductCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetMyProductsResponse DioWeb.DioService.IDiomedeStorage.GetMyProducts(DioWeb.DioService.GetMyProductsRequest request) {
            return base.Channel.GetMyProducts(request);
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.UserProduct> GetMyProducts(string sessionToken) {
            DioWeb.DioService.GetMyProductsRequest inValue = new DioWeb.DioService.GetMyProductsRequest();
            inValue.sessionToken = sessionToken;
            DioWeb.DioService.GetMyProductsResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).GetMyProducts(inValue);
            return retVal.products;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginGetMyProducts(DioWeb.DioService.GetMyProductsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMyProducts(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMyProducts(string sessionToken, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.GetMyProductsRequest inValue = new DioWeb.DioService.GetMyProductsRequest();
            inValue.sessionToken = sessionToken;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginGetMyProducts(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetMyProductsResponse DioWeb.DioService.IDiomedeStorage.EndGetMyProducts(System.IAsyncResult result) {
            return base.Channel.EndGetMyProducts(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DioWeb.DioService.UserProduct> EndGetMyProducts(System.IAsyncResult result) {
            DioWeb.DioService.GetMyProductsResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndGetMyProducts(result);
            return retVal.products;
        }
        
        private System.IAsyncResult OnBeginGetMyProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            return this.BeginGetMyProducts(sessionToken, callback, asyncState);
        }
        
        private object[] OnEndGetMyProducts(System.IAsyncResult result) {
            System.Collections.Generic.List<DioWeb.DioService.UserProduct> retVal = this.EndGetMyProducts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMyProductsCompleted(object state) {
            if ((this.GetMyProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMyProductsCompleted(this, new GetMyProductsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMyProductsAsync(string sessionToken) {
            this.GetMyProductsAsync(sessionToken, null);
        }
        
        public void GetMyProductsAsync(string sessionToken, object userState) {
            if ((this.onBeginGetMyProductsDelegate == null)) {
                this.onBeginGetMyProductsDelegate = new BeginOperationDelegate(this.OnBeginGetMyProducts);
            }
            if ((this.onEndGetMyProductsDelegate == null)) {
                this.onEndGetMyProductsDelegate = new EndOperationDelegate(this.OnEndGetMyProducts);
            }
            if ((this.onGetMyProductsCompletedDelegate == null)) {
                this.onGetMyProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMyProductsCompleted);
            }
            base.InvokeAsync(this.onBeginGetMyProductsDelegate, new object[] {
                        sessionToken}, this.onEndGetMyProductsDelegate, this.onGetMyProductsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.CancelProductResponse DioWeb.DioService.IDiomedeStorage.CancelProduct(DioWeb.DioService.CancelProductRequest request) {
            return base.Channel.CancelProduct(request);
        }
        
        public void CancelProduct(string sessionToken, int productID) {
            DioWeb.DioService.CancelProductRequest inValue = new DioWeb.DioService.CancelProductRequest();
            inValue.sessionToken = sessionToken;
            inValue.productID = productID;
            DioWeb.DioService.CancelProductResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).CancelProduct(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginCancelProduct(DioWeb.DioService.CancelProductRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelProduct(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCancelProduct(string sessionToken, int productID, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.CancelProductRequest inValue = new DioWeb.DioService.CancelProductRequest();
            inValue.sessionToken = sessionToken;
            inValue.productID = productID;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginCancelProduct(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.CancelProductResponse DioWeb.DioService.IDiomedeStorage.EndCancelProduct(System.IAsyncResult result) {
            return base.Channel.EndCancelProduct(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCancelProduct(System.IAsyncResult result) {
            DioWeb.DioService.CancelProductResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndCancelProduct(result);
        }
        
        private System.IAsyncResult OnBeginCancelProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            int productID = ((int)(inValues[1]));
            return this.BeginCancelProduct(sessionToken, productID, callback, asyncState);
        }
        
        private object[] OnEndCancelProduct(System.IAsyncResult result) {
            this.EndCancelProduct(result);
            return null;
        }
        
        private void OnCancelProductCompleted(object state) {
            if ((this.CancelProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelProductCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelProductAsync(string sessionToken, int productID) {
            this.CancelProductAsync(sessionToken, productID, null);
        }
        
        public void CancelProductAsync(string sessionToken, int productID, object userState) {
            if ((this.onBeginCancelProductDelegate == null)) {
                this.onBeginCancelProductDelegate = new BeginOperationDelegate(this.OnBeginCancelProduct);
            }
            if ((this.onEndCancelProductDelegate == null)) {
                this.onEndCancelProductDelegate = new EndOperationDelegate(this.OnEndCancelProduct);
            }
            if ((this.onCancelProductCompletedDelegate == null)) {
                this.onCancelProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelProductCompleted);
            }
            base.InvokeAsync(this.onBeginCancelProductDelegate, new object[] {
                        sessionToken,
                        productID}, this.onEndCancelProductDelegate, this.onCancelProductCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetAllContractsResponse DioWeb.DioService.IDiomedeStorage.GetAllContracts(DioWeb.DioService.GetAllContractsRequest request) {
            return base.Channel.GetAllContracts(request);
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.Contract> GetAllContracts() {
            DioWeb.DioService.GetAllContractsRequest inValue = new DioWeb.DioService.GetAllContractsRequest();
            DioWeb.DioService.GetAllContractsResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).GetAllContracts(inValue);
            return retVal.contracts;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginGetAllContracts(DioWeb.DioService.GetAllContractsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllContracts(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllContracts(System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.GetAllContractsRequest inValue = new DioWeb.DioService.GetAllContractsRequest();
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginGetAllContracts(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetAllContractsResponse DioWeb.DioService.IDiomedeStorage.EndGetAllContracts(System.IAsyncResult result) {
            return base.Channel.EndGetAllContracts(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DioWeb.DioService.Contract> EndGetAllContracts(System.IAsyncResult result) {
            DioWeb.DioService.GetAllContractsResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndGetAllContracts(result);
            return retVal.contracts;
        }
        
        private System.IAsyncResult OnBeginGetAllContracts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllContracts(callback, asyncState);
        }
        
        private object[] OnEndGetAllContracts(System.IAsyncResult result) {
            System.Collections.Generic.List<DioWeb.DioService.Contract> retVal = this.EndGetAllContracts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllContractsCompleted(object state) {
            if ((this.GetAllContractsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllContractsCompleted(this, new GetAllContractsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllContractsAsync() {
            this.GetAllContractsAsync(null);
        }
        
        public void GetAllContractsAsync(object userState) {
            if ((this.onBeginGetAllContractsDelegate == null)) {
                this.onBeginGetAllContractsDelegate = new BeginOperationDelegate(this.OnBeginGetAllContracts);
            }
            if ((this.onEndGetAllContractsDelegate == null)) {
                this.onEndGetAllContractsDelegate = new EndOperationDelegate(this.OnEndGetAllContracts);
            }
            if ((this.onGetAllContractsCompletedDelegate == null)) {
                this.onGetAllContractsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllContractsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllContractsDelegate, null, this.onEndGetAllContractsDelegate, this.onGetAllContractsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.PurchaseContractResponse DioWeb.DioService.IDiomedeStorage.PurchaseContract(DioWeb.DioService.PurchaseContractRequest request) {
            return base.Channel.PurchaseContract(request);
        }
        
        public long PurchaseContract(string sessionToken, int contractID) {
            DioWeb.DioService.PurchaseContractRequest inValue = new DioWeb.DioService.PurchaseContractRequest();
            inValue.sessionToken = sessionToken;
            inValue.contractID = contractID;
            DioWeb.DioService.PurchaseContractResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).PurchaseContract(inValue);
            return retVal.userContractID;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginPurchaseContract(DioWeb.DioService.PurchaseContractRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPurchaseContract(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPurchaseContract(string sessionToken, int contractID, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.PurchaseContractRequest inValue = new DioWeb.DioService.PurchaseContractRequest();
            inValue.sessionToken = sessionToken;
            inValue.contractID = contractID;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginPurchaseContract(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.PurchaseContractResponse DioWeb.DioService.IDiomedeStorage.EndPurchaseContract(System.IAsyncResult result) {
            return base.Channel.EndPurchaseContract(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndPurchaseContract(System.IAsyncResult result) {
            DioWeb.DioService.PurchaseContractResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndPurchaseContract(result);
            return retVal.userContractID;
        }
        
        private System.IAsyncResult OnBeginPurchaseContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            int contractID = ((int)(inValues[1]));
            return this.BeginPurchaseContract(sessionToken, contractID, callback, asyncState);
        }
        
        private object[] OnEndPurchaseContract(System.IAsyncResult result) {
            long retVal = this.EndPurchaseContract(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPurchaseContractCompleted(object state) {
            if ((this.PurchaseContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PurchaseContractCompleted(this, new PurchaseContractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PurchaseContractAsync(string sessionToken, int contractID) {
            this.PurchaseContractAsync(sessionToken, contractID, null);
        }
        
        public void PurchaseContractAsync(string sessionToken, int contractID, object userState) {
            if ((this.onBeginPurchaseContractDelegate == null)) {
                this.onBeginPurchaseContractDelegate = new BeginOperationDelegate(this.OnBeginPurchaseContract);
            }
            if ((this.onEndPurchaseContractDelegate == null)) {
                this.onEndPurchaseContractDelegate = new EndOperationDelegate(this.OnEndPurchaseContract);
            }
            if ((this.onPurchaseContractCompletedDelegate == null)) {
                this.onPurchaseContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPurchaseContractCompleted);
            }
            base.InvokeAsync(this.onBeginPurchaseContractDelegate, new object[] {
                        sessionToken,
                        contractID}, this.onEndPurchaseContractDelegate, this.onPurchaseContractCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetMyContractsResponse DioWeb.DioService.IDiomedeStorage.GetMyContracts(DioWeb.DioService.GetMyContractsRequest request) {
            return base.Channel.GetMyContracts(request);
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.UserContract> GetMyContracts(string sessionToken) {
            DioWeb.DioService.GetMyContractsRequest inValue = new DioWeb.DioService.GetMyContractsRequest();
            inValue.sessionToken = sessionToken;
            DioWeb.DioService.GetMyContractsResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).GetMyContracts(inValue);
            return retVal.contracts;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginGetMyContracts(DioWeb.DioService.GetMyContractsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMyContracts(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMyContracts(string sessionToken, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.GetMyContractsRequest inValue = new DioWeb.DioService.GetMyContractsRequest();
            inValue.sessionToken = sessionToken;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginGetMyContracts(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetMyContractsResponse DioWeb.DioService.IDiomedeStorage.EndGetMyContracts(System.IAsyncResult result) {
            return base.Channel.EndGetMyContracts(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DioWeb.DioService.UserContract> EndGetMyContracts(System.IAsyncResult result) {
            DioWeb.DioService.GetMyContractsResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndGetMyContracts(result);
            return retVal.contracts;
        }
        
        private System.IAsyncResult OnBeginGetMyContracts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            return this.BeginGetMyContracts(sessionToken, callback, asyncState);
        }
        
        private object[] OnEndGetMyContracts(System.IAsyncResult result) {
            System.Collections.Generic.List<DioWeb.DioService.UserContract> retVal = this.EndGetMyContracts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMyContractsCompleted(object state) {
            if ((this.GetMyContractsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMyContractsCompleted(this, new GetMyContractsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMyContractsAsync(string sessionToken) {
            this.GetMyContractsAsync(sessionToken, null);
        }
        
        public void GetMyContractsAsync(string sessionToken, object userState) {
            if ((this.onBeginGetMyContractsDelegate == null)) {
                this.onBeginGetMyContractsDelegate = new BeginOperationDelegate(this.OnBeginGetMyContracts);
            }
            if ((this.onEndGetMyContractsDelegate == null)) {
                this.onEndGetMyContractsDelegate = new EndOperationDelegate(this.OnEndGetMyContracts);
            }
            if ((this.onGetMyContractsCompletedDelegate == null)) {
                this.onGetMyContractsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMyContractsCompleted);
            }
            base.InvokeAsync(this.onBeginGetMyContractsDelegate, new object[] {
                        sessionToken}, this.onEndGetMyContractsDelegate, this.onGetMyContractsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.CancelContractResponse DioWeb.DioService.IDiomedeStorage.CancelContract(DioWeb.DioService.CancelContractRequest request) {
            return base.Channel.CancelContract(request);
        }
        
        public void CancelContract(string sessionToken, long userContractID) {
            DioWeb.DioService.CancelContractRequest inValue = new DioWeb.DioService.CancelContractRequest();
            inValue.sessionToken = sessionToken;
            inValue.userContractID = userContractID;
            DioWeb.DioService.CancelContractResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).CancelContract(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginCancelContract(DioWeb.DioService.CancelContractRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelContract(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCancelContract(string sessionToken, long userContractID, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.CancelContractRequest inValue = new DioWeb.DioService.CancelContractRequest();
            inValue.sessionToken = sessionToken;
            inValue.userContractID = userContractID;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginCancelContract(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.CancelContractResponse DioWeb.DioService.IDiomedeStorage.EndCancelContract(System.IAsyncResult result) {
            return base.Channel.EndCancelContract(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCancelContract(System.IAsyncResult result) {
            DioWeb.DioService.CancelContractResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndCancelContract(result);
        }
        
        private System.IAsyncResult OnBeginCancelContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            long userContractID = ((long)(inValues[1]));
            return this.BeginCancelContract(sessionToken, userContractID, callback, asyncState);
        }
        
        private object[] OnEndCancelContract(System.IAsyncResult result) {
            this.EndCancelContract(result);
            return null;
        }
        
        private void OnCancelContractCompleted(object state) {
            if ((this.CancelContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelContractCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelContractAsync(string sessionToken, long userContractID) {
            this.CancelContractAsync(sessionToken, userContractID, null);
        }
        
        public void CancelContractAsync(string sessionToken, long userContractID, object userState) {
            if ((this.onBeginCancelContractDelegate == null)) {
                this.onBeginCancelContractDelegate = new BeginOperationDelegate(this.OnBeginCancelContract);
            }
            if ((this.onEndCancelContractDelegate == null)) {
                this.onEndCancelContractDelegate = new EndOperationDelegate(this.OnEndCancelContract);
            }
            if ((this.onCancelContractCompletedDelegate == null)) {
                this.onCancelContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelContractCompleted);
            }
            base.InvokeAsync(this.onBeginCancelContractDelegate, new object[] {
                        sessionToken,
                        userContractID}, this.onEndCancelContractDelegate, this.onCancelContractCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SearchInvoiceResponse DioWeb.DioService.IDiomedeStorage.SearchInvoiceLog(DioWeb.DioService.SearchInvoiceRequest request) {
            return base.Channel.SearchInvoiceLog(request);
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.InvoiceLogEntry> SearchInvoiceLog(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, DioWeb.DioService.InvoiceStatus invoiceStatus) {
            DioWeb.DioService.SearchInvoiceRequest inValue = new DioWeb.DioService.SearchInvoiceRequest();
            inValue.sessionToken = sessionToken;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.invoiceStatus = invoiceStatus;
            DioWeb.DioService.SearchInvoiceResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).SearchInvoiceLog(inValue);
            return retVal.invoices;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginSearchInvoiceLog(DioWeb.DioService.SearchInvoiceRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchInvoiceLog(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearchInvoiceLog(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, DioWeb.DioService.InvoiceStatus invoiceStatus, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.SearchInvoiceRequest inValue = new DioWeb.DioService.SearchInvoiceRequest();
            inValue.sessionToken = sessionToken;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.invoiceStatus = invoiceStatus;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginSearchInvoiceLog(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SearchInvoiceResponse DioWeb.DioService.IDiomedeStorage.EndSearchInvoiceLog(System.IAsyncResult result) {
            return base.Channel.EndSearchInvoiceLog(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DioWeb.DioService.InvoiceLogEntry> EndSearchInvoiceLog(System.IAsyncResult result) {
            DioWeb.DioService.SearchInvoiceResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndSearchInvoiceLog(result);
            return retVal.invoices;
        }
        
        private System.IAsyncResult OnBeginSearchInvoiceLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            System.Nullable<System.DateTime> startDate = ((System.Nullable<System.DateTime>)(inValues[1]));
            System.Nullable<System.DateTime> endDate = ((System.Nullable<System.DateTime>)(inValues[2]));
            DioWeb.DioService.InvoiceStatus invoiceStatus = ((DioWeb.DioService.InvoiceStatus)(inValues[3]));
            return this.BeginSearchInvoiceLog(sessionToken, startDate, endDate, invoiceStatus, callback, asyncState);
        }
        
        private object[] OnEndSearchInvoiceLog(System.IAsyncResult result) {
            System.Collections.Generic.List<DioWeb.DioService.InvoiceLogEntry> retVal = this.EndSearchInvoiceLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchInvoiceLogCompleted(object state) {
            if ((this.SearchInvoiceLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchInvoiceLogCompleted(this, new SearchInvoiceLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchInvoiceLogAsync(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, DioWeb.DioService.InvoiceStatus invoiceStatus) {
            this.SearchInvoiceLogAsync(sessionToken, startDate, endDate, invoiceStatus, null);
        }
        
        public void SearchInvoiceLogAsync(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, DioWeb.DioService.InvoiceStatus invoiceStatus, object userState) {
            if ((this.onBeginSearchInvoiceLogDelegate == null)) {
                this.onBeginSearchInvoiceLogDelegate = new BeginOperationDelegate(this.OnBeginSearchInvoiceLog);
            }
            if ((this.onEndSearchInvoiceLogDelegate == null)) {
                this.onEndSearchInvoiceLogDelegate = new EndOperationDelegate(this.OnEndSearchInvoiceLog);
            }
            if ((this.onSearchInvoiceLogCompletedDelegate == null)) {
                this.onSearchInvoiceLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchInvoiceLogCompleted);
            }
            base.InvokeAsync(this.onBeginSearchInvoiceLogDelegate, new object[] {
                        sessionToken,
                        startDate,
                        endDate,
                        invoiceStatus}, this.onEndSearchInvoiceLogDelegate, this.onSearchInvoiceLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SearchFilesTotalLogResponse DioWeb.DioService.IDiomedeStorage.SearchFilesTotalLog(DioWeb.DioService.SearchFilesTotalLogRequest request) {
            return base.Channel.SearchFilesTotalLog(request);
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.SearchFilesTotalInfo> SearchFilesTotalLog(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, long offset, long pageSize, out long totalResults) {
            DioWeb.DioService.SearchFilesTotalLogRequest inValue = new DioWeb.DioService.SearchFilesTotalLogRequest();
            inValue.sessionToken = sessionToken;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.offset = offset;
            inValue.pageSize = pageSize;
            DioWeb.DioService.SearchFilesTotalLogResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).SearchFilesTotalLog(inValue);
            totalResults = retVal.totalResults;
            return retVal.fileTotalInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginSearchFilesTotalLog(DioWeb.DioService.SearchFilesTotalLogRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchFilesTotalLog(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearchFilesTotalLog(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, long offset, long pageSize, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.SearchFilesTotalLogRequest inValue = new DioWeb.DioService.SearchFilesTotalLogRequest();
            inValue.sessionToken = sessionToken;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.offset = offset;
            inValue.pageSize = pageSize;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginSearchFilesTotalLog(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SearchFilesTotalLogResponse DioWeb.DioService.IDiomedeStorage.EndSearchFilesTotalLog(System.IAsyncResult result) {
            return base.Channel.EndSearchFilesTotalLog(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DioWeb.DioService.SearchFilesTotalInfo> EndSearchFilesTotalLog(System.IAsyncResult result, out long totalResults) {
            DioWeb.DioService.SearchFilesTotalLogResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndSearchFilesTotalLog(result);
            totalResults = retVal.totalResults;
            return retVal.fileTotalInfo;
        }
        
        private System.IAsyncResult OnBeginSearchFilesTotalLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            System.Nullable<System.DateTime> startDate = ((System.Nullable<System.DateTime>)(inValues[1]));
            System.Nullable<System.DateTime> endDate = ((System.Nullable<System.DateTime>)(inValues[2]));
            long offset = ((long)(inValues[3]));
            long pageSize = ((long)(inValues[4]));
            return this.BeginSearchFilesTotalLog(sessionToken, startDate, endDate, offset, pageSize, callback, asyncState);
        }
        
        private object[] OnEndSearchFilesTotalLog(System.IAsyncResult result) {
            long totalResults = this.GetDefaultValueForInitialization<long>();
            System.Collections.Generic.List<DioWeb.DioService.SearchFilesTotalInfo> retVal = this.EndSearchFilesTotalLog(result, out totalResults);
            return new object[] {
                    totalResults,
                    retVal};
        }
        
        private void OnSearchFilesTotalLogCompleted(object state) {
            if ((this.SearchFilesTotalLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchFilesTotalLogCompleted(this, new SearchFilesTotalLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchFilesTotalLogAsync(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, long offset, long pageSize) {
            this.SearchFilesTotalLogAsync(sessionToken, startDate, endDate, offset, pageSize, null);
        }
        
        public void SearchFilesTotalLogAsync(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, long offset, long pageSize, object userState) {
            if ((this.onBeginSearchFilesTotalLogDelegate == null)) {
                this.onBeginSearchFilesTotalLogDelegate = new BeginOperationDelegate(this.OnBeginSearchFilesTotalLog);
            }
            if ((this.onEndSearchFilesTotalLogDelegate == null)) {
                this.onEndSearchFilesTotalLogDelegate = new EndOperationDelegate(this.OnEndSearchFilesTotalLog);
            }
            if ((this.onSearchFilesTotalLogCompletedDelegate == null)) {
                this.onSearchFilesTotalLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchFilesTotalLogCompleted);
            }
            base.InvokeAsync(this.onBeginSearchFilesTotalLogDelegate, new object[] {
                        sessionToken,
                        startDate,
                        endDate,
                        offset,
                        pageSize}, this.onEndSearchFilesTotalLogDelegate, this.onSearchFilesTotalLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.CreateUserResponse DioWeb.DioService.IDiomedeStorage.CreateUser(DioWeb.DioService.CreateUserRequest request) {
            return base.Channel.CreateUser(request);
        }
        
        public void CreateUser(string username, string password, string email) {
            DioWeb.DioService.CreateUserRequest inValue = new DioWeb.DioService.CreateUserRequest();
            inValue.username = username;
            inValue.password = password;
            inValue.email = email;
            DioWeb.DioService.CreateUserResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).CreateUser(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginCreateUser(DioWeb.DioService.CreateUserRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateUser(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateUser(string username, string password, string email, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.CreateUserRequest inValue = new DioWeb.DioService.CreateUserRequest();
            inValue.username = username;
            inValue.password = password;
            inValue.email = email;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginCreateUser(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.CreateUserResponse DioWeb.DioService.IDiomedeStorage.EndCreateUser(System.IAsyncResult result) {
            return base.Channel.EndCreateUser(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCreateUser(System.IAsyncResult result) {
            DioWeb.DioService.CreateUserResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndCreateUser(result);
        }
        
        private System.IAsyncResult OnBeginCreateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string email = ((string)(inValues[2]));
            return this.BeginCreateUser(username, password, email, callback, asyncState);
        }
        
        private object[] OnEndCreateUser(System.IAsyncResult result) {
            this.EndCreateUser(result);
            return null;
        }
        
        private void OnCreateUserCompleted(object state) {
            if ((this.CreateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateUserAsync(string username, string password, string email) {
            this.CreateUserAsync(username, password, email, null);
        }
        
        public void CreateUserAsync(string username, string password, string email, object userState) {
            if ((this.onBeginCreateUserDelegate == null)) {
                this.onBeginCreateUserDelegate = new BeginOperationDelegate(this.OnBeginCreateUser);
            }
            if ((this.onEndCreateUserDelegate == null)) {
                this.onEndCreateUserDelegate = new EndOperationDelegate(this.OnEndCreateUser);
            }
            if ((this.onCreateUserCompletedDelegate == null)) {
                this.onCreateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateUserCompleted);
            }
            base.InvokeAsync(this.onBeginCreateUserDelegate, new object[] {
                        username,
                        password,
                        email}, this.onEndCreateUserDelegate, this.onCreateUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SetUserInfoResponse DioWeb.DioService.IDiomedeStorage.SetUserInfo(DioWeb.DioService.UpdateUserInfoRequest request) {
            return base.Channel.SetUserInfo(request);
        }
        
        public void SetUserInfo(string sessionToken, DioWeb.DioService.UserInfo userInfo) {
            DioWeb.DioService.UpdateUserInfoRequest inValue = new DioWeb.DioService.UpdateUserInfoRequest();
            inValue.sessionToken = sessionToken;
            inValue.userInfo = userInfo;
            DioWeb.DioService.SetUserInfoResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).SetUserInfo(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginSetUserInfo(DioWeb.DioService.UpdateUserInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetUserInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetUserInfo(string sessionToken, DioWeb.DioService.UserInfo userInfo, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.UpdateUserInfoRequest inValue = new DioWeb.DioService.UpdateUserInfoRequest();
            inValue.sessionToken = sessionToken;
            inValue.userInfo = userInfo;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginSetUserInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SetUserInfoResponse DioWeb.DioService.IDiomedeStorage.EndSetUserInfo(System.IAsyncResult result) {
            return base.Channel.EndSetUserInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetUserInfo(System.IAsyncResult result) {
            DioWeb.DioService.SetUserInfoResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndSetUserInfo(result);
        }
        
        private System.IAsyncResult OnBeginSetUserInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            DioWeb.DioService.UserInfo userInfo = ((DioWeb.DioService.UserInfo)(inValues[1]));
            return this.BeginSetUserInfo(sessionToken, userInfo, callback, asyncState);
        }
        
        private object[] OnEndSetUserInfo(System.IAsyncResult result) {
            this.EndSetUserInfo(result);
            return null;
        }
        
        private void OnSetUserInfoCompleted(object state) {
            if ((this.SetUserInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetUserInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetUserInfoAsync(string sessionToken, DioWeb.DioService.UserInfo userInfo) {
            this.SetUserInfoAsync(sessionToken, userInfo, null);
        }
        
        public void SetUserInfoAsync(string sessionToken, DioWeb.DioService.UserInfo userInfo, object userState) {
            if ((this.onBeginSetUserInfoDelegate == null)) {
                this.onBeginSetUserInfoDelegate = new BeginOperationDelegate(this.OnBeginSetUserInfo);
            }
            if ((this.onEndSetUserInfoDelegate == null)) {
                this.onEndSetUserInfoDelegate = new EndOperationDelegate(this.OnEndSetUserInfo);
            }
            if ((this.onSetUserInfoCompletedDelegate == null)) {
                this.onSetUserInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetUserInfoCompleted);
            }
            base.InvokeAsync(this.onBeginSetUserInfoDelegate, new object[] {
                        sessionToken,
                        userInfo}, this.onEndSetUserInfoDelegate, this.onSetUserInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetUserInfoResponse DioWeb.DioService.IDiomedeStorage.GetUserInfo(DioWeb.DioService.GetUserInfoRequest request) {
            return base.Channel.GetUserInfo(request);
        }
        
        public DioWeb.DioService.UserInfo GetUserInfo(string sessionToken) {
            DioWeb.DioService.GetUserInfoRequest inValue = new DioWeb.DioService.GetUserInfoRequest();
            inValue.sessionToken = sessionToken;
            DioWeb.DioService.GetUserInfoResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).GetUserInfo(inValue);
            return retVal.userInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginGetUserInfo(DioWeb.DioService.GetUserInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserInfo(string sessionToken, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.GetUserInfoRequest inValue = new DioWeb.DioService.GetUserInfoRequest();
            inValue.sessionToken = sessionToken;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginGetUserInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetUserInfoResponse DioWeb.DioService.IDiomedeStorage.EndGetUserInfo(System.IAsyncResult result) {
            return base.Channel.EndGetUserInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DioWeb.DioService.UserInfo EndGetUserInfo(System.IAsyncResult result) {
            DioWeb.DioService.GetUserInfoResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndGetUserInfo(result);
            return retVal.userInfo;
        }
        
        private System.IAsyncResult OnBeginGetUserInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            return this.BeginGetUserInfo(sessionToken, callback, asyncState);
        }
        
        private object[] OnEndGetUserInfo(System.IAsyncResult result) {
            DioWeb.DioService.UserInfo retVal = this.EndGetUserInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserInfoCompleted(object state) {
            if ((this.GetUserInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserInfoAsync(string sessionToken) {
            this.GetUserInfoAsync(sessionToken, null);
        }
        
        public void GetUserInfoAsync(string sessionToken, object userState) {
            if ((this.onBeginGetUserInfoDelegate == null)) {
                this.onBeginGetUserInfoDelegate = new BeginOperationDelegate(this.OnBeginGetUserInfo);
            }
            if ((this.onEndGetUserInfoDelegate == null)) {
                this.onEndGetUserInfoDelegate = new EndOperationDelegate(this.OnEndGetUserInfo);
            }
            if ((this.onGetUserInfoCompletedDelegate == null)) {
                this.onGetUserInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserInfoDelegate, new object[] {
                        sessionToken}, this.onEndGetUserInfoDelegate, this.onGetUserInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.DeleteUserInfoResponse DioWeb.DioService.IDiomedeStorage.DeleteUserInfo(DioWeb.DioService.DeleteUserInfoRequest request) {
            return base.Channel.DeleteUserInfo(request);
        }
        
        public void DeleteUserInfo(string sessionToken, DioWeb.DioService.UserInfoType userInfoType) {
            DioWeb.DioService.DeleteUserInfoRequest inValue = new DioWeb.DioService.DeleteUserInfoRequest();
            inValue.sessionToken = sessionToken;
            inValue.userInfoType = userInfoType;
            DioWeb.DioService.DeleteUserInfoResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).DeleteUserInfo(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginDeleteUserInfo(DioWeb.DioService.DeleteUserInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUserInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteUserInfo(string sessionToken, DioWeb.DioService.UserInfoType userInfoType, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.DeleteUserInfoRequest inValue = new DioWeb.DioService.DeleteUserInfoRequest();
            inValue.sessionToken = sessionToken;
            inValue.userInfoType = userInfoType;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginDeleteUserInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.DeleteUserInfoResponse DioWeb.DioService.IDiomedeStorage.EndDeleteUserInfo(System.IAsyncResult result) {
            return base.Channel.EndDeleteUserInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteUserInfo(System.IAsyncResult result) {
            DioWeb.DioService.DeleteUserInfoResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndDeleteUserInfo(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUserInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            DioWeb.DioService.UserInfoType userInfoType = ((DioWeb.DioService.UserInfoType)(inValues[1]));
            return this.BeginDeleteUserInfo(sessionToken, userInfoType, callback, asyncState);
        }
        
        private object[] OnEndDeleteUserInfo(System.IAsyncResult result) {
            this.EndDeleteUserInfo(result);
            return null;
        }
        
        private void OnDeleteUserInfoCompleted(object state) {
            if ((this.DeleteUserInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUserInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUserInfoAsync(string sessionToken, DioWeb.DioService.UserInfoType userInfoType) {
            this.DeleteUserInfoAsync(sessionToken, userInfoType, null);
        }
        
        public void DeleteUserInfoAsync(string sessionToken, DioWeb.DioService.UserInfoType userInfoType, object userState) {
            if ((this.onBeginDeleteUserInfoDelegate == null)) {
                this.onBeginDeleteUserInfoDelegate = new BeginOperationDelegate(this.OnBeginDeleteUserInfo);
            }
            if ((this.onEndDeleteUserInfoDelegate == null)) {
                this.onEndDeleteUserInfoDelegate = new EndOperationDelegate(this.OnEndDeleteUserInfo);
            }
            if ((this.onDeleteUserInfoCompletedDelegate == null)) {
                this.onDeleteUserInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUserInfoCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUserInfoDelegate, new object[] {
                        sessionToken,
                        userInfoType}, this.onEndDeleteUserInfoDelegate, this.onDeleteUserInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetEmailAddressesResponse DioWeb.DioService.IDiomedeStorage.GetEmailAddresses(DioWeb.DioService.GetEmailAddressesRequest request) {
            return base.Channel.GetEmailAddresses(request);
        }
        
        public System.Collections.Generic.List<string> GetEmailAddresses(string sessionToken) {
            DioWeb.DioService.GetEmailAddressesRequest inValue = new DioWeb.DioService.GetEmailAddressesRequest();
            inValue.sessionToken = sessionToken;
            DioWeb.DioService.GetEmailAddressesResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).GetEmailAddresses(inValue);
            return retVal.emailAddresses;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginGetEmailAddresses(DioWeb.DioService.GetEmailAddressesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmailAddresses(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEmailAddresses(string sessionToken, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.GetEmailAddressesRequest inValue = new DioWeb.DioService.GetEmailAddressesRequest();
            inValue.sessionToken = sessionToken;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginGetEmailAddresses(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetEmailAddressesResponse DioWeb.DioService.IDiomedeStorage.EndGetEmailAddresses(System.IAsyncResult result) {
            return base.Channel.EndGetEmailAddresses(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<string> EndGetEmailAddresses(System.IAsyncResult result) {
            DioWeb.DioService.GetEmailAddressesResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndGetEmailAddresses(result);
            return retVal.emailAddresses;
        }
        
        private System.IAsyncResult OnBeginGetEmailAddresses(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            return this.BeginGetEmailAddresses(sessionToken, callback, asyncState);
        }
        
        private object[] OnEndGetEmailAddresses(System.IAsyncResult result) {
            System.Collections.Generic.List<string> retVal = this.EndGetEmailAddresses(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmailAddressesCompleted(object state) {
            if ((this.GetEmailAddressesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmailAddressesCompleted(this, new GetEmailAddressesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmailAddressesAsync(string sessionToken) {
            this.GetEmailAddressesAsync(sessionToken, null);
        }
        
        public void GetEmailAddressesAsync(string sessionToken, object userState) {
            if ((this.onBeginGetEmailAddressesDelegate == null)) {
                this.onBeginGetEmailAddressesDelegate = new BeginOperationDelegate(this.OnBeginGetEmailAddresses);
            }
            if ((this.onEndGetEmailAddressesDelegate == null)) {
                this.onEndGetEmailAddressesDelegate = new EndOperationDelegate(this.OnEndGetEmailAddresses);
            }
            if ((this.onGetEmailAddressesCompletedDelegate == null)) {
                this.onGetEmailAddressesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmailAddressesCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmailAddressesDelegate, new object[] {
                        sessionToken}, this.onEndGetEmailAddressesDelegate, this.onGetEmailAddressesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.AddEmailAddressResponse DioWeb.DioService.IDiomedeStorage.AddEmailAddress(DioWeb.DioService.AddEmailAddressRequest request) {
            return base.Channel.AddEmailAddress(request);
        }
        
        public void AddEmailAddress(string sessionToken, string emailAddress) {
            DioWeb.DioService.AddEmailAddressRequest inValue = new DioWeb.DioService.AddEmailAddressRequest();
            inValue.sessionToken = sessionToken;
            inValue.emailAddress = emailAddress;
            DioWeb.DioService.AddEmailAddressResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).AddEmailAddress(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginAddEmailAddress(DioWeb.DioService.AddEmailAddressRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddEmailAddress(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddEmailAddress(string sessionToken, string emailAddress, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.AddEmailAddressRequest inValue = new DioWeb.DioService.AddEmailAddressRequest();
            inValue.sessionToken = sessionToken;
            inValue.emailAddress = emailAddress;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginAddEmailAddress(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.AddEmailAddressResponse DioWeb.DioService.IDiomedeStorage.EndAddEmailAddress(System.IAsyncResult result) {
            return base.Channel.EndAddEmailAddress(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddEmailAddress(System.IAsyncResult result) {
            DioWeb.DioService.AddEmailAddressResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndAddEmailAddress(result);
        }
        
        private System.IAsyncResult OnBeginAddEmailAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            string emailAddress = ((string)(inValues[1]));
            return this.BeginAddEmailAddress(sessionToken, emailAddress, callback, asyncState);
        }
        
        private object[] OnEndAddEmailAddress(System.IAsyncResult result) {
            this.EndAddEmailAddress(result);
            return null;
        }
        
        private void OnAddEmailAddressCompleted(object state) {
            if ((this.AddEmailAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddEmailAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddEmailAddressAsync(string sessionToken, string emailAddress) {
            this.AddEmailAddressAsync(sessionToken, emailAddress, null);
        }
        
        public void AddEmailAddressAsync(string sessionToken, string emailAddress, object userState) {
            if ((this.onBeginAddEmailAddressDelegate == null)) {
                this.onBeginAddEmailAddressDelegate = new BeginOperationDelegate(this.OnBeginAddEmailAddress);
            }
            if ((this.onEndAddEmailAddressDelegate == null)) {
                this.onEndAddEmailAddressDelegate = new EndOperationDelegate(this.OnEndAddEmailAddress);
            }
            if ((this.onAddEmailAddressCompletedDelegate == null)) {
                this.onAddEmailAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddEmailAddressCompleted);
            }
            base.InvokeAsync(this.onBeginAddEmailAddressDelegate, new object[] {
                        sessionToken,
                        emailAddress}, this.onEndAddEmailAddressDelegate, this.onAddEmailAddressCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.DeleteEmailAddressResponse DioWeb.DioService.IDiomedeStorage.DeleteEmailAddress(DioWeb.DioService.DeleteEmailAddressRequest request) {
            return base.Channel.DeleteEmailAddress(request);
        }
        
        public void DeleteEmailAddress(string sessionToken, string emailAddress) {
            DioWeb.DioService.DeleteEmailAddressRequest inValue = new DioWeb.DioService.DeleteEmailAddressRequest();
            inValue.sessionToken = sessionToken;
            inValue.emailAddress = emailAddress;
            DioWeb.DioService.DeleteEmailAddressResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).DeleteEmailAddress(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginDeleteEmailAddress(DioWeb.DioService.DeleteEmailAddressRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteEmailAddress(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteEmailAddress(string sessionToken, string emailAddress, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.DeleteEmailAddressRequest inValue = new DioWeb.DioService.DeleteEmailAddressRequest();
            inValue.sessionToken = sessionToken;
            inValue.emailAddress = emailAddress;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginDeleteEmailAddress(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.DeleteEmailAddressResponse DioWeb.DioService.IDiomedeStorage.EndDeleteEmailAddress(System.IAsyncResult result) {
            return base.Channel.EndDeleteEmailAddress(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteEmailAddress(System.IAsyncResult result) {
            DioWeb.DioService.DeleteEmailAddressResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndDeleteEmailAddress(result);
        }
        
        private System.IAsyncResult OnBeginDeleteEmailAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            string emailAddress = ((string)(inValues[1]));
            return this.BeginDeleteEmailAddress(sessionToken, emailAddress, callback, asyncState);
        }
        
        private object[] OnEndDeleteEmailAddress(System.IAsyncResult result) {
            this.EndDeleteEmailAddress(result);
            return null;
        }
        
        private void OnDeleteEmailAddressCompleted(object state) {
            if ((this.DeleteEmailAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteEmailAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteEmailAddressAsync(string sessionToken, string emailAddress) {
            this.DeleteEmailAddressAsync(sessionToken, emailAddress, null);
        }
        
        public void DeleteEmailAddressAsync(string sessionToken, string emailAddress, object userState) {
            if ((this.onBeginDeleteEmailAddressDelegate == null)) {
                this.onBeginDeleteEmailAddressDelegate = new BeginOperationDelegate(this.OnBeginDeleteEmailAddress);
            }
            if ((this.onEndDeleteEmailAddressDelegate == null)) {
                this.onEndDeleteEmailAddressDelegate = new EndOperationDelegate(this.OnEndDeleteEmailAddress);
            }
            if ((this.onDeleteEmailAddressCompletedDelegate == null)) {
                this.onDeleteEmailAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteEmailAddressCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteEmailAddressDelegate, new object[] {
                        sessionToken,
                        emailAddress}, this.onEndDeleteEmailAddressDelegate, this.onDeleteEmailAddressCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SetPrimaryEmailAddressResponse DioWeb.DioService.IDiomedeStorage.SetPrimaryEmailAddress(DioWeb.DioService.SetPrimaryEmailAddressRequest request) {
            return base.Channel.SetPrimaryEmailAddress(request);
        }
        
        public void SetPrimaryEmailAddress(string sessionToken, string emailAddress) {
            DioWeb.DioService.SetPrimaryEmailAddressRequest inValue = new DioWeb.DioService.SetPrimaryEmailAddressRequest();
            inValue.sessionToken = sessionToken;
            inValue.emailAddress = emailAddress;
            DioWeb.DioService.SetPrimaryEmailAddressResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).SetPrimaryEmailAddress(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginSetPrimaryEmailAddress(DioWeb.DioService.SetPrimaryEmailAddressRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetPrimaryEmailAddress(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetPrimaryEmailAddress(string sessionToken, string emailAddress, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.SetPrimaryEmailAddressRequest inValue = new DioWeb.DioService.SetPrimaryEmailAddressRequest();
            inValue.sessionToken = sessionToken;
            inValue.emailAddress = emailAddress;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginSetPrimaryEmailAddress(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SetPrimaryEmailAddressResponse DioWeb.DioService.IDiomedeStorage.EndSetPrimaryEmailAddress(System.IAsyncResult result) {
            return base.Channel.EndSetPrimaryEmailAddress(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetPrimaryEmailAddress(System.IAsyncResult result) {
            DioWeb.DioService.SetPrimaryEmailAddressResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndSetPrimaryEmailAddress(result);
        }
        
        private System.IAsyncResult OnBeginSetPrimaryEmailAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            string emailAddress = ((string)(inValues[1]));
            return this.BeginSetPrimaryEmailAddress(sessionToken, emailAddress, callback, asyncState);
        }
        
        private object[] OnEndSetPrimaryEmailAddress(System.IAsyncResult result) {
            this.EndSetPrimaryEmailAddress(result);
            return null;
        }
        
        private void OnSetPrimaryEmailAddressCompleted(object state) {
            if ((this.SetPrimaryEmailAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetPrimaryEmailAddressCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetPrimaryEmailAddressAsync(string sessionToken, string emailAddress) {
            this.SetPrimaryEmailAddressAsync(sessionToken, emailAddress, null);
        }
        
        public void SetPrimaryEmailAddressAsync(string sessionToken, string emailAddress, object userState) {
            if ((this.onBeginSetPrimaryEmailAddressDelegate == null)) {
                this.onBeginSetPrimaryEmailAddressDelegate = new BeginOperationDelegate(this.OnBeginSetPrimaryEmailAddress);
            }
            if ((this.onEndSetPrimaryEmailAddressDelegate == null)) {
                this.onEndSetPrimaryEmailAddressDelegate = new EndOperationDelegate(this.OnEndSetPrimaryEmailAddress);
            }
            if ((this.onSetPrimaryEmailAddressCompletedDelegate == null)) {
                this.onSetPrimaryEmailAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetPrimaryEmailAddressCompleted);
            }
            base.InvokeAsync(this.onBeginSetPrimaryEmailAddressDelegate, new object[] {
                        sessionToken,
                        emailAddress}, this.onEndSetPrimaryEmailAddressDelegate, this.onSetPrimaryEmailAddressCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.DeleteUserResponse DioWeb.DioService.IDiomedeStorage.DeleteUser(DioWeb.DioService.DeleteUserRequest request) {
            return base.Channel.DeleteUser(request);
        }
        
        public void DeleteUser(string sessionToken) {
            DioWeb.DioService.DeleteUserRequest inValue = new DioWeb.DioService.DeleteUserRequest();
            inValue.sessionToken = sessionToken;
            DioWeb.DioService.DeleteUserResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).DeleteUser(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginDeleteUser(DioWeb.DioService.DeleteUserRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUser(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteUser(string sessionToken, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.DeleteUserRequest inValue = new DioWeb.DioService.DeleteUserRequest();
            inValue.sessionToken = sessionToken;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginDeleteUser(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.DeleteUserResponse DioWeb.DioService.IDiomedeStorage.EndDeleteUser(System.IAsyncResult result) {
            return base.Channel.EndDeleteUser(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteUser(System.IAsyncResult result) {
            DioWeb.DioService.DeleteUserResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndDeleteUser(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            return this.BeginDeleteUser(sessionToken, callback, asyncState);
        }
        
        private object[] OnEndDeleteUser(System.IAsyncResult result) {
            this.EndDeleteUser(result);
            return null;
        }
        
        private void OnDeleteUserCompleted(object state) {
            if ((this.DeleteUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUserAsync(string sessionToken) {
            this.DeleteUserAsync(sessionToken, null);
        }
        
        public void DeleteUserAsync(string sessionToken, object userState) {
            if ((this.onBeginDeleteUserDelegate == null)) {
                this.onBeginDeleteUserDelegate = new BeginOperationDelegate(this.OnBeginDeleteUser);
            }
            if ((this.onEndDeleteUserDelegate == null)) {
                this.onEndDeleteUserDelegate = new EndOperationDelegate(this.OnEndDeleteUser);
            }
            if ((this.onDeleteUserCompletedDelegate == null)) {
                this.onDeleteUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUserCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUserDelegate, new object[] {
                        sessionToken}, this.onEndDeleteUserDelegate, this.onDeleteUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SearchPaymentLogResponse DioWeb.DioService.IDiomedeStorage.SearchPaymentLog(DioWeb.DioService.SearchPaymentLogRequest request) {
            return base.Channel.SearchPaymentLog(request);
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.PaymentLogEntry> SearchPaymentLog(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            DioWeb.DioService.SearchPaymentLogRequest inValue = new DioWeb.DioService.SearchPaymentLogRequest();
            inValue.sessionToken = sessionToken;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            DioWeb.DioService.SearchPaymentLogResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).SearchPaymentLog(inValue);
            return retVal.logEntries;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginSearchPaymentLog(DioWeb.DioService.SearchPaymentLogRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchPaymentLog(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearchPaymentLog(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.SearchPaymentLogRequest inValue = new DioWeb.DioService.SearchPaymentLogRequest();
            inValue.sessionToken = sessionToken;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginSearchPaymentLog(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SearchPaymentLogResponse DioWeb.DioService.IDiomedeStorage.EndSearchPaymentLog(System.IAsyncResult result) {
            return base.Channel.EndSearchPaymentLog(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DioWeb.DioService.PaymentLogEntry> EndSearchPaymentLog(System.IAsyncResult result) {
            DioWeb.DioService.SearchPaymentLogResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndSearchPaymentLog(result);
            return retVal.logEntries;
        }
        
        private System.IAsyncResult OnBeginSearchPaymentLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            System.Nullable<System.DateTime> startDate = ((System.Nullable<System.DateTime>)(inValues[1]));
            System.Nullable<System.DateTime> endDate = ((System.Nullable<System.DateTime>)(inValues[2]));
            return this.BeginSearchPaymentLog(sessionToken, startDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndSearchPaymentLog(System.IAsyncResult result) {
            System.Collections.Generic.List<DioWeb.DioService.PaymentLogEntry> retVal = this.EndSearchPaymentLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchPaymentLogCompleted(object state) {
            if ((this.SearchPaymentLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchPaymentLogCompleted(this, new SearchPaymentLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchPaymentLogAsync(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            this.SearchPaymentLogAsync(sessionToken, startDate, endDate, null);
        }
        
        public void SearchPaymentLogAsync(string sessionToken, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, object userState) {
            if ((this.onBeginSearchPaymentLogDelegate == null)) {
                this.onBeginSearchPaymentLogDelegate = new BeginOperationDelegate(this.OnBeginSearchPaymentLog);
            }
            if ((this.onEndSearchPaymentLogDelegate == null)) {
                this.onEndSearchPaymentLogDelegate = new EndOperationDelegate(this.OnEndSearchPaymentLog);
            }
            if ((this.onSearchPaymentLogCompletedDelegate == null)) {
                this.onSearchPaymentLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchPaymentLogCompleted);
            }
            base.InvokeAsync(this.onBeginSearchPaymentLogDelegate, new object[] {
                        sessionToken,
                        startDate,
                        endDate}, this.onEndSearchPaymentLogDelegate, this.onSearchPaymentLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.ChangePasswordResponse DioWeb.DioService.IDiomedeStorage.ChangePassword(DioWeb.DioService.ChangePasswordRequest request) {
            return base.Channel.ChangePassword(request);
        }
        
        public void ChangePassword(string sessionToken, string currentPassword, string newPassword) {
            DioWeb.DioService.ChangePasswordRequest inValue = new DioWeb.DioService.ChangePasswordRequest();
            inValue.sessionToken = sessionToken;
            inValue.currentPassword = currentPassword;
            inValue.newPassword = newPassword;
            DioWeb.DioService.ChangePasswordResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).ChangePassword(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginChangePassword(DioWeb.DioService.ChangePasswordRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangePassword(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginChangePassword(string sessionToken, string currentPassword, string newPassword, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.ChangePasswordRequest inValue = new DioWeb.DioService.ChangePasswordRequest();
            inValue.sessionToken = sessionToken;
            inValue.currentPassword = currentPassword;
            inValue.newPassword = newPassword;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginChangePassword(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.ChangePasswordResponse DioWeb.DioService.IDiomedeStorage.EndChangePassword(System.IAsyncResult result) {
            return base.Channel.EndChangePassword(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndChangePassword(System.IAsyncResult result) {
            DioWeb.DioService.ChangePasswordResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndChangePassword(result);
        }
        
        private System.IAsyncResult OnBeginChangePassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            string currentPassword = ((string)(inValues[1]));
            string newPassword = ((string)(inValues[2]));
            return this.BeginChangePassword(sessionToken, currentPassword, newPassword, callback, asyncState);
        }
        
        private object[] OnEndChangePassword(System.IAsyncResult result) {
            this.EndChangePassword(result);
            return null;
        }
        
        private void OnChangePasswordCompleted(object state) {
            if ((this.ChangePasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangePasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangePasswordAsync(string sessionToken, string currentPassword, string newPassword) {
            this.ChangePasswordAsync(sessionToken, currentPassword, newPassword, null);
        }
        
        public void ChangePasswordAsync(string sessionToken, string currentPassword, string newPassword, object userState) {
            if ((this.onBeginChangePasswordDelegate == null)) {
                this.onBeginChangePasswordDelegate = new BeginOperationDelegate(this.OnBeginChangePassword);
            }
            if ((this.onEndChangePasswordDelegate == null)) {
                this.onEndChangePasswordDelegate = new EndOperationDelegate(this.OnEndChangePassword);
            }
            if ((this.onChangePasswordCompletedDelegate == null)) {
                this.onChangePasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangePasswordCompleted);
            }
            base.InvokeAsync(this.onBeginChangePasswordDelegate, new object[] {
                        sessionToken,
                        currentPassword,
                        newPassword}, this.onEndChangePasswordDelegate, this.onChangePasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.ResetPasswordResponse DioWeb.DioService.IDiomedeStorage.ResetPassword(DioWeb.DioService.ResetPasswordRequest request) {
            return base.Channel.ResetPassword(request);
        }
        
        public void ResetPassword(string username) {
            DioWeb.DioService.ResetPasswordRequest inValue = new DioWeb.DioService.ResetPasswordRequest();
            inValue.username = username;
            DioWeb.DioService.ResetPasswordResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).ResetPassword(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginResetPassword(DioWeb.DioService.ResetPasswordRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResetPassword(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginResetPassword(string username, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.ResetPasswordRequest inValue = new DioWeb.DioService.ResetPasswordRequest();
            inValue.username = username;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginResetPassword(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.ResetPasswordResponse DioWeb.DioService.IDiomedeStorage.EndResetPassword(System.IAsyncResult result) {
            return base.Channel.EndResetPassword(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndResetPassword(System.IAsyncResult result) {
            DioWeb.DioService.ResetPasswordResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndResetPassword(result);
        }
        
        private System.IAsyncResult OnBeginResetPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            return this.BeginResetPassword(username, callback, asyncState);
        }
        
        private object[] OnEndResetPassword(System.IAsyncResult result) {
            this.EndResetPassword(result);
            return null;
        }
        
        private void OnResetPasswordCompleted(object state) {
            if ((this.ResetPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetPasswordAsync(string username) {
            this.ResetPasswordAsync(username, null);
        }
        
        public void ResetPasswordAsync(string username, object userState) {
            if ((this.onBeginResetPasswordDelegate == null)) {
                this.onBeginResetPasswordDelegate = new BeginOperationDelegate(this.OnBeginResetPassword);
            }
            if ((this.onEndResetPasswordDelegate == null)) {
                this.onEndResetPasswordDelegate = new EndOperationDelegate(this.OnEndResetPassword);
            }
            if ((this.onResetPasswordCompletedDelegate == null)) {
                this.onResetPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginResetPasswordDelegate, new object[] {
                        username}, this.onEndResetPasswordDelegate, this.onResetPasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.CreateReplicationPolicyResponse DioWeb.DioService.IDiomedeStorage.CreateReplicationPolicy(DioWeb.DioService.CreateReplicationPolicyRequest request) {
            return base.Channel.CreateReplicationPolicy(request);
        }
        
        public int CreateReplicationPolicy(string sessionToken, int defaultNumOnline, int defaultNumNearline, int defaultNumOffline, int lastAccessTriggerHours, int lastAccessTriggerNumOnline, int lastAccessTriggerNumNearline, int lastAccessTriggerNumOffline, System.Nullable<int> expireHours) {
            DioWeb.DioService.CreateReplicationPolicyRequest inValue = new DioWeb.DioService.CreateReplicationPolicyRequest();
            inValue.sessionToken = sessionToken;
            inValue.defaultNumOnline = defaultNumOnline;
            inValue.defaultNumNearline = defaultNumNearline;
            inValue.defaultNumOffline = defaultNumOffline;
            inValue.lastAccessTriggerHours = lastAccessTriggerHours;
            inValue.lastAccessTriggerNumOnline = lastAccessTriggerNumOnline;
            inValue.lastAccessTriggerNumNearline = lastAccessTriggerNumNearline;
            inValue.lastAccessTriggerNumOffline = lastAccessTriggerNumOffline;
            inValue.expireHours = expireHours;
            DioWeb.DioService.CreateReplicationPolicyResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).CreateReplicationPolicy(inValue);
            return retVal.replicationPolicyID;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginCreateReplicationPolicy(DioWeb.DioService.CreateReplicationPolicyRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateReplicationPolicy(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateReplicationPolicy(string sessionToken, int defaultNumOnline, int defaultNumNearline, int defaultNumOffline, int lastAccessTriggerHours, int lastAccessTriggerNumOnline, int lastAccessTriggerNumNearline, int lastAccessTriggerNumOffline, System.Nullable<int> expireHours, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.CreateReplicationPolicyRequest inValue = new DioWeb.DioService.CreateReplicationPolicyRequest();
            inValue.sessionToken = sessionToken;
            inValue.defaultNumOnline = defaultNumOnline;
            inValue.defaultNumNearline = defaultNumNearline;
            inValue.defaultNumOffline = defaultNumOffline;
            inValue.lastAccessTriggerHours = lastAccessTriggerHours;
            inValue.lastAccessTriggerNumOnline = lastAccessTriggerNumOnline;
            inValue.lastAccessTriggerNumNearline = lastAccessTriggerNumNearline;
            inValue.lastAccessTriggerNumOffline = lastAccessTriggerNumOffline;
            inValue.expireHours = expireHours;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginCreateReplicationPolicy(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.CreateReplicationPolicyResponse DioWeb.DioService.IDiomedeStorage.EndCreateReplicationPolicy(System.IAsyncResult result) {
            return base.Channel.EndCreateReplicationPolicy(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndCreateReplicationPolicy(System.IAsyncResult result) {
            DioWeb.DioService.CreateReplicationPolicyResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndCreateReplicationPolicy(result);
            return retVal.replicationPolicyID;
        }
        
        private System.IAsyncResult OnBeginCreateReplicationPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            int defaultNumOnline = ((int)(inValues[1]));
            int defaultNumNearline = ((int)(inValues[2]));
            int defaultNumOffline = ((int)(inValues[3]));
            int lastAccessTriggerHours = ((int)(inValues[4]));
            int lastAccessTriggerNumOnline = ((int)(inValues[5]));
            int lastAccessTriggerNumNearline = ((int)(inValues[6]));
            int lastAccessTriggerNumOffline = ((int)(inValues[7]));
            System.Nullable<int> expireHours = ((System.Nullable<int>)(inValues[8]));
            return this.BeginCreateReplicationPolicy(sessionToken, defaultNumOnline, defaultNumNearline, defaultNumOffline, lastAccessTriggerHours, lastAccessTriggerNumOnline, lastAccessTriggerNumNearline, lastAccessTriggerNumOffline, expireHours, callback, asyncState);
        }
        
        private object[] OnEndCreateReplicationPolicy(System.IAsyncResult result) {
            int retVal = this.EndCreateReplicationPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateReplicationPolicyCompleted(object state) {
            if ((this.CreateReplicationPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateReplicationPolicyCompleted(this, new CreateReplicationPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateReplicationPolicyAsync(string sessionToken, int defaultNumOnline, int defaultNumNearline, int defaultNumOffline, int lastAccessTriggerHours, int lastAccessTriggerNumOnline, int lastAccessTriggerNumNearline, int lastAccessTriggerNumOffline, System.Nullable<int> expireHours) {
            this.CreateReplicationPolicyAsync(sessionToken, defaultNumOnline, defaultNumNearline, defaultNumOffline, lastAccessTriggerHours, lastAccessTriggerNumOnline, lastAccessTriggerNumNearline, lastAccessTriggerNumOffline, expireHours, null);
        }
        
        public void CreateReplicationPolicyAsync(string sessionToken, int defaultNumOnline, int defaultNumNearline, int defaultNumOffline, int lastAccessTriggerHours, int lastAccessTriggerNumOnline, int lastAccessTriggerNumNearline, int lastAccessTriggerNumOffline, System.Nullable<int> expireHours, object userState) {
            if ((this.onBeginCreateReplicationPolicyDelegate == null)) {
                this.onBeginCreateReplicationPolicyDelegate = new BeginOperationDelegate(this.OnBeginCreateReplicationPolicy);
            }
            if ((this.onEndCreateReplicationPolicyDelegate == null)) {
                this.onEndCreateReplicationPolicyDelegate = new EndOperationDelegate(this.OnEndCreateReplicationPolicy);
            }
            if ((this.onCreateReplicationPolicyCompletedDelegate == null)) {
                this.onCreateReplicationPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateReplicationPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginCreateReplicationPolicyDelegate, new object[] {
                        sessionToken,
                        defaultNumOnline,
                        defaultNumNearline,
                        defaultNumOffline,
                        lastAccessTriggerHours,
                        lastAccessTriggerNumOnline,
                        lastAccessTriggerNumNearline,
                        lastAccessTriggerNumOffline,
                        expireHours}, this.onEndCreateReplicationPolicyDelegate, this.onCreateReplicationPolicyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetReplicationPoliciesResponse DioWeb.DioService.IDiomedeStorage.GetReplicationPolicies(DioWeb.DioService.GetReplicationPoliciesRequest request) {
            return base.Channel.GetReplicationPolicies(request);
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.ReplicationPolicy> GetReplicationPolicies(string sessionToken) {
            DioWeb.DioService.GetReplicationPoliciesRequest inValue = new DioWeb.DioService.GetReplicationPoliciesRequest();
            inValue.sessionToken = sessionToken;
            DioWeb.DioService.GetReplicationPoliciesResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).GetReplicationPolicies(inValue);
            return retVal.replicationPolicies;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginGetReplicationPolicies(DioWeb.DioService.GetReplicationPoliciesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReplicationPolicies(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetReplicationPolicies(string sessionToken, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.GetReplicationPoliciesRequest inValue = new DioWeb.DioService.GetReplicationPoliciesRequest();
            inValue.sessionToken = sessionToken;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginGetReplicationPolicies(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetReplicationPoliciesResponse DioWeb.DioService.IDiomedeStorage.EndGetReplicationPolicies(System.IAsyncResult result) {
            return base.Channel.EndGetReplicationPolicies(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DioWeb.DioService.ReplicationPolicy> EndGetReplicationPolicies(System.IAsyncResult result) {
            DioWeb.DioService.GetReplicationPoliciesResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndGetReplicationPolicies(result);
            return retVal.replicationPolicies;
        }
        
        private System.IAsyncResult OnBeginGetReplicationPolicies(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            return this.BeginGetReplicationPolicies(sessionToken, callback, asyncState);
        }
        
        private object[] OnEndGetReplicationPolicies(System.IAsyncResult result) {
            System.Collections.Generic.List<DioWeb.DioService.ReplicationPolicy> retVal = this.EndGetReplicationPolicies(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReplicationPoliciesCompleted(object state) {
            if ((this.GetReplicationPoliciesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReplicationPoliciesCompleted(this, new GetReplicationPoliciesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReplicationPoliciesAsync(string sessionToken) {
            this.GetReplicationPoliciesAsync(sessionToken, null);
        }
        
        public void GetReplicationPoliciesAsync(string sessionToken, object userState) {
            if ((this.onBeginGetReplicationPoliciesDelegate == null)) {
                this.onBeginGetReplicationPoliciesDelegate = new BeginOperationDelegate(this.OnBeginGetReplicationPolicies);
            }
            if ((this.onEndGetReplicationPoliciesDelegate == null)) {
                this.onEndGetReplicationPoliciesDelegate = new EndOperationDelegate(this.OnEndGetReplicationPolicies);
            }
            if ((this.onGetReplicationPoliciesCompletedDelegate == null)) {
                this.onGetReplicationPoliciesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReplicationPoliciesCompleted);
            }
            base.InvokeAsync(this.onBeginGetReplicationPoliciesDelegate, new object[] {
                        sessionToken}, this.onEndGetReplicationPoliciesDelegate, this.onGetReplicationPoliciesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.EditReplicationPolicyResponse DioWeb.DioService.IDiomedeStorage.EditReplicationPolicy(DioWeb.DioService.EditReplicationPolicyRequest request) {
            return base.Channel.EditReplicationPolicy(request);
        }
        
        public void EditReplicationPolicy(string sessionToken, DioWeb.DioService.ReplicationPolicy replicationPolicy) {
            DioWeb.DioService.EditReplicationPolicyRequest inValue = new DioWeb.DioService.EditReplicationPolicyRequest();
            inValue.sessionToken = sessionToken;
            inValue.replicationPolicy = replicationPolicy;
            DioWeb.DioService.EditReplicationPolicyResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EditReplicationPolicy(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginEditReplicationPolicy(DioWeb.DioService.EditReplicationPolicyRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEditReplicationPolicy(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEditReplicationPolicy(string sessionToken, DioWeb.DioService.ReplicationPolicy replicationPolicy, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.EditReplicationPolicyRequest inValue = new DioWeb.DioService.EditReplicationPolicyRequest();
            inValue.sessionToken = sessionToken;
            inValue.replicationPolicy = replicationPolicy;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginEditReplicationPolicy(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.EditReplicationPolicyResponse DioWeb.DioService.IDiomedeStorage.EndEditReplicationPolicy(System.IAsyncResult result) {
            return base.Channel.EndEditReplicationPolicy(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndEditReplicationPolicy(System.IAsyncResult result) {
            DioWeb.DioService.EditReplicationPolicyResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndEditReplicationPolicy(result);
        }
        
        private System.IAsyncResult OnBeginEditReplicationPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            DioWeb.DioService.ReplicationPolicy replicationPolicy = ((DioWeb.DioService.ReplicationPolicy)(inValues[1]));
            return this.BeginEditReplicationPolicy(sessionToken, replicationPolicy, callback, asyncState);
        }
        
        private object[] OnEndEditReplicationPolicy(System.IAsyncResult result) {
            this.EndEditReplicationPolicy(result);
            return null;
        }
        
        private void OnEditReplicationPolicyCompleted(object state) {
            if ((this.EditReplicationPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EditReplicationPolicyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EditReplicationPolicyAsync(string sessionToken, DioWeb.DioService.ReplicationPolicy replicationPolicy) {
            this.EditReplicationPolicyAsync(sessionToken, replicationPolicy, null);
        }
        
        public void EditReplicationPolicyAsync(string sessionToken, DioWeb.DioService.ReplicationPolicy replicationPolicy, object userState) {
            if ((this.onBeginEditReplicationPolicyDelegate == null)) {
                this.onBeginEditReplicationPolicyDelegate = new BeginOperationDelegate(this.OnBeginEditReplicationPolicy);
            }
            if ((this.onEndEditReplicationPolicyDelegate == null)) {
                this.onEndEditReplicationPolicyDelegate = new EndOperationDelegate(this.OnEndEditReplicationPolicy);
            }
            if ((this.onEditReplicationPolicyCompletedDelegate == null)) {
                this.onEditReplicationPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEditReplicationPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginEditReplicationPolicyDelegate, new object[] {
                        sessionToken,
                        replicationPolicy}, this.onEndEditReplicationPolicyDelegate, this.onEditReplicationPolicyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.DeleteReplicationPolicyResponse DioWeb.DioService.IDiomedeStorage.DeleteReplicationPolicy(DioWeb.DioService.DeleteReplicationPolicyRequest request) {
            return base.Channel.DeleteReplicationPolicy(request);
        }
        
        public void DeleteReplicationPolicy(string sessionToken, int replicationPolicyID) {
            DioWeb.DioService.DeleteReplicationPolicyRequest inValue = new DioWeb.DioService.DeleteReplicationPolicyRequest();
            inValue.sessionToken = sessionToken;
            inValue.replicationPolicyID = replicationPolicyID;
            DioWeb.DioService.DeleteReplicationPolicyResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).DeleteReplicationPolicy(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginDeleteReplicationPolicy(DioWeb.DioService.DeleteReplicationPolicyRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteReplicationPolicy(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteReplicationPolicy(string sessionToken, int replicationPolicyID, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.DeleteReplicationPolicyRequest inValue = new DioWeb.DioService.DeleteReplicationPolicyRequest();
            inValue.sessionToken = sessionToken;
            inValue.replicationPolicyID = replicationPolicyID;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginDeleteReplicationPolicy(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.DeleteReplicationPolicyResponse DioWeb.DioService.IDiomedeStorage.EndDeleteReplicationPolicy(System.IAsyncResult result) {
            return base.Channel.EndDeleteReplicationPolicy(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteReplicationPolicy(System.IAsyncResult result) {
            DioWeb.DioService.DeleteReplicationPolicyResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndDeleteReplicationPolicy(result);
        }
        
        private System.IAsyncResult OnBeginDeleteReplicationPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            int replicationPolicyID = ((int)(inValues[1]));
            return this.BeginDeleteReplicationPolicy(sessionToken, replicationPolicyID, callback, asyncState);
        }
        
        private object[] OnEndDeleteReplicationPolicy(System.IAsyncResult result) {
            this.EndDeleteReplicationPolicy(result);
            return null;
        }
        
        private void OnDeleteReplicationPolicyCompleted(object state) {
            if ((this.DeleteReplicationPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteReplicationPolicyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteReplicationPolicyAsync(string sessionToken, int replicationPolicyID) {
            this.DeleteReplicationPolicyAsync(sessionToken, replicationPolicyID, null);
        }
        
        public void DeleteReplicationPolicyAsync(string sessionToken, int replicationPolicyID, object userState) {
            if ((this.onBeginDeleteReplicationPolicyDelegate == null)) {
                this.onBeginDeleteReplicationPolicyDelegate = new BeginOperationDelegate(this.OnBeginDeleteReplicationPolicy);
            }
            if ((this.onEndDeleteReplicationPolicyDelegate == null)) {
                this.onEndDeleteReplicationPolicyDelegate = new EndOperationDelegate(this.OnEndDeleteReplicationPolicy);
            }
            if ((this.onDeleteReplicationPolicyCompletedDelegate == null)) {
                this.onDeleteReplicationPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteReplicationPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteReplicationPolicyDelegate, new object[] {
                        sessionToken,
                        replicationPolicyID}, this.onEndDeleteReplicationPolicyDelegate, this.onDeleteReplicationPolicyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SetReplicationPolicyResponse DioWeb.DioService.IDiomedeStorage.SetReplicationPolicy(DioWeb.DioService.SetReplicationPolicyRequest request) {
            return base.Channel.SetReplicationPolicy(request);
        }
        
        public void SetReplicationPolicy(string sessionToken, long fileID, int replicationPolicyID) {
            DioWeb.DioService.SetReplicationPolicyRequest inValue = new DioWeb.DioService.SetReplicationPolicyRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.replicationPolicyID = replicationPolicyID;
            DioWeb.DioService.SetReplicationPolicyResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).SetReplicationPolicy(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginSetReplicationPolicy(DioWeb.DioService.SetReplicationPolicyRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetReplicationPolicy(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetReplicationPolicy(string sessionToken, long fileID, int replicationPolicyID, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.SetReplicationPolicyRequest inValue = new DioWeb.DioService.SetReplicationPolicyRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.replicationPolicyID = replicationPolicyID;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginSetReplicationPolicy(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SetReplicationPolicyResponse DioWeb.DioService.IDiomedeStorage.EndSetReplicationPolicy(System.IAsyncResult result) {
            return base.Channel.EndSetReplicationPolicy(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetReplicationPolicy(System.IAsyncResult result) {
            DioWeb.DioService.SetReplicationPolicyResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndSetReplicationPolicy(result);
        }
        
        private System.IAsyncResult OnBeginSetReplicationPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            long fileID = ((long)(inValues[1]));
            int replicationPolicyID = ((int)(inValues[2]));
            return this.BeginSetReplicationPolicy(sessionToken, fileID, replicationPolicyID, callback, asyncState);
        }
        
        private object[] OnEndSetReplicationPolicy(System.IAsyncResult result) {
            this.EndSetReplicationPolicy(result);
            return null;
        }
        
        private void OnSetReplicationPolicyCompleted(object state) {
            if ((this.SetReplicationPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetReplicationPolicyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetReplicationPolicyAsync(string sessionToken, long fileID, int replicationPolicyID) {
            this.SetReplicationPolicyAsync(sessionToken, fileID, replicationPolicyID, null);
        }
        
        public void SetReplicationPolicyAsync(string sessionToken, long fileID, int replicationPolicyID, object userState) {
            if ((this.onBeginSetReplicationPolicyDelegate == null)) {
                this.onBeginSetReplicationPolicyDelegate = new BeginOperationDelegate(this.OnBeginSetReplicationPolicy);
            }
            if ((this.onEndSetReplicationPolicyDelegate == null)) {
                this.onEndSetReplicationPolicyDelegate = new EndOperationDelegate(this.OnEndSetReplicationPolicy);
            }
            if ((this.onSetReplicationPolicyCompletedDelegate == null)) {
                this.onSetReplicationPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetReplicationPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginSetReplicationPolicyDelegate, new object[] {
                        sessionToken,
                        fileID,
                        replicationPolicyID}, this.onEndSetReplicationPolicyDelegate, this.onSetReplicationPolicyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SetDefaultReplicationPolicyResponse DioWeb.DioService.IDiomedeStorage.SetDefaultReplicationPolicy(DioWeb.DioService.SetDefaultReplicationPolicyRequest request) {
            return base.Channel.SetDefaultReplicationPolicy(request);
        }
        
        public void SetDefaultReplicationPolicy(string sessionToken, int replicationPolicyID) {
            DioWeb.DioService.SetDefaultReplicationPolicyRequest inValue = new DioWeb.DioService.SetDefaultReplicationPolicyRequest();
            inValue.sessionToken = sessionToken;
            inValue.replicationPolicyID = replicationPolicyID;
            DioWeb.DioService.SetDefaultReplicationPolicyResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).SetDefaultReplicationPolicy(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginSetDefaultReplicationPolicy(DioWeb.DioService.SetDefaultReplicationPolicyRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDefaultReplicationPolicy(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDefaultReplicationPolicy(string sessionToken, int replicationPolicyID, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.SetDefaultReplicationPolicyRequest inValue = new DioWeb.DioService.SetDefaultReplicationPolicyRequest();
            inValue.sessionToken = sessionToken;
            inValue.replicationPolicyID = replicationPolicyID;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginSetDefaultReplicationPolicy(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SetDefaultReplicationPolicyResponse DioWeb.DioService.IDiomedeStorage.EndSetDefaultReplicationPolicy(System.IAsyncResult result) {
            return base.Channel.EndSetDefaultReplicationPolicy(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetDefaultReplicationPolicy(System.IAsyncResult result) {
            DioWeb.DioService.SetDefaultReplicationPolicyResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndSetDefaultReplicationPolicy(result);
        }
        
        private System.IAsyncResult OnBeginSetDefaultReplicationPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            int replicationPolicyID = ((int)(inValues[1]));
            return this.BeginSetDefaultReplicationPolicy(sessionToken, replicationPolicyID, callback, asyncState);
        }
        
        private object[] OnEndSetDefaultReplicationPolicy(System.IAsyncResult result) {
            this.EndSetDefaultReplicationPolicy(result);
            return null;
        }
        
        private void OnSetDefaultReplicationPolicyCompleted(object state) {
            if ((this.SetDefaultReplicationPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDefaultReplicationPolicyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDefaultReplicationPolicyAsync(string sessionToken, int replicationPolicyID) {
            this.SetDefaultReplicationPolicyAsync(sessionToken, replicationPolicyID, null);
        }
        
        public void SetDefaultReplicationPolicyAsync(string sessionToken, int replicationPolicyID, object userState) {
            if ((this.onBeginSetDefaultReplicationPolicyDelegate == null)) {
                this.onBeginSetDefaultReplicationPolicyDelegate = new BeginOperationDelegate(this.OnBeginSetDefaultReplicationPolicy);
            }
            if ((this.onEndSetDefaultReplicationPolicyDelegate == null)) {
                this.onEndSetDefaultReplicationPolicyDelegate = new EndOperationDelegate(this.OnEndSetDefaultReplicationPolicy);
            }
            if ((this.onSetDefaultReplicationPolicyCompletedDelegate == null)) {
                this.onSetDefaultReplicationPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDefaultReplicationPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginSetDefaultReplicationPolicyDelegate, new object[] {
                        sessionToken,
                        replicationPolicyID}, this.onEndSetDefaultReplicationPolicyDelegate, this.onSetDefaultReplicationPolicyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetDefaultReplicationPolicyResponse DioWeb.DioService.IDiomedeStorage.GetDefaultReplicationPolicy(DioWeb.DioService.GetDefaultReplicationPolicyRequest request) {
            return base.Channel.GetDefaultReplicationPolicy(request);
        }
        
        public DioWeb.DioService.ReplicationPolicy GetDefaultReplicationPolicy(string sessionToken) {
            DioWeb.DioService.GetDefaultReplicationPolicyRequest inValue = new DioWeb.DioService.GetDefaultReplicationPolicyRequest();
            inValue.sessionToken = sessionToken;
            DioWeb.DioService.GetDefaultReplicationPolicyResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).GetDefaultReplicationPolicy(inValue);
            return retVal.replicationPolicy;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginGetDefaultReplicationPolicy(DioWeb.DioService.GetDefaultReplicationPolicyRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDefaultReplicationPolicy(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDefaultReplicationPolicy(string sessionToken, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.GetDefaultReplicationPolicyRequest inValue = new DioWeb.DioService.GetDefaultReplicationPolicyRequest();
            inValue.sessionToken = sessionToken;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginGetDefaultReplicationPolicy(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetDefaultReplicationPolicyResponse DioWeb.DioService.IDiomedeStorage.EndGetDefaultReplicationPolicy(System.IAsyncResult result) {
            return base.Channel.EndGetDefaultReplicationPolicy(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DioWeb.DioService.ReplicationPolicy EndGetDefaultReplicationPolicy(System.IAsyncResult result) {
            DioWeb.DioService.GetDefaultReplicationPolicyResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndGetDefaultReplicationPolicy(result);
            return retVal.replicationPolicy;
        }
        
        private System.IAsyncResult OnBeginGetDefaultReplicationPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            return this.BeginGetDefaultReplicationPolicy(sessionToken, callback, asyncState);
        }
        
        private object[] OnEndGetDefaultReplicationPolicy(System.IAsyncResult result) {
            DioWeb.DioService.ReplicationPolicy retVal = this.EndGetDefaultReplicationPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDefaultReplicationPolicyCompleted(object state) {
            if ((this.GetDefaultReplicationPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDefaultReplicationPolicyCompleted(this, new GetDefaultReplicationPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDefaultReplicationPolicyAsync(string sessionToken) {
            this.GetDefaultReplicationPolicyAsync(sessionToken, null);
        }
        
        public void GetDefaultReplicationPolicyAsync(string sessionToken, object userState) {
            if ((this.onBeginGetDefaultReplicationPolicyDelegate == null)) {
                this.onBeginGetDefaultReplicationPolicyDelegate = new BeginOperationDelegate(this.OnBeginGetDefaultReplicationPolicy);
            }
            if ((this.onEndGetDefaultReplicationPolicyDelegate == null)) {
                this.onEndGetDefaultReplicationPolicyDelegate = new EndOperationDelegate(this.OnEndGetDefaultReplicationPolicy);
            }
            if ((this.onGetDefaultReplicationPolicyCompletedDelegate == null)) {
                this.onGetDefaultReplicationPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDefaultReplicationPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginGetDefaultReplicationPolicyDelegate, new object[] {
                        sessionToken}, this.onEndGetDefaultReplicationPolicyDelegate, this.onGetDefaultReplicationPolicyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.CreateSecretResponse DioWeb.DioService.IDiomedeStorage.CreateOAuthSecretAndKey(DioWeb.DioService.CreateSecretRequest request) {
            return base.Channel.CreateOAuthSecretAndKey(request);
        }
        
        public DioWeb.DioService.ConsumerData CreateOAuthSecretAndKey(string sessionToken, string username, string password) {
            DioWeb.DioService.CreateSecretRequest inValue = new DioWeb.DioService.CreateSecretRequest();
            inValue.sessionToken = sessionToken;
            inValue.username = username;
            inValue.password = password;
            DioWeb.DioService.CreateSecretResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).CreateOAuthSecretAndKey(inValue);
            return retVal.consumerData;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginCreateOAuthSecretAndKey(DioWeb.DioService.CreateSecretRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateOAuthSecretAndKey(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateOAuthSecretAndKey(string sessionToken, string username, string password, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.CreateSecretRequest inValue = new DioWeb.DioService.CreateSecretRequest();
            inValue.sessionToken = sessionToken;
            inValue.username = username;
            inValue.password = password;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginCreateOAuthSecretAndKey(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.CreateSecretResponse DioWeb.DioService.IDiomedeStorage.EndCreateOAuthSecretAndKey(System.IAsyncResult result) {
            return base.Channel.EndCreateOAuthSecretAndKey(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DioWeb.DioService.ConsumerData EndCreateOAuthSecretAndKey(System.IAsyncResult result) {
            DioWeb.DioService.CreateSecretResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndCreateOAuthSecretAndKey(result);
            return retVal.consumerData;
        }
        
        private System.IAsyncResult OnBeginCreateOAuthSecretAndKey(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            string username = ((string)(inValues[1]));
            string password = ((string)(inValues[2]));
            return this.BeginCreateOAuthSecretAndKey(sessionToken, username, password, callback, asyncState);
        }
        
        private object[] OnEndCreateOAuthSecretAndKey(System.IAsyncResult result) {
            DioWeb.DioService.ConsumerData retVal = this.EndCreateOAuthSecretAndKey(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateOAuthSecretAndKeyCompleted(object state) {
            if ((this.CreateOAuthSecretAndKeyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateOAuthSecretAndKeyCompleted(this, new CreateOAuthSecretAndKeyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateOAuthSecretAndKeyAsync(string sessionToken, string username, string password) {
            this.CreateOAuthSecretAndKeyAsync(sessionToken, username, password, null);
        }
        
        public void CreateOAuthSecretAndKeyAsync(string sessionToken, string username, string password, object userState) {
            if ((this.onBeginCreateOAuthSecretAndKeyDelegate == null)) {
                this.onBeginCreateOAuthSecretAndKeyDelegate = new BeginOperationDelegate(this.OnBeginCreateOAuthSecretAndKey);
            }
            if ((this.onEndCreateOAuthSecretAndKeyDelegate == null)) {
                this.onEndCreateOAuthSecretAndKeyDelegate = new EndOperationDelegate(this.OnEndCreateOAuthSecretAndKey);
            }
            if ((this.onCreateOAuthSecretAndKeyCompletedDelegate == null)) {
                this.onCreateOAuthSecretAndKeyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateOAuthSecretAndKeyCompleted);
            }
            base.InvokeAsync(this.onBeginCreateOAuthSecretAndKeyDelegate, new object[] {
                        sessionToken,
                        username,
                        password}, this.onEndCreateOAuthSecretAndKeyDelegate, this.onCreateOAuthSecretAndKeyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.LoginResponse DioWeb.DioService.IDiomedeStorage.Login(DioWeb.DioService.LoginRequest request) {
            return base.Channel.Login(request);
        }
        
        public string Login(string username, string password) {
            DioWeb.DioService.LoginRequest inValue = new DioWeb.DioService.LoginRequest();
            inValue.username = username;
            inValue.password = password;
            DioWeb.DioService.LoginResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).Login(inValue);
            return retVal.sessionToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginLogin(DioWeb.DioService.LoginRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogin(string username, string password, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.LoginRequest inValue = new DioWeb.DioService.LoginRequest();
            inValue.username = username;
            inValue.password = password;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginLogin(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.LoginResponse DioWeb.DioService.IDiomedeStorage.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndLogin(System.IAsyncResult result) {
            DioWeb.DioService.LoginResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndLogin(result);
            return retVal.sessionToken;
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return this.BeginLogin(username, password, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            string retVal = this.EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        public void LoginAsync(string username, string password, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        username,
                        password}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.LogoutResponse DioWeb.DioService.IDiomedeStorage.Logout(DioWeb.DioService.LogoutRequest request) {
            return base.Channel.Logout(request);
        }
        
        public void Logout(string sessionToken) {
            DioWeb.DioService.LogoutRequest inValue = new DioWeb.DioService.LogoutRequest();
            inValue.sessionToken = sessionToken;
            DioWeb.DioService.LogoutResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).Logout(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginLogout(DioWeb.DioService.LogoutRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogout(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogout(string sessionToken, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.LogoutRequest inValue = new DioWeb.DioService.LogoutRequest();
            inValue.sessionToken = sessionToken;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginLogout(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.LogoutResponse DioWeb.DioService.IDiomedeStorage.EndLogout(System.IAsyncResult result) {
            return base.Channel.EndLogout(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLogout(System.IAsyncResult result) {
            DioWeb.DioService.LogoutResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndLogout(result);
        }
        
        private System.IAsyncResult OnBeginLogout(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            return this.BeginLogout(sessionToken, callback, asyncState);
        }
        
        private object[] OnEndLogout(System.IAsyncResult result) {
            this.EndLogout(result);
            return null;
        }
        
        private void OnLogoutCompleted(object state) {
            if ((this.LogoutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogoutAsync(string sessionToken) {
            this.LogoutAsync(sessionToken, null);
        }
        
        public void LogoutAsync(string sessionToken, object userState) {
            if ((this.onBeginLogoutDelegate == null)) {
                this.onBeginLogoutDelegate = new BeginOperationDelegate(this.OnBeginLogout);
            }
            if ((this.onEndLogoutDelegate == null)) {
                this.onEndLogoutDelegate = new EndOperationDelegate(this.OnEndLogout);
            }
            if ((this.onLogoutCompletedDelegate == null)) {
                this.onLogoutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogoutCompleted);
            }
            base.InvokeAsync(this.onBeginLogoutDelegate, new object[] {
                        sessionToken}, this.onEndLogoutDelegate, this.onLogoutCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetUploadTokenResponse DioWeb.DioService.IDiomedeStorage.GetUploadToken(DioWeb.DioService.GetUploadTokenRequest request) {
            return base.Channel.GetUploadToken(request);
        }
        
        public string GetUploadToken(string sessionToken, string fileName, long reserveBytes, string callbackAddress) {
            DioWeb.DioService.GetUploadTokenRequest inValue = new DioWeb.DioService.GetUploadTokenRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileName = fileName;
            inValue.reserveBytes = reserveBytes;
            inValue.callbackAddress = callbackAddress;
            DioWeb.DioService.GetUploadTokenResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).GetUploadToken(inValue);
            return retVal.uploadToken;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginGetUploadToken(DioWeb.DioService.GetUploadTokenRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUploadToken(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUploadToken(string sessionToken, string fileName, long reserveBytes, string callbackAddress, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.GetUploadTokenRequest inValue = new DioWeb.DioService.GetUploadTokenRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileName = fileName;
            inValue.reserveBytes = reserveBytes;
            inValue.callbackAddress = callbackAddress;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginGetUploadToken(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetUploadTokenResponse DioWeb.DioService.IDiomedeStorage.EndGetUploadToken(System.IAsyncResult result) {
            return base.Channel.EndGetUploadToken(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetUploadToken(System.IAsyncResult result) {
            DioWeb.DioService.GetUploadTokenResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndGetUploadToken(result);
            return retVal.uploadToken;
        }
        
        private System.IAsyncResult OnBeginGetUploadToken(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            long reserveBytes = ((long)(inValues[2]));
            string callbackAddress = ((string)(inValues[3]));
            return this.BeginGetUploadToken(sessionToken, fileName, reserveBytes, callbackAddress, callback, asyncState);
        }
        
        private object[] OnEndGetUploadToken(System.IAsyncResult result) {
            string retVal = this.EndGetUploadToken(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUploadTokenCompleted(object state) {
            if ((this.GetUploadTokenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUploadTokenCompleted(this, new GetUploadTokenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUploadTokenAsync(string sessionToken, string fileName, long reserveBytes, string callbackAddress) {
            this.GetUploadTokenAsync(sessionToken, fileName, reserveBytes, callbackAddress, null);
        }
        
        public void GetUploadTokenAsync(string sessionToken, string fileName, long reserveBytes, string callbackAddress, object userState) {
            if ((this.onBeginGetUploadTokenDelegate == null)) {
                this.onBeginGetUploadTokenDelegate = new BeginOperationDelegate(this.OnBeginGetUploadToken);
            }
            if ((this.onEndGetUploadTokenDelegate == null)) {
                this.onEndGetUploadTokenDelegate = new EndOperationDelegate(this.OnEndGetUploadToken);
            }
            if ((this.onGetUploadTokenCompletedDelegate == null)) {
                this.onGetUploadTokenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUploadTokenCompleted);
            }
            base.InvokeAsync(this.onBeginGetUploadTokenDelegate, new object[] {
                        sessionToken,
                        fileName,
                        reserveBytes,
                        callbackAddress}, this.onEndGetUploadTokenDelegate, this.onGetUploadTokenCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetDownloadURLResponse DioWeb.DioService.IDiomedeStorage.GetDownloadURL(DioWeb.DioService.GetDownloadURLRequest request) {
            return base.Channel.GetDownloadURL(request);
        }
        
        public string GetDownloadURL(string sessionToken, long fileID, System.Nullable<int> maxDownloads, System.Nullable<int> lifetimeHours, System.Nullable<int> maxUniqueIPs, string errorRedirect) {
            DioWeb.DioService.GetDownloadURLRequest inValue = new DioWeb.DioService.GetDownloadURLRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.maxDownloads = maxDownloads;
            inValue.lifetimeHours = lifetimeHours;
            inValue.maxUniqueIPs = maxUniqueIPs;
            inValue.errorRedirect = errorRedirect;
            DioWeb.DioService.GetDownloadURLResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).GetDownloadURL(inValue);
            return retVal.downloadURL;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginGetDownloadURL(DioWeb.DioService.GetDownloadURLRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDownloadURL(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDownloadURL(string sessionToken, long fileID, System.Nullable<int> maxDownloads, System.Nullable<int> lifetimeHours, System.Nullable<int> maxUniqueIPs, string errorRedirect, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.GetDownloadURLRequest inValue = new DioWeb.DioService.GetDownloadURLRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.maxDownloads = maxDownloads;
            inValue.lifetimeHours = lifetimeHours;
            inValue.maxUniqueIPs = maxUniqueIPs;
            inValue.errorRedirect = errorRedirect;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginGetDownloadURL(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.GetDownloadURLResponse DioWeb.DioService.IDiomedeStorage.EndGetDownloadURL(System.IAsyncResult result) {
            return base.Channel.EndGetDownloadURL(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetDownloadURL(System.IAsyncResult result) {
            DioWeb.DioService.GetDownloadURLResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndGetDownloadURL(result);
            return retVal.downloadURL;
        }
        
        private System.IAsyncResult OnBeginGetDownloadURL(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            long fileID = ((long)(inValues[1]));
            System.Nullable<int> maxDownloads = ((System.Nullable<int>)(inValues[2]));
            System.Nullable<int> lifetimeHours = ((System.Nullable<int>)(inValues[3]));
            System.Nullable<int> maxUniqueIPs = ((System.Nullable<int>)(inValues[4]));
            string errorRedirect = ((string)(inValues[5]));
            return this.BeginGetDownloadURL(sessionToken, fileID, maxDownloads, lifetimeHours, maxUniqueIPs, errorRedirect, callback, asyncState);
        }
        
        private object[] OnEndGetDownloadURL(System.IAsyncResult result) {
            string retVal = this.EndGetDownloadURL(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDownloadURLCompleted(object state) {
            if ((this.GetDownloadURLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDownloadURLCompleted(this, new GetDownloadURLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDownloadURLAsync(string sessionToken, long fileID, System.Nullable<int> maxDownloads, System.Nullable<int> lifetimeHours, System.Nullable<int> maxUniqueIPs, string errorRedirect) {
            this.GetDownloadURLAsync(sessionToken, fileID, maxDownloads, lifetimeHours, maxUniqueIPs, errorRedirect, null);
        }
        
        public void GetDownloadURLAsync(string sessionToken, long fileID, System.Nullable<int> maxDownloads, System.Nullable<int> lifetimeHours, System.Nullable<int> maxUniqueIPs, string errorRedirect, object userState) {
            if ((this.onBeginGetDownloadURLDelegate == null)) {
                this.onBeginGetDownloadURLDelegate = new BeginOperationDelegate(this.OnBeginGetDownloadURL);
            }
            if ((this.onEndGetDownloadURLDelegate == null)) {
                this.onEndGetDownloadURLDelegate = new EndOperationDelegate(this.OnEndGetDownloadURL);
            }
            if ((this.onGetDownloadURLCompletedDelegate == null)) {
                this.onGetDownloadURLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDownloadURLCompleted);
            }
            base.InvokeAsync(this.onBeginGetDownloadURLDelegate, new object[] {
                        sessionToken,
                        fileID,
                        maxDownloads,
                        lifetimeHours,
                        maxUniqueIPs,
                        errorRedirect}, this.onEndGetDownloadURLDelegate, this.onGetDownloadURLCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SearchFilesResponse DioWeb.DioService.IDiomedeStorage.SearchFiles(DioWeb.DioService.SearchFilesRequest request) {
            return base.Channel.SearchFiles(request);
        }
        
        public System.Collections.Generic.List<DioWeb.DioService.FileProperties> SearchFiles(
                    string sessionToken, 
                    System.Nullable<long> fileID, 
                    string fileName, 
                    string hashMD5, 
                    string hashSHA1, 
                    System.Nullable<long> minSize, 
                    System.Nullable<long> maxSize, 
                    System.Nullable<System.DateTime> startDate, 
                    System.Nullable<System.DateTime> endDate, 
                    System.Nullable<bool> isDeleted, 
                    System.Nullable<bool> isComplete, 
                    string metaName, 
                    string metaValue, 
                    long offset, 
                    long pageSize, 
                    out long totalResults) {
            DioWeb.DioService.SearchFilesRequest inValue = new DioWeb.DioService.SearchFilesRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.fileName = fileName;
            inValue.hashMD5 = hashMD5;
            inValue.hashSHA1 = hashSHA1;
            inValue.minSize = minSize;
            inValue.maxSize = maxSize;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.isDeleted = isDeleted;
            inValue.isComplete = isComplete;
            inValue.metaName = metaName;
            inValue.metaValue = metaValue;
            inValue.offset = offset;
            inValue.pageSize = pageSize;
            DioWeb.DioService.SearchFilesResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).SearchFiles(inValue);
            totalResults = retVal.totalResults;
            return retVal.matchedFiles;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginSearchFiles(DioWeb.DioService.SearchFilesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchFiles(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearchFiles(
                    string sessionToken, 
                    System.Nullable<long> fileID, 
                    string fileName, 
                    string hashMD5, 
                    string hashSHA1, 
                    System.Nullable<long> minSize, 
                    System.Nullable<long> maxSize, 
                    System.Nullable<System.DateTime> startDate, 
                    System.Nullable<System.DateTime> endDate, 
                    System.Nullable<bool> isDeleted, 
                    System.Nullable<bool> isComplete, 
                    string metaName, 
                    string metaValue, 
                    long offset, 
                    long pageSize, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            DioWeb.DioService.SearchFilesRequest inValue = new DioWeb.DioService.SearchFilesRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.fileName = fileName;
            inValue.hashMD5 = hashMD5;
            inValue.hashSHA1 = hashSHA1;
            inValue.minSize = minSize;
            inValue.maxSize = maxSize;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.isDeleted = isDeleted;
            inValue.isComplete = isComplete;
            inValue.metaName = metaName;
            inValue.metaValue = metaValue;
            inValue.offset = offset;
            inValue.pageSize = pageSize;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginSearchFiles(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SearchFilesResponse DioWeb.DioService.IDiomedeStorage.EndSearchFiles(System.IAsyncResult result) {
            return base.Channel.EndSearchFiles(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<DioWeb.DioService.FileProperties> EndSearchFiles(System.IAsyncResult result, out long totalResults) {
            DioWeb.DioService.SearchFilesResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndSearchFiles(result);
            totalResults = retVal.totalResults;
            return retVal.matchedFiles;
        }
        
        private System.IAsyncResult OnBeginSearchFiles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            System.Nullable<long> fileID = ((System.Nullable<long>)(inValues[1]));
            string fileName = ((string)(inValues[2]));
            string hashMD5 = ((string)(inValues[3]));
            string hashSHA1 = ((string)(inValues[4]));
            System.Nullable<long> minSize = ((System.Nullable<long>)(inValues[5]));
            System.Nullable<long> maxSize = ((System.Nullable<long>)(inValues[6]));
            System.Nullable<System.DateTime> startDate = ((System.Nullable<System.DateTime>)(inValues[7]));
            System.Nullable<System.DateTime> endDate = ((System.Nullable<System.DateTime>)(inValues[8]));
            System.Nullable<bool> isDeleted = ((System.Nullable<bool>)(inValues[9]));
            System.Nullable<bool> isComplete = ((System.Nullable<bool>)(inValues[10]));
            string metaName = ((string)(inValues[11]));
            string metaValue = ((string)(inValues[12]));
            long offset = ((long)(inValues[13]));
            long pageSize = ((long)(inValues[14]));
            return this.BeginSearchFiles(sessionToken, fileID, fileName, hashMD5, hashSHA1, minSize, maxSize, startDate, endDate, isDeleted, isComplete, metaName, metaValue, offset, pageSize, callback, asyncState);
        }
        
        private object[] OnEndSearchFiles(System.IAsyncResult result) {
            long totalResults = this.GetDefaultValueForInitialization<long>();
            System.Collections.Generic.List<DioWeb.DioService.FileProperties> retVal = this.EndSearchFiles(result, out totalResults);
            return new object[] {
                    totalResults,
                    retVal};
        }
        
        private void OnSearchFilesCompleted(object state) {
            if ((this.SearchFilesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchFilesCompleted(this, new SearchFilesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchFilesAsync(string sessionToken, System.Nullable<long> fileID, string fileName, string hashMD5, string hashSHA1, System.Nullable<long> minSize, System.Nullable<long> maxSize, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Nullable<bool> isDeleted, System.Nullable<bool> isComplete, string metaName, string metaValue, long offset, long pageSize) {
            this.SearchFilesAsync(sessionToken, fileID, fileName, hashMD5, hashSHA1, minSize, maxSize, startDate, endDate, isDeleted, isComplete, metaName, metaValue, offset, pageSize, null);
        }
        
        public void SearchFilesAsync(
                    string sessionToken, 
                    System.Nullable<long> fileID, 
                    string fileName, 
                    string hashMD5, 
                    string hashSHA1, 
                    System.Nullable<long> minSize, 
                    System.Nullable<long> maxSize, 
                    System.Nullable<System.DateTime> startDate, 
                    System.Nullable<System.DateTime> endDate, 
                    System.Nullable<bool> isDeleted, 
                    System.Nullable<bool> isComplete, 
                    string metaName, 
                    string metaValue, 
                    long offset, 
                    long pageSize, 
                    object userState) {
            if ((this.onBeginSearchFilesDelegate == null)) {
                this.onBeginSearchFilesDelegate = new BeginOperationDelegate(this.OnBeginSearchFiles);
            }
            if ((this.onEndSearchFilesDelegate == null)) {
                this.onEndSearchFilesDelegate = new EndOperationDelegate(this.OnEndSearchFiles);
            }
            if ((this.onSearchFilesCompletedDelegate == null)) {
                this.onSearchFilesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchFilesCompleted);
            }
            base.InvokeAsync(this.onBeginSearchFilesDelegate, new object[] {
                        sessionToken,
                        fileID,
                        fileName,
                        hashMD5,
                        hashSHA1,
                        minSize,
                        maxSize,
                        startDate,
                        endDate,
                        isDeleted,
                        isComplete,
                        metaName,
                        metaValue,
                        offset,
                        pageSize}, this.onEndSearchFilesDelegate, this.onSearchFilesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SearchFilesTotalResponse DioWeb.DioService.IDiomedeStorage.SearchFilesTotal(DioWeb.DioService.SearchFilesTotalRequest request) {
            return base.Channel.SearchFilesTotal(request);
        }
        
        public DioWeb.DioService.SearchFilesTotalInfo SearchFilesTotal(string sessionToken, System.Nullable<long> fileID, string fileName, string hashMD5, string hashSHA1, System.Nullable<long> minSize, System.Nullable<long> maxSize, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Nullable<bool> isComplete, string metaName, string metaValue) {
            DioWeb.DioService.SearchFilesTotalRequest inValue = new DioWeb.DioService.SearchFilesTotalRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.fileName = fileName;
            inValue.hashMD5 = hashMD5;
            inValue.hashSHA1 = hashSHA1;
            inValue.minSize = minSize;
            inValue.maxSize = maxSize;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.isComplete = isComplete;
            inValue.metaName = metaName;
            inValue.metaValue = metaValue;
            DioWeb.DioService.SearchFilesTotalResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).SearchFilesTotal(inValue);
            return retVal.fileTotalInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DioWeb.DioService.IDiomedeStorage.BeginSearchFilesTotal(DioWeb.DioService.SearchFilesTotalRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchFilesTotal(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearchFilesTotal(string sessionToken, System.Nullable<long> fileID, string fileName, string hashMD5, string hashSHA1, System.Nullable<long> minSize, System.Nullable<long> maxSize, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Nullable<bool> isComplete, string metaName, string metaValue, System.AsyncCallback callback, object asyncState) {
            DioWeb.DioService.SearchFilesTotalRequest inValue = new DioWeb.DioService.SearchFilesTotalRequest();
            inValue.sessionToken = sessionToken;
            inValue.fileID = fileID;
            inValue.fileName = fileName;
            inValue.hashMD5 = hashMD5;
            inValue.hashSHA1 = hashSHA1;
            inValue.minSize = minSize;
            inValue.maxSize = maxSize;
            inValue.startDate = startDate;
            inValue.endDate = endDate;
            inValue.isComplete = isComplete;
            inValue.metaName = metaName;
            inValue.metaValue = metaValue;
            return ((DioWeb.DioService.IDiomedeStorage)(this)).BeginSearchFilesTotal(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DioWeb.DioService.SearchFilesTotalResponse DioWeb.DioService.IDiomedeStorage.EndSearchFilesTotal(System.IAsyncResult result) {
            return base.Channel.EndSearchFilesTotal(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DioWeb.DioService.SearchFilesTotalInfo EndSearchFilesTotal(System.IAsyncResult result) {
            DioWeb.DioService.SearchFilesTotalResponse retVal = ((DioWeb.DioService.IDiomedeStorage)(this)).EndSearchFilesTotal(result);
            return retVal.fileTotalInfo;
        }
        
        private System.IAsyncResult OnBeginSearchFilesTotal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sessionToken = ((string)(inValues[0]));
            System.Nullable<long> fileID = ((System.Nullable<long>)(inValues[1]));
            string fileName = ((string)(inValues[2]));
            string hashMD5 = ((string)(inValues[3]));
            string hashSHA1 = ((string)(inValues[4]));
            System.Nullable<long> minSize = ((System.Nullable<long>)(inValues[5]));
            System.Nullable<long> maxSize = ((System.Nullable<long>)(inValues[6]));
            System.Nullable<System.DateTime> startDate = ((System.Nullable<System.DateTime>)(inValues[7]));
            System.Nullable<System.DateTime> endDate = ((System.Nullable<System.DateTime>)(inValues[8]));
            System.Nullable<bool> isComplete = ((System.Nullable<bool>)(inValues[9]));
            string metaName = ((string)(inValues[10]));
            string metaValue = ((string)(inValues[11]));
            return this.BeginSearchFilesTotal(sessionToken, fileID, fileName, hashMD5, hashSHA1, minSize, maxSize, startDate, endDate, isComplete, metaName, metaValue, callback, asyncState);
        }
        
        private object[] OnEndSearchFilesTotal(System.IAsyncResult result) {
            DioWeb.DioService.SearchFilesTotalInfo retVal = this.EndSearchFilesTotal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchFilesTotalCompleted(object state) {
            if ((this.SearchFilesTotalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchFilesTotalCompleted(this, new SearchFilesTotalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchFilesTotalAsync(string sessionToken, System.Nullable<long> fileID, string fileName, string hashMD5, string hashSHA1, System.Nullable<long> minSize, System.Nullable<long> maxSize, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Nullable<bool> isComplete, string metaName, string metaValue) {
            this.SearchFilesTotalAsync(sessionToken, fileID, fileName, hashMD5, hashSHA1, minSize, maxSize, startDate, endDate, isComplete, metaName, metaValue, null);
        }
        
        public void SearchFilesTotalAsync(string sessionToken, System.Nullable<long> fileID, string fileName, string hashMD5, string hashSHA1, System.Nullable<long> minSize, System.Nullable<long> maxSize, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.Nullable<bool> isComplete, string metaName, string metaValue, object userState) {
            if ((this.onBeginSearchFilesTotalDelegate == null)) {
                this.onBeginSearchFilesTotalDelegate = new BeginOperationDelegate(this.OnBeginSearchFilesTotal);
            }
            if ((this.onEndSearchFilesTotalDelegate == null)) {
                this.onEndSearchFilesTotalDelegate = new EndOperationDelegate(this.OnEndSearchFilesTotal);
            }
            if ((this.onSearchFilesTotalCompletedDelegate == null)) {
                this.onSearchFilesTotalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchFilesTotalCompleted);
            }
            base.InvokeAsync(this.onBeginSearchFilesTotalDelegate, new object[] {
                        sessionToken,
                        fileID,
                        fileName,
                        hashMD5,
                        hashSHA1,
                        minSize,
                        maxSize,
                        startDate,
                        endDate,
                        isComplete,
                        metaName,
                        metaValue}, this.onEndSearchFilesTotalDelegate, this.onSearchFilesTotalCompletedDelegate, userState);
        }
    }
}
